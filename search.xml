<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>收藏的几个前端实用网站</title>
    <url>/2018/11/18/IT/2018/111801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>收藏了一些实用的网站，持续更新中</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一、颜色类网站"><a href="#一、颜色类网站" class="headerlink" title="一、颜色类网站"></a>一、颜色类网站</h3><p><a href="http://color.oulu.me/" target="_blank" rel="noopener">http://color.oulu.me/</a></p>
<p>一个集合180种免费的线性渐变网站 ，可在任何网站使用;</p>
<p><a href="http://colorhunt.co" target="_blank" rel="noopener">http://colorhunt.co</a></p>
<p>这个网站是一个免费开放的色彩灵感平台，拥有数千种时尚的手工挑选调色板;</p>
<p><a href="https://webgradients.com/" target="_blank" rel="noopener">https://webgradients.com/</a></p>
<p>180种渐变方案供你选择，可以直接复制CSS样式应用到网页中;</p>
<p><a href="https://color.adobe.com/zh/create/color-wheel" target="_blank" rel="noopener">https://color.adobe.com/zh/create/color-wheel</a></p>
<p>这个是Adobe公司出的，他提供了多种配色方案。我们点击圆盘中间的点，就可以调整出我们想要的配色方案;</p>
<p><a href="http://www.bootcss.com/p/websafecolors/" target="_blank" rel="noopener">http://www.bootcss.com/p/websafecolors/</a></p>
<p>这个网站是为WEB设计，开发中经常用到的安全色。网站内列出了颜色的十六进制码和RGB码，复制粘贴就可以了;</p>
<p><a href="http://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">http://www.sioe.cn/yingyong/yanse-rgb-16/</a></p>
<p>这是一个在线RGB和十六进制颜色码转换工具。在对应的位置填入十六进制代码，点击转换，我们就可以获取到RGB颜色的代码了;</p>
<h3 id="二、图标类网站"><a href="#二、图标类网站" class="headerlink" title="二、图标类网站"></a>二、图标类网站</h3><p><a href="http://www.iconfont.cn/plus" target="_blank" rel="noopener">http://www.iconfont.cn/plus</a></p>
<p>这是阿里巴巴旗下的图标库网站，直接搜索关键词就可以找到大批的图标。下载图标的时候我们还可以选择颜色、大小、格式，根据自己的需要下载就好了;</p>
<p><a href="http://www.easyicon.net/iconsearch/ios/" target="_blank" rel="noopener">http://www.easyicon.net/iconsearch/ios/</a></p>
<p>这也是一个非常有名的图标库，与上面那个不同的是，这里的图标不是单一颜色的，而是设计好的颜色。下载图标也很简单，直接点击对应图标上面的格式就可以下载;</p>
<p><a href="http://www.thinkcmf.com/font/search.html" target="_blank" rel="noopener">http://www.thinkcmf.com/font/search.html</a></p>
<p>奥森图标（Font Awesome）提供丰富的矢量字体图标—通过CSS可以任意控制所有图标的大小 ，颜色，阴影;</p>
<h3 id="三、插件类网站"><a href="#三、插件类网站" class="headerlink" title="三、插件类网站"></a>三、插件类网站</h3><p><a href="http://www.jq22.com/" target="_blank" rel="noopener">http://www.jq22.com/</a></p>
<p>jQuery插件库;</p>
<p><a href="http://www.htmleaf.com/" target="_blank" rel="noopener">http://www.htmleaf.com/</a></p>
<p>这个网站与上一个网站类似，也提供了大量的jQuery插件;</p>
<p><a href="http://www.layui.com/" target="_blank" rel="noopener">http://www.layui.com/</a></p>
<p>这是一个强大的模块化前端框架;</p>
<h3 id="四、素材类网站"><a href="#四、素材类网站" class="headerlink" title="四、素材类网站"></a>四、素材类网站</h3><p><a href="http://588ku.com/" target="_blank" rel="noopener">http://588ku.com/</a></p>
<p>千库网，一个免费下载图片素材的网站;</p>
<p><a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a></p>
<p>Unsplash是一个分享免费高质量照片的网站，照片分辨率都挺大，而且都是真实的摄影师作品，图片多是风景和静物;</p>
<h3 id="五、字体类网站"><a href="#五、字体类网站" class="headerlink" title="五、字体类网站"></a>五、字体类网站</h3><p><a href="http://www.youziku.com/onlinefont/index" target="_blank" rel="noopener">http://www.youziku.com/onlinefont/index</a></p>
<p>有字库，一个免下载字体，直接在线引用字体的网站;</p>
<p><a href="http://www.fonturl.com/" target="_blank" rel="noopener">http://www.fonturl.com/</a></p>
<p>全球最大的字体网址导航网站;</p>
<p><a href="http://www.homefont.cn/" target="_blank" rel="noopener">http://www.homefont.cn/</a></p>
<p>字体之家，包含17400多种有效字体下载-优秀的免费字体下载站;</p>
<h3 id="六、工具类"><a href="#六、工具类" class="headerlink" title="六、工具类"></a>六、工具类</h3><p><a href="https://tool.lu/tables" target="_blank" rel="noopener">https://tool.lu/tables</a></p>
<p>md表格生成工具;</p>
<p><a href="https://www.chuangkit.com/koutu1/index.html" target="_blank" rel="noopener">https://www.chuangkit.com/koutu1/index.html</a></p>
<p>好用的在线抠图网站;</p>
<p><a href="https://www.logaster.cn" target="_blank" rel="noopener">https://www.logaster.cn</a></p>
<p>免费制作logo的网站;</p>
<p><a href="http://tool.lu/" target="_blank" rel="noopener">http://tool.lu/</a></p>
<p>一个在线工具网站，包含大量在线工具;</p>
<p><a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a></p>
<p>一个在线图片压缩工具，可以批量使用;</p>
<p><a href="http://www.css88.com/" target="_blank" rel="noopener">http://www.css88.com/</a></p>
<p>各种前端类工具和技术文章;</p>
<p><a href="http://tool.lanrentuku.com/cssformat/" target="_blank" rel="noopener">http://tool.lanrentuku.com/cssformat/</a></p>
<p>css代码格式化工具;</p>
<p><a href="http://www.bejson.com/" target="_blank" rel="noopener">http://www.bejson.com/</a> 或 <a href="http://tool.oschina.net/codeformat/json" target="_blank" rel="noopener">http://tool.oschina.net/codeformat/json</a></p>
<p>json在线格式化工具;</p>
<p><a href="http://www.wxapp-union.com/" target="_blank" rel="noopener">http://www.wxapp-union.com/</a></p>
<p>小程序社区;</p>
<p><a href="https://www.91ud.com/" target="_blank" rel="noopener">https://www.91ud.com/</a></p>
<p>小程序商店;</p>
<p><a href="https://www.uupoop.com/" target="_blank" rel="noopener">https://www.uupoop.com/</a></p>
<p>ps在线;</p>
<p><a href="https://codepen.io" target="_blank" rel="noopener">https://codepen.io</a></p>
<p>前端编码神器;</p>
<p><a href="https://www.cnblogs.com/aobing/p/11930859.html" target="_blank" rel="noopener">https://www.cnblogs.com/aobing/p/11930859.html</a></p>
<p>顶级程序员工具集;</p>
<p><a href="http://fonts.safe.360.cn" target="_blank" rel="noopener">http://fonts.safe.360.cn</a></p>
<p>360查字体是否侵权;</p>
<p><a href="https://www.meihuama.com" target="_blank" rel="noopener">https://www.meihuama.com</a> （美化码） 或 <a href="http://www.9thws.com" target="_blank" rel="noopener">http://www.9thws.com</a> （第九工场） 或 <a href="http://www.mobanma.com/" target="_blank" rel="noopener">http://www.mobanma.com/</a> （模板码）</p>
<p>免费在线美化二维码;</p>
<h3 id="七、学习类"><a href="#七、学习类" class="headerlink" title="七、学习类"></a>七、学习类</h3><p><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">https://www.cnblogs.com/</a></p>
<p>博客园是一个面向开发者的知识分享社区;</p>
<p><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">https://www.liaoxuefeng.com/</a></p>
<p>廖雪峰老师官网，各种教学，可以看看;</p>
<p><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">http://es6.ruanyifeng.com/</a></p>
<p>es6入门-阮一峰老师;</p>
<p><a href="http://www.psjia.com/photoshop/newbie/" target="_blank" rel="noopener">http://www.psjia.com/photoshop/newbie/</a></p>
<p>PS教程网;</p>
<p><a href="https://brushes8.com/category/photoshop-brushes/page/2" target="_blank" rel="noopener">https://brushes8.com/category/photoshop-brushes/page/2</a></p>
<p>PS笔刷下载;</p>
<p><a href="https://fly.layui.com/extend/" target="_blank" rel="noopener">https://fly.layui.com/extend/</a></p>
<p>layui第三方组件平台;</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>SEO-搜索网址出现的问题及解决方案</title>
    <url>/2018/12/18/IT/2018/121801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>前段时间，在使用360搜索我的博客网址的时候，360搜索提示“提醒：该页面因服务器不稳定可能无法正常访问!”；百度搜索时没收录网站；然后搜索了一下解决方案；</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>前段时间，在使用360搜索我的博客网址（<a href="www.btluo.com">www.btluo.com</a>）的时候，360搜索提示“提醒：该页面因服务器不稳定可能无法正常访问!”</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e66e443b2835ebeb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>这个对网站的影响还是蛮大的，尤其是做360搜索引擎的SEO站长，如果处理不及时，网站在360搜索的收录量就会大量下降，甚至对网站的信任度也有一定影响。然后搜索了一下解决方案：</p>
<p>百度说：搜索引擎在抓取网站时，如发现网站经常无法访问，就会在搜索结果中出现此类提示，并给出一下解决方法（<a href="https://bbs.360.cn/thread-15235172-1-1.html" target="_blank" rel="noopener">https://bbs.360.cn/thread-15235172-1-1.html</a>）：</p>
<p><strong>发现被标记的排查方法，以及标记去除的方法：</strong></p>
<p>1.核实网站是否拦截了360搜索蜘蛛，并导致蜘蛛下载站点失败，建议在服务器中设置访问白名单，将我们的蜘蛛ip加到网站访问允许的白名单中，蜘蛛ip为：<a href="http://www.so.com/help/spider_ip.html" target="_blank" rel="noopener">http://www.so.com/help/spider_ip.html</a>;</p>
<p>2.如果是https站点，请您先核实站点设置ssl证书是否正确，如存在异常，建议在服务器或联系空间服务商进行调整；</p>
<p>3.网站是否曾有临时关站、访问不稳定、服务器并发次数配额过少的情况，如有，请您对服务器、域名解析等影响访问的关键环节进行检查，确保网站访问可用性;</p>
<p>4.后续请务必注意在访问稳定性上进行提升优化，不要频繁进行变更交割操作，但是如果网站本身已经关闭：请合理设置网站为协议死链。</p>
<p>请务必辛苦检查上述几点是否无问题，否则标记可能无法去除，并且可能导致网站收录等其他问题。</p>
<p><strong>申诉反馈</strong></p>
<p>确认无问题之后，可以通过站长平台，提交不稳定标记申诉反馈，提交的流程如下：</p>
<p>1.通过<a href="http://zhanzhang.so.com/" target="_blank" rel="noopener">http://zhanzhang.so.com/</a>，访问360站长平台，并登录帐号：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1597310806a27566.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.点击右下角“反馈中心”的浮层按钮：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-681a47b0d9a32c7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>3.在页面（<a href="http://zhanzhang.so.com/ExceptionReport/instable" target="_blank" rel="noopener">http://zhanzhang.so.com/ExceptionReport/instable</a>）中填写相关的网址信息：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-507f99029aace18d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>输入网址、问题描述、邮箱提交反馈即可，然后就坐等360 给予答复了；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-91feb4456b599593.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>弄完之后，我又换了个搜索引擎，用百度搜索了一下我的网址，发现也是一样没收录：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-7b1391f6cc79b892.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>好吧，接着百度，百度结果说：理论上是如果你没有在文件里设置禁止百度蜘蛛爬行的话，百度会自动收录的。但这个收录可能会等很久。所以一般情况下，我们都是采用提交自己的网址来达到快速被百度等搜索引擎收录的效果。</p>
<p><strong>解决方案：</strong></p>
<p>打开网页：<a href="http://www.baidu.com/search/url_submit.html" target="_blank" rel="noopener">http://www.baidu.com/search/url_submit.html</a>：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8f9a2721e01ba030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>输入自己的网址，提交网站首页;</p>
<p>然后点击站点管理，添加网站：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6cea5cf25e086724.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p> 输入信息，输入域名，下一步，设置好站点领域；（我已经设置好了，可以参考链接：<a href="https://jingyan.baidu.com/article/6b97984dee19b81ca3b0bf4c.html" target="_blank" rel="noopener">如何让自己的网站快速被百度收录</a>）</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8009853278c908b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>一般情况下过半个月或者一两个月就能在百度上搜索到自己的网站了。为何我会说成一般情况下，这也是有原因的，有可能你用的域名在之前被别人用过，别人用的时候被百度K过。这种情况那就比较麻烦了。具体解决方法，自己在网上搜索，我在这里就不多说了。  </p>
<p>检测成功：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-c29521585c2210c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>当你的网站被百度收录了，你可以在百度中这样来查询。输入site:加上你的网址。如图，说明这个网站还没有被百度收录。 </p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-be97598e4a0aebf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-192f17c9325b1966.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 语法大全</title>
    <url>/2020/04/14/IT/2020/041401/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式，本文主要介绍md的基础语法。</p>
<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>支持6种大小的标题，分别对应#，##，###，####，#####，######和样式文件中的h1，h2，h3，h4，h5，h6如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 我是标题h2</span><br></pre></td></tr></table></figure>

<h2 id="2-加粗"><a href="#2-加粗" class="headerlink" title="2.加粗"></a>2.加粗</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**我是加粗**</span><br></pre></td></tr></table></figure>

<h2 id="3-斜体"><a href="#3-斜体" class="headerlink" title="3.斜体"></a>3.斜体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是*斜体*</span><br></pre></td></tr></table></figure>

<h2 id="4-加粗的斜体"><a href="#4-加粗的斜体" class="headerlink" title="4.加粗的斜体"></a>4.加粗的斜体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是***加粗的斜体***</span><br></pre></td></tr></table></figure>

<h2 id="5-超链接"><a href="#5-超链接" class="headerlink" title="5.超链接"></a>5.超链接</h2><h3 id="①-外链超链接"><a href="#①-外链超链接" class="headerlink" title="①.外链超链接"></a>①.外链超链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[我是超链接](https://www.btluo.com)</span><br></pre></td></tr></table></figure>

<h3 id="②-页面内的超链接"><a href="#②-页面内的超链接" class="headerlink" title="②.页面内的超链接"></a>②.页面内的超链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[我是页面内的超链接](#page1)</span><br><span class="line"></span><br><span class="line">注：使用页面内的超链接时，需要先在要跳转的到地方放一个id为page1：&lt;a id=&quot; page1 &quot;&gt;链接&lt;/a&gt;的锚点。</span><br></pre></td></tr></table></figure>

<h2 id="6-删除"><a href="#6-删除" class="headerlink" title="6.删除"></a>6.删除</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是~~删除~~</span><br></pre></td></tr></table></figure>

<h2 id="7-图片"><a href="#7-图片" class="headerlink" title="7.图片"></a>7.图片</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![我是图片](https://www.btluo.com/images/separateImg.png)</span><br></pre></td></tr></table></figure>

<h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><h3 id="①-有序列表"><a href="#①-有序列表" class="headerlink" title="①.有序列表"></a>①.有序列表</h3><p>文字前加序号，序号后面加英文符号.，并加一个空格即可。</p>
<p>如： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 有序列表 1</span><br><span class="line">2. 有序列表 2</span><br><span class="line">3. 有序列表 3</span><br></pre></td></tr></table></figure>

<h3 id="②-无序列表"><a href="#②-无序列表" class="headerlink" title="②.无序列表"></a>②.无序列表</h3><p>在一段文字前添加特定的符号即可，可以使用* - + 等，符号与文字之间需要空格。  </p>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 无序列表1</span><br><span class="line">* 无序列表2</span><br><span class="line">* 无序列表3</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 无序列表4</span><br><span class="line">- 无序列表5</span><br><span class="line">- 无序列表6</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ 无序列表7</span><br><span class="line">+ 无序列表8</span><br><span class="line">+ 无序列表9</span><br></pre></td></tr></table></figure>

<p>三种符号显示的结果是一样的；</p>
<h3 id="③-有序列表与无序列表的混用"><a href="#③-有序列表与无序列表的混用" class="headerlink" title="③.有序列表与无序列表的混用"></a>③.有序列表与无序列表的混用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 有序列表1</span><br><span class="line">    - 无序列表1</span><br><span class="line">    * 无序列表2</span><br><span class="line">    + 无序列表3</span><br><span class="line">2. 有序列表2</span><br><span class="line">    - 无序列表4</span><br><span class="line">    + 无序列表5</span><br><span class="line">    * 无序列表6</span><br><span class="line">3. 有序列表3</span><br><span class="line">    + 无序列表7</span><br><span class="line">    * 无序列表8</span><br><span class="line">    - 无序列表9</span><br></pre></td></tr></table></figure>

<h2 id="9-字体字号颜色"><a href="#9-字体字号颜色" class="headerlink" title="9.字体字号颜色"></a>9.字体字号颜色</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;</span><br><span class="line">&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class="line">&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<p>Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。  </p>
<h2 id="10-引用"><a href="#10-引用" class="headerlink" title="10.引用"></a>10.引用</h2><p>在需要引用的文字前添加符号：&gt;，即可使用引用块，如下:  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;我是引用</span><br><span class="line">&gt;啦啦啦，哈哈，看我，是不是很显眼</span><br></pre></td></tr></table></figure>

<h2 id="11-分割线"><a href="#11-分割线" class="headerlink" title="11.分割线"></a>11.分割线</h2><p>在需要进行分割的两行之间添加单独一行内容： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">****</span><br></pre></td></tr></table></figure>

<h2 id="12-表格"><a href="#12-表格" class="headerlink" title="12.表格"></a>12.表格</h2><p>可直接在这个网址生成： <a href="https://tool.lu/tables" target="_blank" rel="noopener">https://tool.lu/tables</a></p>
<h2 id="13-代码"><a href="#13-代码" class="headerlink" title="13.代码"></a>13.代码</h2><p>行内代码的语法是在代码前后用符号：`，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`&lt;div&gt;我是一条代码&lt;/div&gt;`</span><br></pre></td></tr></table></figure>

<p>代码块的使用语法是在代码前后添加三个`符号，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;我是一串代码&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">`` `</span><br><span class="line">(原谅我打了个空格，不然就被解析了)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>使用vscode如何建立vue模板</title>
    <url>/2019/09/11/IT/2019/091101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在vscode中新建.vue的文件时，我希望VSCODE能够根据配置，自动生成我想要的vue的内容。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-打开vscode"><a href="#1-打开vscode" class="headerlink" title="1.打开vscode"></a>1.打开vscode</h3><p>依次选择文件-&gt;首选项-&gt;用户代码片段，这时候，会出现一个搜索框，然后在搜索框中输入vue，如下所示：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a5eec4843d497718.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-进入vue-json"><a href="#2-进入vue-json" class="headerlink" title="2.进入vue.json"></a>2.进入vue.json</h3><p>选择打开vue.json之后，复制以下内容到这个文件中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;Print to console&quot;: &#123;</span><br><span class="line">  &quot;prefix&quot;: &quot;vue&quot;,</span><br><span class="line">  &quot;body&quot;: [</span><br><span class="line">   &quot;&lt;!-- $0 --&gt;&quot;,</span><br><span class="line">   &quot;&lt;template&gt;&quot;,</span><br><span class="line">   &quot; &lt;div&gt;&lt;/div&gt;&quot;,</span><br><span class="line">   &quot;&lt;/template&gt;&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot;&lt;script&gt;&quot;,</span><br><span class="line">   &quot;export default &#123;&quot;,</span><br><span class="line">   &quot; data () &#123;&quot;,</span><br><span class="line">   &quot;  return &#123;&quot;,</span><br><span class="line">   &quot;  &#125;;&quot;,</span><br><span class="line">   &quot; &#125;,&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot; components: &#123;&#125;,&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot; computed: &#123;&#125;,&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot; mounted: &#123;&#125;,&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot; methods: &#123;&#125;&quot;,</span><br><span class="line">   &quot;&#125;&quot;,</span><br><span class="line">   &quot;&quot;,</span><br><span class="line">   &quot;&lt;/script&gt;&quot;,</span><br><span class="line">   &quot;&lt;style lang=&apos;scss&apos; scoped&gt;&quot;,</span><br><span class="line">   &quot;&lt;/style&gt;&quot;</span><br><span class="line"> ],</span><br><span class="line">  &quot;description&quot;: &quot;Log output to console&quot;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存后关闭这个文件；</p>
<h3 id="3-用法"><a href="#3-用法" class="headerlink" title="3.用法"></a>3.用法</h3><p>我们新建一个login.vue的文件，然后输入vue，可以看到以下内容：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b1a669a510e5596b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>选择vue，回车后，就能自动生成内容，如下图所示：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d7d78df5ae916641.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="4-其他"><a href="#4-其他" class="headerlink" title="4.其他"></a>4.其他</h3><p>除了vue之外，也可以为.js、.html等各种文件预设代码片段，具体用法可以搜索<a href="https://www.baidu.com/s?wd=snippet&ie=UTF-8" target="_blank" rel="noopener">snippet</a>了解更多；</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>TortoiseGit保存用户名和密码的方法</title>
    <url>/2019/11/26/IT/2019/112602/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>tortoiseGit是一个开放的git版本控制系统的源客户端，但是刚安装的TortoiseGit在提交或者pull时总会提示你输入用户名密码，非常麻烦，因此本文主要介绍如何永久保存git的账号密码</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1.点击鼠标右键进入设置：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8bc46d435e0a1356.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.在设置界面中选择Git–&gt;编辑全局按钮：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-978ea06374f5a82d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>3.在末尾添加代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[credential]</span><br><span class="line"></span><br><span class="line">      helper = store</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a1d4413b2bb925f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>保存，输入一次密码后第二次就会记住密码了 ；</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>设置vscode编辑器为中文环境</title>
    <url>/2019/11/26/IT/2019/112601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>VSCode是一款轻量级的好用的编译软件，运用好vscode可以让你写代码事半功倍，本文章主要介绍怎么将vscode设置为中文开发环境。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1.使用快捷键【Ctrl+Shift+P】在弹出的搜索框中输入configure,选择搜索出来的【Configure Display Language】,如下图：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f770c063bf555e6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>然后选择第二个选项，安装其他语言：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3f09717702368284.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b0ea302a678eae48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>选择中文简体，安装，在重启vscode就行了；</p>
<p>注：版本较低的vscode，可能不是出的 install additional languages这个选项：</p>
<p>而是打开了locale.json文件，可以看到locale的属性值为en，如下图：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6d161aaebf118cb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>这时候我们就需要将en改成zh-CN，然后保存locale.json文件在重启vscode；</p>
<p>重启完之后我们发现编辑器并没有变成中文开发环境，那是应为locale.json中的代码配置的意思是说软件启动加载语言配置包为中文，但是实际上刚刚安装的VSCode并没有中文语言包，所以这里并没有显示为中文语言环境；</p>
<p>因此我们需要在左侧导航栏中选择最后一项Extensions中输入【Chinese （Simplified）Language Pack for Visual Studio Code】，然后点击右侧Install，安装好中文语言包之后软件会提示重启VSCode，点击【Yes】重启VSCode软件，之后就能看到编辑器已经是中文开发环境了：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-c2d96acd14d4bbe1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>常用电脑快捷键大全</title>
    <url>/2019/12/02/IT/2019/120201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>电脑快捷键不仅可以帮助我们熟练的操作电脑，还可以帮助我们快速提升自己的工作效率，本文主要介绍wordows、Ctrl、Alt、Shift组合快捷键，熟练运用快捷键可大大提高工作效率。</p>
<h2 id="一-windows快捷键"><a href="#一-windows快捷键" class="headerlink" title="一.windows快捷键"></a>一.windows快捷键</h2><pre><code>Windows    功能：显示&quot;开始&quot;功能表；

Windows+D    功能：显示桌面；

Windows+M    功能：缩小桌面所有窗口；

Windows+Shift+M    功能：还原桌面所有窗口；

Ctrl+Shift+N    功能：新建电脑文件夹；

Windows+E    功能：打开我的电脑；

Windows+L    功能：锁定电脑

Windows+Ctrl+ F    功能：查找计算机

Windows+F1    功能：显示windows帮助；

Windows +Alt +F4    功能：windows关机窗口，或关闭浏览器窗口；</code></pre><h2 id="二-Ctrl快捷键"><a href="#二-Ctrl快捷键" class="headerlink" title="二.Ctrl快捷键"></a>二.Ctrl快捷键</h2><pre><code>Ctrl+R    功能：刷新当前页面；

Ctrl+Shift    功能：输入法切换；

Ctrl+ Spacebar（空格键）    功能：中英文切换；

Ctrl+Home    功能：快速移到文件头部；

Ctrl+End    功能：快速移到文件尾部；

Ctrl+Esc    功能：显示开始菜单栏；

Ctrl+F5    功能：强制刷新；

Ctrl+Tab+Shift    功能：切换已经打开来的应用；

Ctrl+ +（加号）    功能：放大页面；

Ctrl+ -（减号）    功能：缩小页面；

Ctrl+S    功能：保存；

Ctrl+A    功能：全选当前页面内容；

Ctrl+C    功能：复制当前选中内容；

Ctrl+X    功能：剪切当前选中内容；

Ctrl+V    功能：黏贴当前选中内容 ；

Ctrl+W    功能：浏览器关闭当前窗口；

Ctrl+Y    功能：返回上一步；

Ctrl+Z    功能：撤消上一步；

Ctrl+Tab    功能：小菜单方式向下切换标签；

Ctrl+K    功能：关闭除当前和锁定标签外的所有标签；

Ctrl+N    功能：新建空白窗口；

Ctrl+P    功能：打开&quot;打印&quot;面板；

Ctrl+Q    功能：打开&quot;添加到过滤列表&quot;面板；

Ctrl+D    功能：打开&quot;添加收藏&quot;面版；
Ctrl+E    功能：打开或关闭&quot;搜索&quot;侧边栏；

Ctrl+F    功能：打开&quot;查找&quot;面版；

Ctrl+G    功能：打开或关闭&quot;简易收集&quot;面板；

Ctrl+H    功能：打开&quot;历史&quot;侧边栏；

Ctrl+Alt+Del    功能：打开任务管理器；</code></pre><h2 id="三-Alt快捷键"><a href="#三-Alt快捷键" class="headerlink" title="三.Alt快捷键"></a>三.Alt快捷键</h2><pre><code>Alt+F4    功能：关闭当前程序；

Alt+Tab    功能：在桌面进行窗口切换；

Alt+Z    功能：切换自动换行；

Alt+Left    功能：浏览器里前进后退；

Alt+F    功能：打开文件菜单搜索；

Alt+V    功能：打开视图菜单；

Alt+O    功能：打开格式菜单；

Alt+A    功能：打开excel表格菜单；

Alt+W    功能：打开窗口菜单；</code></pre><h2 id="四-Shift快捷键"><a href="#四-Shift快捷键" class="headerlink" title="四.Shift快捷键"></a>四.Shift快捷键</h2><pre><code>Shift+Spacebar（空格键）    功能：切换输入法 半全角；

Shift+Ctrl+T    功能：还原上次关闭的标签页；

Shift+Del    功能：永久删除文件；

Shift+Ctrl+N    功能:新建文件夹;

Shift+F10    功能：选中文件的右菜单;

Shift + Tab    功能：在选项之间往后移动;</code></pre><h2 id="五-常用快捷键"><a href="#五-常用快捷键" class="headerlink" title="五.常用快捷键"></a>五.常用快捷键</h2><pre><code>Ctrl+A    功能：全选当前页面内容；

Ctrl+C    功能：复制当前选中内容；

Ctrl+X    功能：剪切当前选中内容；

Ctrl+V    功能：黏贴当前选中内容 ；

Delete    功能：删除当前内容或删除当前文件（删除文件放入回收站）；

Shift+Delete    功能：永久删除所选项，不放入回收站；

Alt+Tab    功能：在打开的窗口间切换；

Alt+Esc    功能：以项目打开的顺序循环切换；

Ctrl+Esc    功能：打开“开始”菜单；

F5    功能：刷新浏览器当前窗口；

Shift+F5    功能：强制刷新当前窗口；

Ctrl+Alt+Home或ctrl+home    功能：回到浏览器顶部；

Alt+F4    功能：打开关机，重启，待机；

Alt+Enter    功能：查看所选项目属性；</code></pre><p>注：部分快捷键可能受软件影响，如Alt+A可能是微信截图等；</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>永久激活(破解) IntelliJ IDEA 方法</title>
    <url>/2019/12/02/IT/2019/120202/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>IntelliJ在业界被公认为最好的java开发工具，尤其在智能代码助手、代码自动提示、重构、J2EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、 创新的GUI设计等方面的功能可以说是超常的。</p>
<h2 id="1-下载idea"><a href="#1-下载idea" class="headerlink" title="1.下载idea"></a>1.下载idea</h2><p>官网：<a href="https://www.jetbrains.com/idea/download" target="_blank" rel="noopener">https://www.jetbrains.com/idea/download</a></p>
<h2 id="2-下载破解jar包"><a href="#2-下载破解jar包" class="headerlink" title="2.下载破解jar包"></a>2.下载破解jar包</h2><p>百度网盘：<a href="https://pan.baidu.com/s/11R8DGLzS1Qbrz0ei-f1UaA" target="_blank" rel="noopener">https://pan.baidu.com/s/11R8DGLzS1Qbrz0ei-f1UaA</a></p>
<h2 id="3-将下载好的jar包放入idea的bin目录下"><a href="#3-将下载好的jar包放入idea的bin目录下" class="headerlink" title="3.将下载好的jar包放入idea的bin目录下"></a>3.将下载好的jar包放入idea的bin目录下</h2><p>如图所示：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-faf823eb96a4237b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="4-修改文件"><a href="#4-修改文件" class="headerlink" title="4.修改文件"></a>4.修改文件</h2><p>修改 bin 目录下的 idea.vmoptions及idea64.exe.vmoptions 文件：</p>
<p>把 idea.vmoptions及idea64.exe.vmoptions 文件加一行如下的配置，记得更换为你保存的文件路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-javaagent:D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2016.2.2\bin\JetbrainsCrack-2.5.6.jar</span><br></pre></td></tr></table></figure>

<h2 id="5-修改配置文件"><a href="#5-修改配置文件" class="headerlink" title="5.修改配置文件"></a>5.修改配置文件</h2><p>在 hosts 文件里面添加如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.0.0.0 account.jetbrains.com</span><br></pre></td></tr></table></figure>

<h2 id="6-打开-idea，输入激活码"><a href="#6-打开-idea，输入激活码" class="headerlink" title="6.打开 idea，输入激活码"></a>6.打开 idea，输入激活码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YZVR7WDLV8-eyJsaWNlbnNlSWQiOiJZWlZSN1dETFY4IiwibGljZW5zZWVOYW1lIjoiamV0YnJhaW5zIGpzIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifV0sImhhc2giOiIxMTA1NzI3NC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rsJR5mlJcjibqRu1gQAMUCngMe8i+AOWIi+JZkNFYPET2G1ONcLPcIzoATTRi6ofkDm5l+3Y4HXjBPjVU6bHDdMBAzCnUqpXKsCknwSYyPSU0Y5pzuLvw6O9aPlQ46UBoTEC2BL5W6f11S7NlAq7tTbDuvFUynqSGAmTEfuZtKmzRmp20ejTPuMlSO7UqSkZvkg6YvSTrax1d2K+P9SAmVGZ9iC7AzBs4AwTf84QB9qHvE/Nh0oELSHWGG9hsZZ7sVghI/39/jPQFTp8GLFsl36ZPybPhGDam721zxS9H++/eJk23Jz3nxaRluE4dWmpHrDg1qBHp8qVpSFejg2QYw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure>

<p>重新打开idea，就能看到软件失效日期为2099年了，时间够够的了:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-17973466e57a421d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-请求体过大报413错误解决方法</title>
    <url>/2018/10/11/%E5%89%8D%E7%AB%AF/2018/101101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>nodeJs使用Koa框架。koa-bodyparser 接收数据。请求参数过大时会报错误代码413：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f614633afbe0909a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>原因</strong></p>
<p>使用koa-bodyparser会限制接收数据大小：</p>
<pre><code>formLimit: 表格限制默认 56kb

jsonLimit：json传输默认限制 1M

textLimit：文本传输默认限制 1M </code></pre><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在使用 bodyParser 的时候传一个对象进去，将 formLimit、jsonLimit、textLimit 的限制改为 2M 或根据需求确定数值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app.use(bodyParser(&#123;</span><br><span class="line">    &quot;formLimit&quot;:&quot;2mb&quot;,</span><br><span class="line">    &quot;jsonLimit&quot;:&quot;2mb&quot;,</span><br><span class="line">    &quot;textLimit&quot;:&quot;2mb&quot;</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx-虚拟目录alias和root的区别</title>
    <url>/2018/11/01/IT/2018/110101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>nginx中alias标签和root标签到底有哪些区别呢？</strong></p>
<p>1.alias指定的目录是location匹配访问的path目录下的文件，直接从alias的目录下查找，并且alias指定的目录后面必须要加上”/“符号。；</p>
<p>注：alias虚拟目录配置时，location匹配的目录如果后面不带”/“，那么访问的地址的目录后面加不加”/“不影响访问，访问时它会自动加上”/“；但是如果location匹配的目录后面加上”/“，那么访问的地址的目录必须要加上”/“，访问时它不会自动加上”/“。如果不加”/“，访问就会找不到你想要的资源。</p>
<p>2.root指定的目录是location匹配访问的目录的上一级目录,这个目录一定要是真实存在root指定目录下的；root目录配置中，location匹配的目录后面带不带”/“，都不会影响访问。</p>
<p>例如：（nginx配置的域名是<a href="http://www.baidu.com）" target="_blank" rel="noopener">www.baidu.com）</a></p>
<p>&lt;1&gt;.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location /baidu/ &#123;</span><br><span class="line">    alias  /www/baidu/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在上面alias虚拟目录配置下，访问<a href="http://www.baidu.com/baidu/ceshi.html" target="_blank" rel="noopener">http://www.baidu.com/baidu/ceshi.html</a> 真实路径是/www/baidu/ceshi.html。</p>
<p>上段案例也可用root目录配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location /baidu/ &#123;</span><br><span class="line">    root  /www/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>两者配置后的访问效果是一样的！</p>
<p>&lt;2&gt;.</p>
<p>上面的案例中alias的虚拟目录名和location匹配访问的目录名是一样的，所以可以直接改成root目录配置，那要是不一样呢？</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location /aaa/ &#123;</span><br><span class="line">      alias /www/baidu/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://www.baidu.com/aaa" target="_blank" rel="noopener">http://www.baidu.com/aaa</a> 的时候就会去/www/baidu/ 下查找资源，这样的话，就不能直接改成root目录配置。</p>
<p>如果非要改成root目录配置，就只能在/www下将baidu目录同步为aaa目录，如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location /aaa/ &#123;</span><br><span class="line">    root /www/;</span><br><span class="line">&#125;</span><br><span class="line"># ln -s /www/aaa /www/baidu/</span><br></pre></td></tr></table></figure>

<p> 即保持/www/aaa和/www/baidu 内容一样，这样访问<a href="http://www.baidu.com/aaa" target="_blank" rel="noopener">http://www.baidu.com/aaa</a> 的时候也会去/www/baidu/ 下查找资源</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-跨域请求问题</title>
    <url>/2018/10/17/%E5%89%8D%E7%AB%AF/2018/101701/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在用nodejs做我的个人博客的时候，使用ajax请求数据的时候报了一个错，因为我用的数据库在服务器，项目放在我电脑本地，所以存在跨域请求的错:</p>
<p>Failed to load <a href="http://192.168.1.7:3000/articleList?page=1&amp;&amp;limit=1" target="_blank" rel="noopener">http://192.168.1.7:3000/articleList?page=1&amp;&amp;limit=1</a>: No “Access-Control-Allow-Origin” header is present on the requested resource. Origin “null” is therefore not allowed access.</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>原因</strong></p>
<p>W3C标准里是这么实现HTTP跨域请求的， Cross-Origin Resource Sharing</p>
<p>简单的来说，就是跨域的目标服务器要返回一系列的Headers，通过这些Headers来控制是否同意跨域。</p>
<pre><code>Access-Control-Allow-Origin HTTP Response Header
Access-Control-Max-Age HTTP Response Header
Access-Control-Allow-Credentials HTTP Response Header
Access-Control-Allow-Methods HTTP Response Header
Access-Control-Allow-Headers HTTP Response Header
Origin HTTP Request Header
Access-Control-Request-Method HTTP Request Header
Access-Control-Request-Headers HTTP Request Header</code></pre><p>在 Request 包和 Response 包中都有一些。</p>
<p>其中最敏感的就是 Access-Control-Allow-Origin 这个 Header, 他是W3C标准里用来检查该跨域请求是否可以被通过。 (Access Control Check)。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在nodejs中使用koa时，有个cors模块是用来解决ajax跨域问题的，具体代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const Koa = require(&quot;koa&quot;);</span><br><span class="line"></span><br><span class="line">const bodyParser = require(&quot;koa-bodyparser&quot;);</span><br><span class="line"></span><br><span class="line">const controller = require(&quot;./controller&quot;);</span><br><span class="line"></span><br><span class="line">const templating = require(&quot;./templating&quot;);</span><br><span class="line"></span><br><span class="line">const cors = require(&quot;koa-cors&quot;);</span><br><span class="line"></span><br><span class="line">const app = new Koa();</span><br><span class="line"></span><br><span class="line">const isProduction = process.env.NODE_ENV === &quot;production&quot;;</span><br><span class="line"></span><br><span class="line">// 解决跨域问题</span><br><span class="line"></span><br><span class="line">app.use(cors());</span><br><span class="line"></span><br><span class="line">//记录URL以及页面执行时间</span><br><span class="line"></span><br><span class="line">app.use(async (ctx, next) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  console.log(`Process $&#123;ctx.request.method&#125; $&#123;ctx.request.url&#125;...`);</span><br><span class="line"></span><br><span class="line">  var start = new Date().getTime(),</span><br><span class="line"></span><br><span class="line">    execTime;</span><br><span class="line"></span><br><span class="line">  await next();</span><br><span class="line"></span><br><span class="line">  execTime = new Date().getTime() - start;</span><br><span class="line"></span><br><span class="line">  ctx.response.set(&quot;X-Response-Time&quot;, `$&#123;execTime&#125;ms`);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(bodyParser()); //解析POST请求</span><br><span class="line"></span><br><span class="line">//负责给ctx加上render()来使用Nunjucks</span><br><span class="line"></span><br><span class="line">app.use(</span><br><span class="line"></span><br><span class="line">  templating(&quot;views&quot;, &#123;</span><br><span class="line"></span><br><span class="line">    noCache: !isProduction,</span><br><span class="line"></span><br><span class="line">    watch: !isProduction</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">app.use(controller()); //处理URL路由</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line"></span><br><span class="line">console.log(&quot;app started at port 3000...&quot;);</span><br></pre></td></tr></table></figure>

<p>参考链接：<a href="https://www.jianshu.com/p/d7fcd17d79a9" target="_blank" rel="noopener">https://www.jianshu.com/p/d7fcd17d79a9</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-koa2整合sequelize</title>
    <url>/2018/10/20/%E5%89%8D%E7%AB%AF/2018/102001/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用koa的sequelize查询数据的时候，用await的写法不能满足我的需求，我只要查询部分数据，并将数据库的表的列名从下划线改为驼峰，所以百度到sequelize的官网可以使用原始的sql语句。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>问题</strong></p>
<p>使用koa的sequelize查询数据的时候，用await的写法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(async () =&gt; &#123;</span><br><span class="line">    var pets = await Pet.findAll(&#123;where: &#123;name: &quot;btluo&quot;  &#125; &#125;);</span><br><span class="line">    console.log(`find $&#123;pets.length&#125; pets:`);</span><br><span class="line">    for (let p of pets) &#123;</span><br><span class="line">        console.log(JSON.stringify(p));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
<p>不能满足我的需求，我只要查询部分数据，并将数据库的表的列名从下划线改为驼峰，所以百度到sequelize的官网可以使用原始的sql语句。</p>
<p><a href="https://itbilu.com/nodejs/npm/VkYIaRPz-.html#induction" target="_blank" rel="noopener">https://itbilu.com/nodejs/npm/VkYIaRPz-.html#induction</a></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>使用sequelize.query() - 执行查询：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequelize.query(&quot;SELECT...&quot;).spread(function (results, metadata) &#123;</span><br><span class="line">  // Raw query - use spread</span><br><span class="line">&#125;);</span><br><span class="line">sequelize.query(&quot;SELECT...&quot;, &#123; type: sequelize.QueryTypes.SELECT &#125;).then(function (results) &#123;</span><br><span class="line">  // SELECT query - use then</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>来满足我的要求，但是我使用sequelize.query的时候</p>
<p>总是报错sequelize.query() is not a function,然后我发现找了好久，把sequelize重新装，更新到最新版本都会继续报这个错，然后重新把所有代码按sequelize的api文档的安装方法重新写了一个小demo，后面发现成功了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-f6cea296d8359c91?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>然后我又在项目上重新写了一遍发现还是继续报这个错，然后我重新检查了下代码，发现报错是发生再db.js（间接定义model那个js）上，没把sequelize给exports出去，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-b2f8435a52240e8c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>导致如果直接调用sequelize.query()的时候会报错，所以我把db.js的sequelize放入导出对象中，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-aca2733a51853b84?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>再在index.js中引入db，再使用sequelize.query()就不会报错了。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>React-创建组件</title>
    <url>/2018/11/06/%E5%89%8D%E7%AB%AF/2018/110601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在react中如何创建一个组件</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-React-创建一个组件"><a href="#1-React-创建一个组件" class="headerlink" title="1.React 创建一个组件"></a>1.React 创建一个组件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import React ,&#123;Component&#125; from &quot;react&quot;;</span><br><span class="line">==&gt;import React from &quot;react&quot;;const Component = React Component;</span><br><span class="line">//组件名首字母需要大写</span><br><span class="line">class TodoList extends Component&#123;</span><br><span class="line">    constructor(props)&#123;  //构造函数，优于其他函数，最先执行</span><br><span class="line">        super(props);//固定写法</span><br><span class="line">        // 定义数据</span><br><span class="line">        this.state=&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    render()&#123;</span><br><span class="line">        return ( //加个括号使得我们能在多行编写JSX的写法</span><br><span class="line">            &lt;div&gt;//JSX语法规定最外层只能放一个标签，return的html标签不需要用双引号包裹，如果不想显示div在dom节点中，则可以用React的&lt;Fragment&gt; 占位符标签代替； 注：import React ,&#123;Component， Fragment &#125; from &quot;react&quot;; </span><br><span class="line">                &lt;div className=&quot;todoList&quot;&gt;Hello React! &lt;/div&gt;//需要写样式时，增加样式名不能用class，而应该用className；</span><br><span class="line">                &lt;p&gt;如果我有两个标签，那就要在最外层加一层标签包裹&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default TodoList;//记得暴露组件，用于调用</span><br></pre></td></tr></table></figure>

<h3 id="2-调用组件，渲染到页面"><a href="#2-调用组件，渲染到页面" class="headerlink" title="2.调用组件，渲染到页面"></a>2.调用组件，渲染到页面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import React from &quot;react&quot;;</span><br><span class="line">import ReactDOM from &quot;react-dom&quot;;</span><br><span class="line">import TodoList from &quot;TodoList&quot;;</span><br><span class="line">ReactDom.render(</span><br><span class="line">,document.getElementById(&quot;todoList&quot;);//将TodoList组件渲染至页面id为todoList的Dom节点中</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-登录注册小结</title>
    <url>/2018/10/25/%E5%89%8D%E7%AB%AF/2018/102501/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在搭建博客之前，我就试着去学习nodejs，想用nodejs做后台，看着廖雪峰老师的官网，自己做了个nodejs的登录注册，现在做个小结。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>项目链接</strong></p>
<p><a href="https://gitee.com/lb1011/nodeJs.git" target="_blank" rel="noopener">nodejs登录</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e5bda0d6792b5da0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><h3 id="1-Kao"><a href="#1-Kao" class="headerlink" title="1.Kao"></a>1.Kao</h3><p>对目录views传入的http请求进行url的处理；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">async (ctx, next) =&gt; &#123; </span><br><span class="line"></span><br><span class="line"> await next(); //处理下一个异步函数</span><br><span class="line"></span><br><span class="line"> ctx.response.type = &quot;text/html &quot; ;// 设置response的Content-Type；</span><br><span class="line"></span><br><span class="line"> ctx.response.body = &quot; 登录注册 &quot; ; // 设置response的内容；</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过参数ctx可以访问http请求的request和response，来进行页面的跳转处理或者编写相应的业务逻辑；</p>
<p>使用方法，在项目描述文件package.json中的dependencies写好依赖包{  “dependencies”:{ “koa”:”2.0.0”}}，然后执行npm install，npm会把我们所需要的包下载好；</p>
<p><strong>为什么要调用await next()？</strong></p>
<p>因为koa把很多async函数组成一个处理链，每个async函数都可以做一些自己的事情，然后用await next()来调用下一个async函数。我们把每个async函数称为middleware，这些middleware可以组合起来，完成很多有用的功能。</p>
<h3 id="2-koa-router"><a href="#2-koa-router" class="headerlink" title="2.koa-router"></a>2.koa-router</h3><p>为了集中处理url，我们需要引入koa-router这个middleware，让它负责处理URL映射；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-7a31386d0dbede8c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>图片来源：<a href="https://www.liaoxuefeng.com" target="_blank" rel="noopener">廖老师官网</a></p>
<p>然后，我们可以使用router.get(“/path”, async fn)来注册一个GET请求，可以在请求路径中使用带变量的/hello/:name，变量可以通过ctx.params.name访问。</p>
<p><strong>处理post请求：</strong></p>
<p>用router.get(“/path”, async fn)处理的是get请求。如果要处理post请求，可以用router.post(“/path”, async fn)）；</p>
<p>用post请求处理URL时，我们会遇到一个问题：post请求通常会发送一个表单，或者JSON，它作为request的body发送，但无论是Node.js提供的原始request对象，还是koa提供的request对象，都不提供解析request的body的功能！因此，我们需要koa-bodyparser来解析原始request请求然后绑定在ctx.request.body中。</p>
<h3 id="3-koa-router"><a href="#3-koa-router" class="headerlink" title="3.koa-router"></a>3.koa-router</h3><p>解析post请求的request的参数；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ff132a8fb1454e77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>使用controller进行重构</p>
<p>所有处理URL的函数按功能组存放在controllers目录，今后我们也只需要不断往这个目录下加东西就可以了。</p>
<h3 id="4-Nunjucks"><a href="#4-Nunjucks" class="headerlink" title="4.Nunjucks"></a>4.Nunjucks</h3><p>(数据模板引擎)通过Nunjucks把数据渲染成html；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0fb6e31ad6161501.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>MVC</p>
<h3 id="5-访问MySQL数据库"><a href="#5-访问MySQL数据库" class="headerlink" title="5.访问MySQL数据库"></a>5.访问MySQL数据库</h3><p>ORM（Object-Relational Mapping）：关系数据库的表结构映射到对象上;</p>
<p>1.创建一个sequelize对象实例；</p>
<p>2.定义模型，告诉Sequelize如何映射数据库表；</p>
<p>3.根据需要查询数据；</p>
<p>Sequelize的API可以参考 <a href="http://docs.sequelizejs.com/" target="_blank" rel="noopener">http://docs.sequelizejs.com/</a>。  </p>
<h3 id="6-运行nodejs"><a href="#6-运行nodejs" class="headerlink" title="6.运行nodejs"></a>6.运行nodejs</h3><p>npm start;</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>React-开发环境配置</title>
    <url>/2018/11/03/%E5%89%8D%E7%AB%AF/2018/110301/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>React是一个声明式的，高效的，并且灵活的用于构建用户界面的 JavaScript 库，是最近比较流行的语言，所以本文是介绍下React的开发环境的搭建方法的</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>React的开发环境的搭建方法：</strong></p>
<p>1.通过React官网下载最新版，通过引入.js文件来使用React；</p>
<p>2.直接使用 BootCDN 的 React CDN 库,即直接使用线上链接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/react/16.4.0/umd/react.development.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/react-dom/16.4.0/umd/react-dom.development.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 生产环境中不建议使用 --&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/babel-standalone/6.26.0/babel.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>3.通过脚手架工具来编码：（可以使用GRUNT,Gulp,webPack等工具）</p>
<p>在使用react开发项目时，很少有人用传统的方法引入react的源文件(js)，然后在html编辑，一般都是使用webpack + es6来结合react开发前端应用，因此，大部分人会自己搭建脚手架或者使用别人搭建好的脚手架。为了方便React项目的开发，FaceBook 官方发布了一款React的官方脚手架工具。</p>
<p><strong>React脚手架搭建与使用教程：</strong></p>
<p>要使用脚手架工具就需要先安装npm，所以我们首先根据系统选择安装node.js（下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>）</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a3ea59c65514aabd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>下载后按提示安装，安装完后（windows+R）打开命令cmd：</p>
<pre><code>输入 npm -v 和node -v,如果都出现版本号，即为安装成功;</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-35ebb83e5eb51cc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>npm安装成功后，就可以近一步的安装Create React App(脚手架工具)了；</p>
<p>首先我们打开React的官方网址，找到Create React App安装命令j教程：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-68e11c777af48d4f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>同样通过（windows+R）打开命令行cmd，输入 npm install -g create-react-app安装脚手架工具</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ccf118607ba6ceb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>安装好之后就能通过create-react-app my-app (my-app是你要创建的项目名)</p>
<p>注：创建项目需在桌面通过（Windows系统：shift+鼠标右键–&gt;在此处打开命令窗口；ios系统：可直接打开命令行输入cd Desktop）打开命令在创建</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ccd2787c128017d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>出现上图所示，就创建成功了，在你的桌面上就能看见一个my-app的文件夹了，然后你就能使用react编写你的项目了。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0bf97a667522d14d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-72972b920e32c39d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>当然要访问你的react项目，则需要根据上述创建成功后的提示。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-46cfb965c3a9e13d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>通过输入cd my-app 和npm start指令后，它自动为你打开个网址（<a href="http://localhost/3000）：" target="_blank" rel="noopener">http://localhost/3000）：</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-91c616067c35ae29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>这样就能访问你的项目了：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b5b6a5260092e7cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>React-JSX的使用说明</title>
    <url>/2018/11/09/%E5%89%8D%E7%AB%AF/2018/110901/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>JSX 是一个看起来很像 XML 的 JavaScript 语法扩展。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-React-创建一个组件"><a href="#1-React-创建一个组件" class="headerlink" title="1.React 创建一个组件"></a>1.React 创建一个组件</h3><p>1.return返回的数据不需要加单引号，直接写html标签就行；</p>
<p>2.在JSX的写法中不止能写html标签，还能自定义标签；</p>
<p>3.首字母需要大写；一般标签名是大写开头的就是react中的组件；</p>
<p>4.return返回的内容最外层必须包裹在一个大的元素中，否则会报错；可以使用React的占位符;</p>
<p>5.注释语句：{/**/}；</p>
<p>6.在JSX中写html时，不能在给html直接写class，for这样的属性来增加样式或者用for作为属性，因为会与JSX的语法冲突，所以会使用className，htmlFor来代替它们；</p>
<p>7.如果不想转义html标签，可以使用dangerouslySetInnerHTML来时其不转义，缺点是容易被攻击；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-186c33ce78f69f7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/866/format/webp" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>React-组件间数据的传递</title>
    <url>/2018/11/11/%E5%89%8D%E7%AB%AF/2018/111101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在react中，模块组件化了之后，最常使用的就是两个组件之间相互传递数据，其中就包括父组件向子组件传递数据和子组件向父组件传递数据两种情景</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-通过父组件传递数据给子组件："><a href="#1-通过父组件传递数据给子组件：" class="headerlink" title="1.通过父组件传递数据给子组件："></a>1.通过父组件传递数据给子组件：</h3><p>通过父组件中给子组件一个属性值:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b129f7f5ad91e748.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>子组件在通过this.props.属性名来获取父组件传的值:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-cb4ab83e384d7128.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-子组件如何改变父组件的值"><a href="#2-子组件如何改变父组件的值" class="headerlink" title="2.子组件如何改变父组件的值"></a>2.子组件如何改变父组件的值</h3><p>父组件的方法:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ee4d8c777b756368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>把父组件的方法通过属性传递给子组件:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-00f03182b092eb8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>注：在子组件调用父组件的值时需注意this的指向</p>
<p>然后在子组件中调用父组件传递过来的方法</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-47a5eeffc904a9cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>子组件调用父组件方法：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f2cdf303ad2aa874.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>React-事件说明</title>
    <url>/2018/11/15/%E5%89%8D%E7%AB%AF/2018/111501/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>React框架自身实现了一套事件处理机制，它的基本用法和DOM事件很相似。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1.事件的名称要用onClick来代替onclick，onChange来代替onchange等；</p>
<p>2.改变状态值要用this.setState({})来改变；</p>
<p>3.要考虑this的指向，可以使用.bind(this)来强制改变this指向为父级的this指向；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-22a4867e5c9ca917.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/660/format/webp" alt="我的博客地址"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-1.开发环境配置</title>
    <url>/2018/12/15/%E5%89%8D%E7%AB%AF/2018/121501/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>参考链接：<a href="https://cn.vuejs.org/v2/guide/installation.html" target="_blank" rel="noopener">vue官网</a></p>
<p><strong>安装步骤：</strong></p>
<h3 id="一-必须安装nodejs"><a href="#一-必须安装nodejs" class="headerlink" title="一.必须安装nodejs"></a>一.必须安装nodejs</h3><p>安装nodejs很简单，直接在官方网站下载<a href="http://www.nodejs.org/download/" target="_blank" rel="noopener">http://www.nodejs.org/download/</a>，然后一路next，傻瓜式安装就行了，一般情况下安装好了npm也就自己安装好了，现在官网已经把npm集成在nodejs的安装包里面了，参考链接：nodejs的安装</p>
<h3 id="二-搭建vue的开发环境"><a href="#二-搭建vue的开发环境" class="headerlink" title="二.搭建vue的开发环境"></a>二.搭建vue的开发环境</h3><p><strong>安装vue的脚手架工具  官方命令行工具</strong></p>
<pre><code>npm install --global vue-cli  或  cnpm install --global vue-cli        </code></pre><p>（此命令只需要执行一次）–cnpm淘宝镜像， 下载包的速度更快一些。</p>
<p>地址：<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></p>
<p><strong>安装cnpm:</strong></p>
<pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p><strong>打开命令行:</strong></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-665a212629da4464.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>输入vue的npm或cnpm的安装命令 ：</strong> </p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4b43282f769c9336.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="三-创建项目"><a href="#三-创建项目" class="headerlink" title="三.创建项目"></a>三.创建项目</h3><p>cd到对应的一个项目里面，我在D盘建了个vue的文件夹为例；</p>
<p>–生产项目vue-demo01</p>
<pre><code>vue init webpack vue-demo01</code></pre><p>如果安装报错：</p>
<p>–进入项目中</p>
<pre><code>cd  vue-demo01</code></pre><p>–如果创建项目的时候没有报错，这一步可以省略。如果报错了  cd到项目里面运行  cnpm install  /  npm install</p>
<pre><code>cnpm install  或  npm install  </code></pre><p><strong>注：</strong></p>
<p>1.名字是否为vue-dome，可以直接回车或更换；–Project name</p>
<p>2.项目描述，也可以不写，可直接回车；–Project description</p>
<p>3.项目作者，可直接回车；–Author</p>
<p>4.vue build直接回车就行；–Vue build</p>
<p>5.是否安装vue-router，安装就行，后面在了解；–Install vue-router</p>
<p>6.是否安装vue代码检验工具，不建议安装，安装后打个括号可能都会报错；–Use ESLint to lint your code?</p>
<p>7.剩下的都直接回车就行；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-55bade64ec0a5266.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>项目生成中:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-db90973ddce47168.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>项目生成成功;</p>
<p>项目运行：npm run dev–进入项目</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-86817f00b16eb3da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>出现这个就打开成功了，浏览器打开就行:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-be9aba37a4f922f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>vue项目运行成功;</p>
<h3 id="四-另外一种创建项目的方式"><a href="#四-另外一种创建项目的方式" class="headerlink" title="四.另外一种创建项目的方式"></a>四.另外一种创建项目的方式</h3><p>vue的简单案例，更加简洁，直接安装，推荐使用</p>
<p>vue init webpack-simple vue-demo02</p>
<p><strong>注：</strong></p>
<p>1.名字是否为vue-dome，可以直接回车或更换；–Project name</p>
<p>2.项目描述，也可以不写，可直接回车；–Project description</p>
<p>3.项目作者，可直接回车；–Author</p>
<p>4.是否安装证书，直接回车；</p>
<p>5.是否安装sass，使用就安装，不实用可以不安装；</p>
<p>![我的博客图片](<a href="https://upload-images.jianshu.io/upload_images/12858218-ec60071085cde702.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240vue" target="_blank" rel="noopener">https://upload-images.jianshu.io/upload_images/12858218-ec60071085cde702.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240vue</a></p>
<p>简单版</p>
<p>–安装成功后，进入项目：</p>
<pre><code>cd  vue-demo02</code></pre><p>–安装依赖，简洁版必须安装，否则会报错</p>
<pre><code>cnpm install  或  npm install      </code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-578d67254416badc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>安装成功：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ece0b49cb5dbccb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>简洁版文件相对较少；</p>
<p>运行项目：</p>
<pre><code>npm run dev</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-dab3ded82f74436c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>运行项目:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0059cb57e564a252.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>项目运行成功；</p>
<h3 id="五-目录文件夹说明"><a href="#五-目录文件夹说明" class="headerlink" title="五.目录文件夹说明"></a>五.目录文件夹说明</h3><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>build</td>
<td>项目构建的一些代码</td>
</tr>
<tr>
<td>config</td>
<td>开发环境的配置</td>
</tr>
<tr>
<td>node_modules</td>
<td>依赖包</td>
</tr>
<tr>
<td>src</td>
<td>源码，写代码的文件夹</td>
</tr>
<tr>
<td>static</td>
<td>静态文件夹</td>
</tr>
<tr>
<td>.babelrc</td>
<td>ES6编译的一些配置</td>
</tr>
<tr>
<td>.editorconfig</td>
<td>代码风格配置文件</td>
</tr>
<tr>
<td>.gitignore</td>
<td>git上传时忽略的一些文件，比如node_modules</td>
</tr>
<tr>
<td>.postcssrc.js</td>
<td>转换css样式</td>
</tr>
<tr>
<td>index.html</td>
<td>入口文件</td>
</tr>
<tr>
<td>package-lock.json</td>
<td>详细项目相信，项目名称，开发依赖记录等</td>
</tr>
<tr>
<td>package.json</td>
<td>项目信息，项目名称，开发的依赖的记录等</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode-使用vue的列表渲染提示错误的解决办法</title>
    <url>/2018/12/16/%E5%89%8D%E7%AB%AF/2018/121601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>VSCode使用vue的列表渲染提示错误的解决办法</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>最近在使用vscode使用vue过程中发现使用v-for的方法时，莫名提示错误：</p>
<p><strong>错误示例：</strong></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-9fb10def84f2299c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>解决方法一：</strong></p>
<p>在v-for后面绑定key，示例如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-711b498138164a08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>解决方法二：</strong></p>
<p>点击vscode左下角“设置”&gt;“用户设置”，搜索栏输入vetur.validation.template，取消勾选即可：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8afdd2758bfe6c88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>效果：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0b9c0b025efbb7b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode-安装vue插件</title>
    <url>/2018/12/16/%E5%89%8D%E7%AB%AF/2018/121602/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>学习vue-前期准备</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>开发环境：Win7 x64</p>
<p>开发工具：vsCode</p>
<p>开发工具vsCode插件配置： <strong>Vetur</strong>、<strong>EsLint</strong>、<strong>Auto Close Tag</strong>、<strong>JavaScript(ES6) code snippets</strong>、<strong>Path Intellisense</strong>等；</p>
<p><strong>Vetur</strong>：格式化代码、高亮、代码格式检测、自带Emment、括号自动补全：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b6709369461aa8ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>EsLint</strong> ：插件与VUE可能会有冲突，不过你不开启esLint也没多大问题，不过为了你的代码规范</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-15a676632b331c47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>Auto Close Tag</strong> : 自动闭合HTML/XML标签</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4834c19deb49ed4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>JavaScript(ES6) code snippets</strong> : ES6语法智能提示以及快速输入，除js外还支持.ts，.jsx，.tsx，.html，.vue，省去了配置其支持各种包含js代码文件的时间</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-77ff800642f869d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>Path Intellisense</strong>： 自动路劲补全</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-784c52c7cbf289b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-2.数据绑定及列表渲染</title>
    <url>/2018/12/16/%E5%89%8D%E7%AB%AF/2018/121603/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>数据绑定最常见的形式就是使用“Mustache”语法 (双大括号) 的文本插值</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="项目案例地址"><a href="#项目案例地址" class="headerlink" title="项目案例地址"></a>项目案例地址</h3><p><a href="https://gitee.com/caseAddress/vueDemo01.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo01.git</a></p>
<h3 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面html代码，vue模板，所有的内容最外层必须包含一个根节点 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- 绑定业务逻辑里面的数据 --&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;!-- 绑定对象数据 --&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123;obj.name&#125;&#125;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;!-- 列表渲染 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in list&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;!-- 数组嵌套对象列表循环列表渲染 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in list1&quot;&gt;</span><br><span class="line">        &#123;&#123;item.title&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;!-- 复杂列表循环列表渲染 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in list2&quot;&gt;</span><br><span class="line">        &#123;&#123;item.title&#125;&#125;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li v-for=&quot;IT in item.list&quot;&gt;&#123;&#123;IT.detail&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;!-- 业务逻辑 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 将业务逻辑暴露出去</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123; //业务逻辑里面定义的数据</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &quot;你好vue&quot;,</span><br><span class="line">      obj:&#123;</span><br><span class="line">        name:&quot;张三&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      list:[&quot;111&quot;,&quot;222&quot;,&quot;333&quot;],</span><br><span class="line">      list1:[</span><br><span class="line">        &#123;title:&quot;11111&quot;&#125;,</span><br><span class="line">        &#123;title:&quot;22222&quot;&#125;,</span><br><span class="line">        &#123;title:&quot;33333&quot;&#125;</span><br><span class="line">      ],</span><br><span class="line">      list2:[</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;title&quot;:&quot;前端&quot;,</span><br><span class="line">          list:[</span><br><span class="line">            &#123;detail:&quot;前端11111&quot;&#125;,</span><br><span class="line">            &#123;detail:&quot;前端22222&quot;&#125;,</span><br><span class="line">            &#123;detail:&quot;前端33333&quot;&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;title&quot;:&quot;后台&quot;,</span><br><span class="line">          list:[</span><br><span class="line">            &#123;detail:&quot;后台11111&quot;&#125;,</span><br><span class="line">            &#123;detail:&quot;后台22222&quot;&#125;,</span><br><span class="line">            &#123;detail:&quot;后台33333&quot;&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!-- 页面样式 --&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="案例效果截图"><a href="#案例效果截图" class="headerlink" title="案例效果截图"></a>案例效果截图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-2d982313aaeea63f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-3.绑定属性，绑定Class 及Style的绑定</title>
    <url>/2018/12/17/%E5%89%8D%E7%AB%AF/2018/121701/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue的绑定属性，Class 与 Style 绑定</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://cn.vuejs.org/v2/guide/class-and-style.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/class-and-style.html</a></p>
<h3 id="案例链接"><a href="#案例链接" class="headerlink" title="案例链接"></a>案例链接</h3><p><a href="https://gitee.com/caseAddress/vueDemo02.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo02.git</a></p>
<p>1.vue绑定属性：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-848db0227734a52a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.vue绑定class:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1d1b060d8791154d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>3.vue绑定style:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-5f0788f3bdef6610.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-4.事件的定义及执行方法</title>
    <url>/2018/12/19/%E5%89%8D%E7%AB%AF/2018/121901/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue的事件-定义执行方法</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://cn.vuejs.org/v2/guide/events.html" target="_blank" rel="noopener">vue官网-事件处理</a></p>
<h3 id="案例链接"><a href="#案例链接" class="headerlink" title="案例链接"></a>案例链接</h3><p><a href="https://gitee.com/caseAddress/vueDemo03.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo03.git</a></p>
<h3 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button v-on:click=&quot;fun1()&quot;&gt;执行方法的第一种写法&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;fun2()&quot;&gt;执行方法的第二种写法&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;getMsg()&quot;&gt;获取data里面的msg数据&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;setMsg()&quot;&gt;改变data里面的msg数据&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;!-- 用途：用于请求数据等 --&gt;</span><br><span class="line">    &lt;button @click=&quot;requestData()&quot;&gt;请求数据&lt;/button&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;(item,key) in list&quot;&gt;</span><br><span class="line">        &#123;&#123;key&#125;&#125;--&#123;&#123;item&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- 方法的传值 --&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;passData(&apos;aaa&apos;)&quot;&gt;方法的传值&lt;/button&gt;</span><br><span class="line">    &lt;!-- 方法的事件对象 --&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button data-aid=&quot;aaa&quot; @click=&quot;eventFn($event)&quot;&gt;获取事件对象&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;app&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &apos;你好 vue！&apos;,</span><br><span class="line">      list:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    fun1:function()&#123;</span><br><span class="line">      alert(&quot;执行方法的第一种写法&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // ES6写法可简写，去除:function</span><br><span class="line">    fun2()&#123;</span><br><span class="line">      alert(&quot;执行方法的第二种写法&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMsg()&#123;</span><br><span class="line">      alert(this.msg);</span><br><span class="line">    &#125;,</span><br><span class="line">    setMsg()&#123;</span><br><span class="line">      this.msg=&quot;我是改变后的数据&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">    requestData()&#123;</span><br><span class="line">      for(var i = 0;i&lt;=10;i++)&#123;</span><br><span class="line">        this.list.push(&quot;我是第&quot;+ i + &quot;个数据&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    passData(val)&#123;</span><br><span class="line">      alert(val);</span><br><span class="line">    &#125;,</span><br><span class="line">    eventFn(e)&#123;</span><br><span class="line">      console.log(e);</span><br><span class="line">      // 用途：获取Dom节点 e.srcElement:dom节点</span><br><span class="line">      e.srcElement.style.background=&quot;red&quot;;</span><br><span class="line">      // 或者获取自定义属性的值，尤其是小程序用的非常多</span><br><span class="line">      // 获取自定义属性：</span><br><span class="line">      console.log(e.srcElement.dataset);</span><br><span class="line">      // 获取自定义属性aid的值：</span><br><span class="line">      console.log(e.srcElement.dataset.aid);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="案例效果截图"><a href="#案例效果截图" class="headerlink" title="案例效果截图"></a>案例效果截图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-3b7f72f4a8a5fe45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-富文本解析出现的问题</title>
    <url>/2018/12/20/%E5%89%8D%E7%AB%AF/2018/122001/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序wxparse内容页显示不出来不能正确解析html代码</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>微信小程序wxparse内容页显示不出来不能正确解析html代码</p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>这个是wxparse代码的一个bug,在一些特殊的手机里面，在wxparse/html2json.js中的第112和119行，都有一个console.dir(这个函数的使用，把这个函数注释掉，内容就可以正常显示出来了。 </p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-178d099aeb3db616.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-5.双向数据绑定及ref获取dom节点</title>
    <url>/2018/12/21/%E5%89%8D%E7%AB%AF/2018/122101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue双向数据绑定及ref获取dom节点</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="案例链接"><a href="#案例链接" class="headerlink" title="案例链接"></a>案例链接</h3><p><a href="https://gitee.com/caseAddress/vueDemo04.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo04.git</a></p>
<h3 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt;</span><br><span class="line">    &lt;!-- 点击事件v-on:click或@click --&gt;</span><br><span class="line">    &lt;button v-on:click=&quot;getMsg()&quot;&gt;获取表单里面的数据&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;setMsg()&quot;&gt;设置表单里面的数据&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;!-- ref就是用于获取dom节点的 --&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; ref=&quot;userInfo&quot;&gt;</span><br><span class="line">    &lt;button v-on:click=&quot;getInputVal()&quot;&gt;获取第二个表单里面的数据&lt;/button&gt;</span><br><span class="line">    &lt;div ref=&quot;box&quot;&gt;我是一个box&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">/*</span><br><span class="line"></span><br><span class="line">  双向数据绑定 MVVM vue就是一个MVVM框架</span><br><span class="line">  M model</span><br><span class="line">  V view</span><br><span class="line">  MVVM：model改变会影响视图view，视图view改变会反过来影响model</span><br><span class="line">  双向数据绑定必须在表单中使用；</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;app&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &apos;你好 vue！&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    getMsg()&#123;</span><br><span class="line">      // 获取data方法里面的msg数据：this.msg</span><br><span class="line">      alert(this.msg);</span><br><span class="line">    &#125;,</span><br><span class="line">    setMsg()&#123;</span><br><span class="line">      this.msg=&quot;我是改变后的数据&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">    getInputVal()&#123;</span><br><span class="line">      // 获取ref定义的节点</span><br><span class="line">      alert(this.$refs.userInfo.value);</span><br><span class="line">      // 改变box的背景颜色</span><br><span class="line">      this.$refs.box.style.background=&quot;red&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="案例效果截图"><a href="#案例效果截图" class="headerlink" title="案例效果截图"></a>案例效果截图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-33e8114e6b9efe7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-7.组件的创建及使用</title>
    <url>/2018/12/22/%E5%89%8D%E7%AB%AF/2018/122202/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue的组件的功能：把页面抽象成多个相对独立的模块；实现代码重用，提高开发效率和代码质量，使得代码易于维护；</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>案例链接：<a href="https://gitee.com/caseAddress/vueDemo06.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo06.git</a></p>
<h3 id="一-什么是组件"><a href="#一-什么是组件" class="headerlink" title="一.什么是组件"></a>一.什么是组件</h3><p><a href="https://cn.vuejs.org/v2/guide/components.html" target="_blank" rel="noopener">官方网址-组件详解</a></p>
<p><strong>1.vue组件的定义</strong></p>
<p>组件可以扩展HTML元素，封装可重用代码</p>
<p>组件也是自定义元素，vue.js的编译器能为他添加特殊功能</p>
<p>部分情况下，组件也可以表现用 is 特性进行了扩展的原生的HTML元素</p>
<p>所有的vue组件同时也都是Vue实例，所以同样有template（html页面），script（js），style（样式），生命周期等；</p>
<p><strong>2.vue组件的功能</strong></p>
<p>能够把页面抽象成多个相对独立的模块；</p>
<p>实现代码重用，提高开发效率和代码质量，使得代码易于维护；</p>
<h3 id="二-创建组件"><a href="#二-创建组件" class="headerlink" title="二.创建组件"></a>二.创建组件</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-f9b5554b77f95e7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="三-调用组件"><a href="#三-调用组件" class="headerlink" title="三.调用组件"></a>三.调用组件</h3><p><strong>比如添加一个Home组件：</strong></p>
<p>步骤：</p>
<p>1.在App.vue引入Home组件；</p>
<p>2.挂载组件-名字可以随意取，但是不能重复，也不能跟html标签一样;挂载组件要使用components；</p>
<p>3.在模板中使用组件；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4c3ca9f6ca23ebc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="四-案例效果"><a href="#四-案例效果" class="headerlink" title="四.案例效果"></a>四.案例效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-f0a24a1bb2b70c17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>同理，可以在App.vue挂载更多的组件，也可以在Home组件挂载其他组件；</p>
<h3 id="五-最后"><a href="#五-最后" class="headerlink" title="五.最后"></a>五.最后</h3><p>上面案例中，我只想给Home中的h2添加背景色不想给App.vue或者其他组件的h2添加样式，那有以下解决方法：</p>
<p>1.给Home组件最外层的div添加一个id，然后在样式的最外层添加id名，比如：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e187f6b0b46c92c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.在style中添加scoped（表示css的局部作用域）：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6c5e75d8a48a0c5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>这样显示的效果就只有Home组件中的H2添加背景色了：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-c88d744004a23dc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-6.事件结合双向绑定实现最简单版todolist</title>
    <url>/2018/12/22/%E5%89%8D%E7%AB%AF/2018/122201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue-事件结合双向绑定实现最简单版todolist</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="案例链接"><a href="#案例链接" class="headerlink" title="案例链接"></a>案例链接</h3><p><a href="https://gitee.com/caseAddress/vueDemo05.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo05.git</a></p>
<h3 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;todo&quot; @keyup=&quot;doAdd($event)&quot;&gt;</span><br><span class="line">    &lt;hr&gt;&lt;br&gt;</span><br><span class="line">    &lt;h2&gt;进行中&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;(item,key) in list&quot; v-if=&quot;!item.checkbox&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; v-model=&quot;item.checkbox&quot; @change=&quot;saveList()&quot;&gt; &#123;&#123;item.title&#125;&#125; ---- &lt;button @click=&quot;removeData(key)&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;hr&gt;&lt;br&gt;</span><br><span class="line">    &lt;h2&gt;已完成&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;(item,key) in list&quot; v-if=&quot;item.checkbox&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; v-model=&quot;item.checkbox&quot; @change=&quot;saveList()&quot;&gt; &#123;&#123;item.title&#125;&#125; ---- &lt;button @click=&quot;removeData(key)&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;app&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      todo: &apos;&apos;,</span><br><span class="line">      list:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    doAdd(e)&#123;</span><br><span class="line">      // e.keyCode==13：当敲回车时执行事件</span><br><span class="line">      if(e.keyCode==13)&#123;</span><br><span class="line">        // 增加数据 1.获取文本框的值； 2.把文本框的值push到list上；</span><br><span class="line">        this.list.push(&#123;</span><br><span class="line">          title:this.todo,</span><br><span class="line">          checkbox:false</span><br><span class="line">        &#125;);</span><br><span class="line">        this.todo = &apos;&apos;;</span><br><span class="line">        //把list保存在本地缓存中 </span><br><span class="line">        localStorage.setItem(&quot;list&quot;,JSON.stringify(this.list));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    removeData(key)&#123;</span><br><span class="line">      // 删除数据 splice:js操作数组的方法</span><br><span class="line">      this.list.splice(key,1);</span><br><span class="line">      //把list保存在本地缓存中 </span><br><span class="line">      localStorage.setItem(&quot;list&quot;,JSON.stringify(this.list));</span><br><span class="line">    &#125;,</span><br><span class="line">    saveList()&#123;</span><br><span class="line">      // 保存checkbox的状态</span><br><span class="line">      localStorage.setItem(&quot;list&quot;,JSON.stringify(this.list));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted()&#123;</span><br><span class="line">    // vue的生命周期函数--vue页面刷新的时候就会触发的函数</span><br><span class="line">    let list = JSON.parse(localStorage.getItem(&quot;list&quot;));//获取本地缓存的list数组</span><br><span class="line">    if(list)&#123;</span><br><span class="line">      this.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="案例效果截图"><a href="#案例效果截图" class="headerlink" title="案例效果截图"></a>案例效果截图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-b9d466ebf8b5609a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="饭后甜点"><a href="#饭后甜点" class="headerlink" title="饭后甜点"></a>饭后甜点</h3><p><strong>封装 localStorage.setItem：</strong></p>
<p>案例链接：<a href="https://gitee.com/lb1011/vue-demo05-01.git" target="_blank" rel="noopener">封装本地缓存（实现todelist功能）</a></p>
<p>1.新建一个storage.js：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1841c11e15e713be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.在vue.app引入storage.js并调用里面的函数：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8afa38bbfc1218aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-8.生命周期钩子函数详解</title>
    <url>/2018/12/23/%E5%89%8D%E7%AB%AF/2018/122301/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>参考链接：<a href="">生命周期</a></p>
<p>案例链接：<a href="https://gitee.com/caseAddress/vueDemo07.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueDemo07.git</a></p>
<h3 id="一-什么是生命周期钩子函数"><a href="#一-什么是生命周期钩子函数" class="headerlink" title="一.什么是生命周期钩子函数"></a>一.什么是生命周期钩子函数</h3><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。</p>
<p>比如上一篇文章：<a href="https://www.btluo.com/news.html?articleId=26" target="_blank" rel="noopener">vue-事件结合双向绑定实现最简单版todolist</a>中使用到的mounted，也有一些其它的钩子，在实例生命周期的不同阶段被调用，如 beforeDestroy、updated 和 destroyed等。生命周期钩子的 this 上下文指向调用它的 Vue 实例。具体使用api方法：<a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90" target="_blank" rel="noopener">选项-生命周期钩子</a>；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-36f3ae41cfda68e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><strong>vue的8中生命周期函数：</strong></p>
<p>1.beforeCreate：该函数在实例对象刚被创建，还没有绑定属性时触发执行。</p>
<p>2.created：该函数在实例对象完成创建和属性绑定，但是DOM还未生成（$el属性还不存在）时触发执行。</p>
<p>3.beforeMount：该函数在组件挂载之前触发执行。</p>
<p>4.mounted：该函数在组件挂载完成之后触发执行。</p>
<p>5.beforeUpdate：该函数在组件数据更新之前触发执行。</p>
<p>6.updated：该函数在组件数据更新完毕之后触发执行。</p>
<p>7.beforeDestroy：该函数在实例对象销毁之前触发执行。</p>
<p>8.destroyed：该函数在实例对象完成销毁之后触发执行。</p>
<table>
<thead>
<tr>
<th>钩子函数</th>
<th>触发的行为</th>
<th>在此阶段可以做的事情</th>
</tr>
</thead>
<tbody><tr>
<td>beforeCreadted</td>
<td>vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。</td>
<td>加loading事件</td>
</tr>
<tr>
<td>created</td>
<td>vue实例的数据对象data有了，$el还没有</td>
<td>结束loading、请求数据为mounted渲染做准备</td>
</tr>
<tr>
<td>beforeMount</td>
<td>vue实例的$el和data都初始化了，但还是虚拟的dom节点，具体的data.filter还未替换。</td>
<td></td>
</tr>
<tr>
<td>mounted</td>
<td>vue实例挂载完成，data.filter成功渲染</td>
<td>配合路由钩子使用</td>
</tr>
<tr>
<td>beforeUpdate</td>
<td>data更新时触发</td>
<td></td>
</tr>
<tr>
<td>updated</td>
<td>data更新时触发</td>
<td>数据更新时，做一些处理（此处也可以用watch进行观测）</td>
</tr>
<tr>
<td>beforeDestroy</td>
<td>组件销毁时触发</td>
<td></td>
</tr>
<tr>
<td>destroyed</td>
<td>组件销毁时触发，vue实例解除了事件监听以及和dom的绑定（无响应了），但DOM节点依旧存在</td>
<td>组件销毁时进行提示</td>
</tr>
</tbody></table>
<h3 id="二-官网生命周期图"><a href="#二-官网生命周期图" class="headerlink" title="二.官网生命周期图"></a>二.官网生命周期图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-ab3bf813dc8c6eee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-72b7598a242b3b01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery on()方法无响应问题</title>
    <url>/2019/04/12/%E5%89%8D%E7%AB%AF/2019/041201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>使用jquery on()方法解决html页面点击元素，事件无响应的问题</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>无法触发相应事件的两种代码：</p>
<p>执行以下两种代码时，点击#id时，无alert弹出。</p>
<p><strong>方法一：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;#id&quot;).click( function() &#123;</span><br><span class="line">    alert(&quot;事件无响应&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>方法二：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;#id&quot;).on(&quot;click&quot; , function() &#123; </span><br><span class="line">    alert(&quot;事件无响应&quot;);  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>以上两种方法，只针对页面加载时就存在dom中元素，也就是说&lt;#id&gt;不能是动态添加的元素。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;body&quot;).on( &quot;click&quot; , &quot;#id&quot;  , function() &#123; </span><br><span class="line">    alert(&quot;事件无响应&quot;);  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-基于vue-cli、elementUI的小案例</title>
    <url>/2019/08/02/%E5%89%8D%E7%AB%AF/2019/080201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>基于vue-cli、elementUI的小案例（输入姓名年龄性别，点击创建表格）</p>
<h2 id="一-配置vue"><a href="#一-配置vue" class="headerlink" title="一.配置vue"></a>一.配置vue</h2><p>参考文章：<a href="https://www.btluo.com/news.html?articleId=17" target="_blank" rel="noopener">开发环境配置</a></p>
<h2 id="二-安装elementui"><a href="#二-安装elementui" class="headerlink" title="二.安装elementui"></a>二.安装elementui</h2><h3 id="方法①"><a href="#方法①" class="headerlink" title="方法①"></a>方法①</h3><p><strong>使用命令进行安装：</strong></p>
<pre><code>npm i element-ui -S</code></pre><h3 id="方法②"><a href="#方法②" class="headerlink" title="方法②"></a>方法②</h3><p><strong>在package.json中添加，后通过cnpm install进行安装：</strong></p>
<p>1.打开package.json，找到devDependencies并在最后加上”element-ui”: “^2.2.1”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;element-ui&quot;: &quot;^2.2.1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.通过cnpm install安装依赖；</p>
<p>3.找到main.js，引入elementui：</p>
<p>添加一下三行代码：</p>
<pre><code>import ElementUI from &quot;element-ui&quot; //新添加

import &quot;element-ui/lib/theme-chalk/index.css&quot; //新添加，避免后期打包样式不同，要放在import App from &quot;./App&quot;;之前

Vue.use(ElementUI) //新添加</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-f08cd178a99ed83d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>添加完之后，就可以开始使用elementui了；</p>
<p>注：elementui组件官网：<a href="https://element.faas.ele.me/#/zh-CN/component/installation" target="_blank" rel="noopener">https://element.faas.ele.me/#/zh-CN/component/installation</a></p>
<h2 id="三-使用elementui"><a href="#三-使用elementui" class="headerlink" title="三.使用elementui"></a>三.使用elementui</h2><h3 id="1-新建个demo-vue文件"><a href="#1-新建个demo-vue文件" class="headerlink" title="1.新建个demo.vue文件"></a>1.新建个demo.vue文件</h3><p>在elementui官网查看组件并使用elementui，在components文件夹中新建一个demo.vue文件：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-88637890c8c697da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-修改HelloWorld-vue的内容"><a href="#2-修改HelloWorld-vue的内容" class="headerlink" title="2.修改HelloWorld.vue的内容"></a>2.修改HelloWorld.vue的内容</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-af6dc9387f8be703.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="3-添加新路由"><a href="#3-添加新路由" class="headerlink" title="3.添加新路由"></a>3.添加新路由</h3><p>打开router/index.js，添加新路由；（<a href="https://router.vuejs.org/" target="_blank" rel="noopener">vue路由文档</a>）</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a09c53ceb7019e3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-c20446cfd4eae03c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>点击进入elementui-demo页面:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a9b6386904ab52be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>至此，我们已经把引入依赖，路由简单配置，简单的elementui组件的使用配置完成了；</p>
<h3 id="4-完善demo组件"><a href="#4-完善demo组件" class="headerlink" title="4.完善demo组件"></a>4.完善demo组件</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-1d2176966f539c65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>首先，从elementui官网中找到我们需要的组件，放进demo.vue中：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-49974f49fe051dc5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0763782b7160b1b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>其中：凡是以以el-开头的都是element-ui的组件；</p>
<p>运行下代码我们可以看到，添加，删除功能都有了，但是每次刷新页面的时候，数据就会丢失，因此我们可以使用localStorage来临时保存数据；</p>
<h3 id="5-存储数据"><a href="#5-存储数据" class="headerlink" title="5.存储数据"></a>5.存储数据</h3><p>在src文件夹中新建一个store文件夹，在store文件夹中新建一个store.js，用于存储数据：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-475d497b72e76a29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>getItem和setItem是window.localStorage的获取和保存数据的方法</p>
<p>我们用JSON.stringify和JSON.parse把数据转成字符串和解析，这样就方便我们写入tabledata</p>
<h3 id="6-储存好后接着完善demo-vue文件"><a href="#6-储存好后接着完善demo-vue文件" class="headerlink" title="6.储存好后接着完善demo.vue文件"></a>6.储存好后接着完善demo.vue文件</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-974bf938f7954277.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>在script中引入store.js，将tabledata数据换成store中的获取数据的方法，在添加监听事件；</p>
<p>总的来说就是我们点击页面上的创建按钮，watch监听到tabledata有变化，就执行savedata(items){Storage.save(items)}进行数据保存，点击删除时，tabledata也有变化，同样会执行保存；</p>
<h3 id="7-最后"><a href="#7-最后" class="headerlink" title="7.最后"></a>7.最后</h3><p>之后我们创建的数据，刷新页面也会暂时存储，不会消失的:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-38d6682b71408511.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="四-案例地址"><a href="#四-案例地址" class="headerlink" title="四.案例地址"></a>四.案例地址</h2><p><a href="https://gitee.com/caseAddress/vueElementuiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/vueElementuiDemo.git</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>一个实用的jQuery拖放排序插件--DDSort</title>
    <url>/2019/08/09/%E5%89%8D%E7%AB%AF/2019/080901/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>网上搜到的一款基于jQuery不错的拖放排序插件</p>
<h2 id="一-拖拽效果"><a href="#一-拖拽效果" class="headerlink" title="一.拖拽效果"></a>一.拖拽效果</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-8979f5d7df14e38e.gif?imageMogr2/auto-orient/strip" alt="我的博客图片"></p>
<h2 id="二-html代码"><a href="#二-html代码" class="headerlink" title="二.html代码"></a>二.html代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;wrap&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            世界上最美好的相遇是恰好，你洽好青春年少，我恰好青春芳华；世界上最唯美的惊艳是偶然，你偶然出现，我偶然发现，然后清纯的两颗心，慢慢地慢慢地靠近；</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            你飘逸的裙裾逶迤在我寂寞里飞马行空的诗行，跟随你的优雅舒缓的步履，</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            在相濡以沫心心相印的平凡日子里心香如故，刻写一个个浪漫和感动记忆的满面皱纹。</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            除了怀念，只剩怀念；除了无言，只能无言！</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">            一些事情，你愈是去遮掩愈是容易清晰，原本以为的瞒天过海，结果却是欲盖弥彰。</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="三-依次引入jquery-js和ddsort-js"><a href="#三-依次引入jquery-js和ddsort-js" class="headerlink" title="三.依次引入jquery.js和ddsort.js"></a>三.依次引入jquery.js和ddsort.js</h2><p>GitHub-demo地址：<a href="https://gitee.com/caseAddress/ddsortDraganddrop.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/ddsortDraganddrop.git</a></p>
<h2 id="四-使用DDSort-API实现拖放排序效果"><a href="#四-使用DDSort-API实现拖放排序效果" class="headerlink" title="四.使用DDSort API实现拖放排序效果"></a>四.使用DDSort API实现拖放排序效果</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$( &quot;#wrap&quot;).DDSort(&#123;</span><br><span class="line">    target: &quot;li&quot;,</span><br><span class="line">    floatStyle: &#123;</span><br><span class="line">        &quot;border&quot;: &quot;1px solid #ccc&quot;,</span><br><span class="line">        &quot;background-color&quot;: &quot;#fff&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="五-DDSort-API指南"><a href="#五-DDSort-API指南" class="headerlink" title="五.DDSort API指南"></a>五.DDSort API指南</h2><table>
<thead>
<tr>
<th>参数列表</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>target</td>
<td>string</td>
<td>插件内部使用的是jQuery的on方法绑定的事件，此参数就是on方法上的选择器字符串</td>
</tr>
<tr>
<td>cloneStyle</td>
<td>object</td>
<td>可选，设置占位符元素的样式</td>
</tr>
<tr>
<td>floatStyle</td>
<td>object</td>
<td>可选，设置拖动元素的样式</td>
</tr>
<tr>
<td>down</td>
<td>function</td>
<td>可选，鼠标按下时执行的函数</td>
</tr>
<tr>
<td>move</td>
<td>function</td>
<td>可选，鼠标移动时执行的函数</td>
</tr>
<tr>
<td>up</td>
<td>function</td>
<td>可选，鼠标抬起时执行的函数</td>
</tr>
</tbody></table>
<h2 id="六-插件地址下载"><a href="#六-插件地址下载" class="headerlink" title="六.插件地址下载"></a>六.插件地址下载</h2><p><a href="https://github.com/Barrior/DDSort" target="_blank" rel="noopener">https://github.com/Barrior/DDSort</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-部分问题集锦</title>
    <url>/2019/08/22/%E5%89%8D%E7%AB%AF/2019/082201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序遇到的问题及解决方法集锦，持续更新…</p>
<h2 id="1-去除小程序button点击时出现灰背景"><a href="#1-去除小程序button点击时出现灰背景" class="headerlink" title="1.去除小程序button点击时出现灰背景"></a>1.去除小程序button点击时出现灰背景</h2><p>答：hover-class=”btn-hover”  给button添加此属性即可去除点击时背景色；</p>
<h2 id="2-动态改变page-json-里面的navigationBarTitleText标题"><a href="#2-动态改变page-json-里面的navigationBarTitleText标题" class="headerlink" title="2.动态改变page.json 里面的navigationBarTitleText标题"></a>2.动态改变page.json 里面的navigationBarTitleText标题</h2><p>答： wx.setNavigationBarTitle({title: title})；</p>
<h2 id="3-去除小程序button的默认border样式"><a href="#3-去除小程序button的默认border样式" class="headerlink" title="3.去除小程序button的默认border样式"></a>3.去除小程序button的默认border样式</h2><p>答：.btn:after {border: none;}</p>
<h2 id="4-image标签跟view标签上下会有间隙"><a href="#4-image标签跟view标签上下会有间隙" class="headerlink" title="4.image标签跟view标签上下会有间隙"></a>4.image标签跟view标签上下会有间隙</h2><p><strong>原因：</strong></p>
<p>图片文字等inline元素默许是跟父级元素的baseline对齐，而baseline又和父级底边有必定间距；</p>
<p><strong>方案一：</strong></p>
<p>将图片转换为块级对象，即img{display:block;}；</p>
<p><strong>方案二：</strong></p>
<p>设置图片的vertical-align属性为“top，text-top，bottom，text-bottom”也可以解决。如： img {vertical-align:top;}；</p>
<p><strong>方案三：</strong></p>
<p>设置图片的浮动属性；即img {float:left;}；</p>
<h2 id="5-小程序input去除空格"><a href="#5-小程序input去除空格" class="headerlink" title="5.小程序input去除空格"></a>5.小程序input去除空格</h2><p>1.给input绑定bindinput事件；</p>
<p>2.利用数据双向绑定同步当前input的value值；</p>
<p>3.利用正则去除空格（replace(/\s+/g, ‘’)）；</p>
<p>html:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; bindinput=&quot;getValue&quot; value=&quot;&#123;&#123;value&#125;&#125;&quot; &gt;&lt;/input&gt;</span><br></pre></td></tr></table></figure>

<p>js:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getValue:function(e)&#123;</span><br><span class="line">    let val = e.detail.value;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">        value: val.replace(/\s+/g, &apos;&apos;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-在使用canvas绘图时，使用图片做背景遇到的问题"><a href="#6-在使用canvas绘图时，使用图片做背景遇到的问题" class="headerlink" title="6.在使用canvas绘图时，使用图片做背景遇到的问题"></a>6.在使用canvas绘图时，使用图片做背景遇到的问题</h2><p>背景：在使用图片为背景通过canvsa绘制图片时，会遇到不同手机获取到的背景图片被截取程度会不同，生成的图片并不是我们想要的大小。</p>
<p>因此我们在使用图片作为canvas绘制图片的背景图片时，需要先获取屏幕的分辨率设置图片自适应大小：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 生成海报</span><br><span class="line">createPoster: function ()&#123;</span><br><span class="line">    let that = this</span><br><span class="line">        , pageBg = this.data.pageBg  //背景图片地址</span><br><span class="line">        , width;</span><br><span class="line">    wx.getSystemInfo(&#123;</span><br><span class="line">        success(res) &#123;</span><br><span class="line">            width = res.screenWidth; //当前分辨率宽度</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    //设置自适应大小</span><br><span class="line">    const x = width / 750;</span><br><span class="line">    const ctx = wx.createCanvasContext(&apos;qrCodeCanvas&apos;);  </span><br><span class="line">    console.log(ctx);</span><br><span class="line">    //主要布局</span><br><span class="line">    ctx.clearRect(0, 0, 750, 1204);</span><br><span class="line">    ctx.fillStyle = &apos;#e04e4e&apos;;</span><br><span class="line">    ctx.fillRect(0, 0, 750, 1204);</span><br><span class="line">    //根据分辨率设置背景图片大小；750：图片宽度；1204：图片高度；</span><br><span class="line">    ctx.drawImage(pageBg, 0, 0, 750 * x, 1204 * x); </span><br><span class="line">    ctx.draw(false, function () &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">            // canvas画布转成图片</span><br><span class="line">            wx.canvasToTempFilePath(&#123;</span><br><span class="line">                x: 0,</span><br><span class="line">                y: 0,</span><br><span class="line">                width: 750,</span><br><span class="line">                height: 1204,</span><br><span class="line">                destWidth: 2250,</span><br><span class="line">                destHeight: 3612,</span><br><span class="line">                canvasId: &apos;qrCodeCanvas&apos;,</span><br><span class="line">                success: function (res) &#123;</span><br><span class="line">                    console.log(res.tempFilePath);</span><br><span class="line">                    that.setData(&#123;</span><br><span class="line">                        qrCodeImgCanvas: res.tempFilePath</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                fail: function (res) &#123;</span><br><span class="line">                    console.log(&quot;error&quot;);</span><br><span class="line">                    console.log(res);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;, 200)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-9.路由：登录状态的判断</title>
    <url>/2019/09/11/%E5%89%8D%E7%AB%AF/2019/091101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在搭建的系统中，最基本的登录都是必须的，结合Vue的路由，涉及最多的就是登录状态的判断。也就是说，如果一个组件要校验登录状态，则在用户初始进入时，就要去判断用户是否登录。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>一.在main.js中判断该路由是否需要登录权限：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-fea4e3d58fe36f1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">    if (to.matched.some(record =&gt; record.meta.requireLogin))&#123; // 判断该路由是否需要登录权限</span><br><span class="line">        if (sessionStorage.getItem(&quot;loginInfo&quot;)) &#123; // 判断当前用户的登录信息loginInfo是否存在</span><br><span class="line">            next();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            next(&#123;</span><br><span class="line">                path: &quot;/&quot;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>二.在登录组件中，做登录成功处理,存储登录信息到loginInfo中：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6334cfd39a1d0c99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sessionStorage.setItem(&quot;loginInfo&quot;,JSON.stringify(res.data.access_token));</span><br></pre></td></tr></table></figure>

<p>三.在router中的index.js中为路由加入是否登录校验：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a34f0218433c94df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">meta:&#123;</span><br><span class="line">     // 当前路由需要校验，不需要就不用写   </span><br><span class="line">     requireLogin:true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序插件-多列表显示隐藏</title>
    <url>/2019/09/19/%E5%89%8D%E7%AB%AF/2019/091902/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>实现单列表的显示和隐藏，通过wx:if判断就可实现，那么实现多列表的单项显示和隐藏功能应该如何实现呢？下面给大家带来了微信小程序之多列表的显示和隐藏功能。</p>
<h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-cacf525d0014bd29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--pages/multiListShowHidden/multiListShowHidden.wxml--&gt;</span><br><span class="line">&lt;view class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;entryBox bgF5&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;entryHead cMain f28&quot;&gt;请选择您要入驻的行业：&lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;entryBody&quot;&gt;</span><br><span class="line">            &lt;block wx:for-items=&quot;&#123;&#123;industryInfoData&#125;&#125;&quot;&gt;</span><br><span class="line">                &lt;view class=&quot;industryDad bgFFF flex ac jcs f32&quot;  bindtap=&quot;toggleBtn&quot; id=&quot;&#123;&#123;item.id&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;industryIcon flex ac&quot;&gt;</span><br><span class="line">                        &lt;image src=&quot;&#123;&#123;item.industryIcon&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">                        &lt;view&gt;&#123;&#123;item.industryName&#125;&#125;&lt;/view&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                    &lt;view&gt;</span><br><span class="line">                        &lt;image src=&quot;/images/iconBottomArrow.png&quot; class=&quot;bottomArrow&quot; wx:if=&quot;&#123;&#123;uhide==item.id&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">                        &lt;image src=&quot;/images/iconRightArrow.png&quot; class=&quot;rightArrow&quot; wx:else&gt;&lt;/image&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">                &lt;view class=&quot;industryChild flex ac f28&quot; wx:if=&quot;&#123;&#123;uhide==item.id&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;childItem tc &#123;&#123;childItem.cid == childActive?&quot;bgMain cfff&quot;:&quot;bgFFF&quot;&#125;&#125;&quot; data-cid=&quot;&#123;&#123;childItem.cid&#125;&#125;&quot; data-cname=&quot;&#123;&#123;childItem.cname&#125;&#125;&quot; bindtap=&quot;toSettledDetail&quot; wx:for=&quot;&#123;&#123;item.industryChild&#125;&#125;&quot; wx:for-item=&quot;childItem&quot; wx:key=&quot;*this&quot;&gt;</span><br><span class="line">                        &#123;&#123;childItem.cname&#125;&#125;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">            &lt;/block&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h2 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.entryBox&#123;width: 100%; min-height: 100vh; overflow: hidden;&#125;</span><br><span class="line">.entryHead&#123;width: 90%; padding: 40rpx 5%; box-sizing: border-box;&#125;</span><br><span class="line">.industryDad&#123;width: 100%; padding: 40rpx 5%; box-sizing: border-box; border-bottom: 1px solid #f5f5f5;&#125;</span><br><span class="line">.industryDad .industryIcon image&#123;width: 50rpx; height: 50rpx; margin-right: 20rpx;&#125;</span><br><span class="line">.industryChild&#123;width: 96%; margin: 20rpx 2%;&#125;</span><br><span class="line">.industryChild .childItem&#123;width: 28%; margin: 0 2%; padding: 15rpx 10rpx; overflow: hidden;white-space: nowrap;text-overflow: ellipsis;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        uhide: 0,</span><br><span class="line">        industryInfoData: []</span><br><span class="line">    &#125;,</span><br><span class="line">    //切换隐藏和显示</span><br><span class="line">    toggleBtn: function(event) &#123;</span><br><span class="line">        var that = this;</span><br><span class="line">        var toggleBtnVal = that.data.uhide;</span><br><span class="line">        var itemId = event.currentTarget.id;</span><br><span class="line">        if (toggleBtnVal == itemId) &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                uhide: 0</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                uhide: itemId</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onLoad: function(options) &#123;</span><br><span class="line">        var that = this;</span><br><span class="line">        var data = &#123;</span><br><span class="line">            &quot;datas&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;id&quot;: 1,</span><br><span class="line">                    &quot;industryIcon&quot;: &quot;/images/mineCollect.png&quot;,</span><br><span class="line">                    &quot;industryName&quot;: &quot;餐饮美食&quot;,</span><br><span class="line">                    &quot;industryChild&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 1,</span><br><span class="line">                            &quot;cName&quot;: &quot;小吃快餐&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 2,</span><br><span class="line">                            &quot;cName&quot;: &quot;面包甜点&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 3,</span><br><span class="line">                            &quot;cName&quot;: &quot;自助餐&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;id&quot;: 2,</span><br><span class="line">                    &quot;industryIcon&quot;: &quot;/images/mineCollect.png&quot;,</span><br><span class="line">                    &quot;industryName&quot;: &quot;家政服务&quot;,</span><br><span class="line">                    &quot;industryChild&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 1,</span><br><span class="line">                            &quot;cName&quot;: &quot;扫地&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 2,</span><br><span class="line">                            &quot;cName&quot;: &quot;洗衣服&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;cid&quot;: 3,</span><br><span class="line">                            &quot;cName&quot;: &quot;做饭&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">            industryInfoData: data.datas</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>项目案例下载地址：<a href="https://gitee.com/caseAddress/wxminiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/wxminiDemo.git</a> –其他小程序插件共用地址，持续更新中</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序插件-多图上传demo</title>
    <url>/2019/09/19/%E5%89%8D%E7%AB%AF/2019/091901/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序实现多图上传插件</p>
<h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-2d999fec3010b06f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--pages/uploadImg/uploadImg.wxml--&gt;</span><br><span class="line">&lt;view class=&quot;imgsbox&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;weui-uploader flex ac&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;imgList&quot; wx:for=&quot;&#123;&#123;imgs&#125;&#125;&quot; wx:for-item=&quot;item&quot; wx:key=&quot;*this&quot;&gt;</span><br><span class="line">            &lt;image class=&quot;uploadImg&quot; src=&quot;&#123;&#123;item&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; mode=&quot;aspectFill&quot; bindtap=&quot;previewImg&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;view class=&quot;delete-btn&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; catchtap=&quot;deleteImg&quot;&gt;</span><br><span class="line">                &lt;image class=&quot;imgDelete&quot; src=&quot;/images/iconImgDelete.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;upload-img-btn&quot; bindtap=&quot;chooseImg&quot;&gt;</span><br><span class="line">            &lt;image src=&quot;/images/iconUploadImg.jpg&quot;&gt;&lt;/image&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h2 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/* pages/uploadImg/uploadImg.wxss */</span><br><span class="line">.imgsbox&#123;width: 690rpx; margin: auto; background: #fff; box-sizing: border-box; overflow: hidden;&#125;</span><br><span class="line">.weui-cells&#123;font-size: 30rpx!important;&#125;</span><br><span class="line">.weui-cell::before&#123;border-top:1rpx solid #eee;&#125;</span><br><span class="line">.upload-img-btn image&#123;width: 140rpx; height: 140rpx; margin: 10rpx;&#125;</span><br><span class="line">.imgList&#123;width: 140rpx; height: 140rpx; margin: 15rpx; position: relative; overflow: hidden&#125;</span><br><span class="line">.delete-btn&#123;position: absolute; bottom: 0;left: 0; background-color: rgba(0,0,0,.5); color: #fff; text-align: center; line-height: 40rpx; width: 100%;&#125;</span><br><span class="line">.imgList .uploadImg&#123;width: 140rpx; height: 140rpx&#125;</span><br><span class="line">.weui-select&#123;border-right: none;&#125;</span><br><span class="line">.weui-uploader__hd&#123;float: left;&#125;</span><br><span class="line">.weui-uploader__title&#123;width: 150rpx!important;&#125;</span><br><span class="line">.weui-label&#123;width: 150rpx!important;&#125;</span><br><span class="line">.imgDelete&#123;width: 40rpx; height: 40rpx;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">page(&#123;   </span><br><span class="line">    /**</span><br><span class="line">    * 页面的初始数据</span><br><span class="line">     */</span><br><span class="line">    data: &#123;</span><br><span class="line">        imgs: [],</span><br><span class="line">        imgData: []</span><br><span class="line">    &#125;,</span><br><span class="line">    // 选择图片</span><br><span class="line">    chooseImg: function (e) &#123;</span><br><span class="line">        var that = this;</span><br><span class="line">        var imgs = that.data.imgs;</span><br><span class="line">        var count = 3 - imgs.length; //限制只能选择三张，按需求自己改</span><br><span class="line">        if (imgs.length &gt;= 3) &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                lenMore: 1</span><br><span class="line">            &#125;);</span><br><span class="line">            setTimeout(function () &#123;</span><br><span class="line">                that.setData(&#123;</span><br><span class="line">                    lenMore: 0</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;, 2500);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        wx.chooseImage(&#123;</span><br><span class="line">            count: count, // 默认9</span><br><span class="line">            sizeType: [&quot;compressed&quot;], // 可以指定是原图还是压缩图，默认二者都有</span><br><span class="line">            sourceType: [&quot;album&quot;, &quot;camera&quot;], // 可以指定来源是相册还是相机，默认二者都有</span><br><span class="line">            success: function (res) &#123;</span><br><span class="line">                // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span><br><span class="line">                var tempFilePaths = res.tempFilePaths;</span><br><span class="line">                var imgs = that.data.imgs;</span><br><span class="line">                for (var i = 0; i &lt; tempFilePaths.length; i++) &#123;</span><br><span class="line">                    if (imgs.length &gt;= 9) &#123;</span><br><span class="line">                        that.setData(&#123;</span><br><span class="line">                            imgs: imgs</span><br><span class="line">                        &#125;);</span><br><span class="line">                        // return false;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        imgs.push(tempFilePaths[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                that.setData(&#123;</span><br><span class="line">                    imgs: imgs</span><br><span class="line">                &#125;);</span><br><span class="line">                that.setData(&#123;</span><br><span class="line">                    picture: []</span><br><span class="line">                &#125;)</span><br><span class="line">                var tempFilePaths = that.data.imgs</span><br><span class="line">                for (var s = 0; s &lt; tempFilePaths.length; s++) &#123;</span><br><span class="line">                    console.log(tempFilePaths[s]);</span><br><span class="line">                    // 上传图片</span><br><span class="line">                    // wx.uploadFile(&#123;</span><br><span class="line">                    //     url: app.config.apiUrl + &quot;Api/Common/uploadImage&quot;,</span><br><span class="line">                    //     filePath: tempFilePaths[s],</span><br><span class="line">                    //     name: &quot;image&quot;,</span><br><span class="line">                    //     success: function (res) &#123;</span><br><span class="line">                    //         var data = res.data;</span><br><span class="line">                    //         console.log(data)</span><br><span class="line">                    //         var data = JSON.parse(res.data);</span><br><span class="line">                    //         console.log(data)</span><br><span class="line">                    //         var imgData = that.data.imgData;</span><br><span class="line">                    //         imgData.push(data.data);</span><br><span class="line">                    //         console.log(imgData)</span><br><span class="line">                    //         that.setData(&#123;</span><br><span class="line">                    //             imgData: imgData</span><br><span class="line">                    //         &#125;)</span><br><span class="line">                    //     &#125;</span><br><span class="line">                    // &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            fail: function (res) &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            complete: function (res) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除图片</span><br><span class="line">    deleteImg: function (e) &#123;</span><br><span class="line">        var that = this;</span><br><span class="line">        var imgs = this.data.imgs;</span><br><span class="line">        var imgData = that.data.imgData;</span><br><span class="line">        var index = e.currentTarget.dataset.index;</span><br><span class="line">        imgs.splice(index, 1);</span><br><span class="line">        imgData.splice(index, 1);</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">            imgs: imgs,</span><br><span class="line">            imgData: imgData</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 预览图片</span><br><span class="line">    previewImg: function (e) &#123;</span><br><span class="line">        //获取当前图片的下标</span><br><span class="line">        var index = e.currentTarget.dataset.index;</span><br><span class="line">        //所有图片</span><br><span class="line">        var imgs = this.data.imgs;</span><br><span class="line">        wx.previewImage(&#123;</span><br><span class="line">            //当前显示图片</span><br><span class="line">            current: imgs[index],</span><br><span class="line">            //所有图片</span><br><span class="line">            urls: imgs</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>项目案例下载地址：<a href="https://gitee.com/caseAddress/wxminiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/wxminiDemo.git</a> –其他小程序插件共用地址，持续更新中</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用Hexo建站</title>
    <url>/2019/11/11/%E5%89%8D%E7%AB%AF/2019/111101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>使用HEXO建自己的博客;</p>
<h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p><a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/setup</a></p>
<h2 id="一-什么是HEXO"><a href="#一-什么是HEXO" class="headerlink" title="一.什么是HEXO"></a>一.什么是HEXO</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="二-安装"><a href="#二-安装" class="headerlink" title="二.安装"></a>二.安装</h2><h3 id="1-安装前提"><a href="#1-安装前提" class="headerlink" title="1.安装前提"></a>1.安装前提</h3><p>nodejs(Node.js 版本需不低于 8.6，建议使用 Node.js 10.0 及以上版本)：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">nodejs安装教程</a>；</p>
<p>Git：<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496" target="_blank" rel="noopener">Git安装教程</a>；</p>
<h3 id="2-全局安装HEXO"><a href="#2-全局安装HEXO" class="headerlink" title="2.全局安装HEXO"></a>2.全局安装HEXO</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="三-新建HEXO"><a href="#三-新建HEXO" class="headerlink" title="三.新建HEXO"></a>三.新建HEXO</h2><p>输入以下命令（myHexoBlog为文件夹名称，可以任意取）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init myHexoBlog</span><br><span class="line">cd myHexoBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后，指定文件夹的目录如下：</p>
<p>├── _config.yml   –网站配置信息。</p>
<p>├── package.json    –应用程序信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p>
<p>├── scaffolds    –模板文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>├── source    –资源文件夹是存放用户资源的地方。</p>
<p>|  ├── _drafts</p>
<p>|  └── _posts</p>
<p>└── themes    –主题文件夹</p>
<h2 id="四-去github创建自己的仓库"><a href="#四-去github创建自己的仓库" class="headerlink" title="四.去github创建自己的仓库"></a>四.去github创建自己的仓库</h2><p>官网：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p>
<h3 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h3><p>名称为gitName.github.io, 其中gitName是你的github名称，如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8b21f242f1396301.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6fc9ef2b42ee1e30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-配置github账户信息"><a href="#2-配置github账户信息" class="headerlink" title="2.配置github账户信息"></a>2.配置github账户信息</h3><p>（YourName和YourEail都替换成你自己的）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">get config --global user.name &quot;YourName&quot;：</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-50bb175c7b2947d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">get config --global user.email &quot;YourEmail&quot;：</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-14a65b2a808aa829.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>小提示：</p>
<p>查看name：git config user.name；查看email：git config user.email；</p>
<h3 id="3-创建SSH"><a href="#3-创建SSH" class="headerlink" title="3.创建SSH"></a>3.创建SSH</h3><p>在gitbash中输入：ssh-keygen -t rsa -C “邮箱名”，一路回车。</p>
<p>然后根据C:\Users\Administrator.ssh返回路径找到id_rsa.pub文件，也可以继续使用命令：cd ~/.ssh，然后cat id_rsa.pub找到id_rsa.pub文件的内容。</p>
<p>然后复制从ssh-rsa一直到最后。</p>
<h3 id="4-将获取到的ssh放入github中"><a href="#4-将获取到的ssh放入github中" class="headerlink" title="4.将获取到的ssh放入github中"></a>4.将获取到的ssh放入github中</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-15a18e64345cb503.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>新建SSH密匙：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a80dd591de0a5fbc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3db42455caf38b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>title随便取，Key填刚刚复制的id_rsa.pub的内容；</p>
<h3 id="5-测试是否成功"><a href="#5-测试是否成功" class="headerlink" title="5.测试是否成功"></a>5.测试是否成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>出现Hi ***! You”ve successfully authenticated, but GitHub does not provide shell access.则表示成功！</p>
<h2 id="五-修改文件配置"><a href="#五-修改文件配置" class="headerlink" title="五.修改文件配置"></a>五.修改文件配置</h2><p>打开项目_config.yml文件，修改里面配置（冒号之后都有个半角空格）：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-359b46654688cadc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1ec66d67348a3102.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">    type:git </span><br><span class="line"></span><br><span class="line">    repo:git@github.com: gitName / gitName .github.io.git </span><br><span class="line"></span><br><span class="line">    branch:master</span><br></pre></td></tr></table></figure>

<p>提示：记得将gitName替换成你自己的github名称;</p>
<h2 id="六-打开本地博客"><a href="#六-打开本地博客" class="headerlink" title="六.打开本地博客"></a>六.打开本地博客</h2><p>在你的bolg目录下打开gitbash，分别执行以下命令：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6b038f36143c9f57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean    -- 清除缓存文件 (db.json) 和已生成的静态文件 (public) </span><br><span class="line">hexo generate    --生成静态文件</span><br><span class="line">hexo server    --启动本地服务http://localhost:4000</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8d88ecb0afb465b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>输入<a href="http://localhost:4000，就可以在本地打开博客了：" target="_blank" rel="noopener">http://localhost:4000，就可以在本地打开博客了：</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-0c838816f80de6df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="七-修改主题"><a href="#七-修改主题" class="headerlink" title="七.修改主题"></a>七.修改主题</h2><p>如果觉得默认主题不是很好看，可以自行下载主题替换：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方网址</a>。</p>
<p>如：<a href="https://github.com/yiluyanxia/hexo-theme-antiquity.git：" target="_blank" rel="noopener">https://github.com/yiluyanxia/hexo-theme-antiquity.git：</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4e66de0caacc6e51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>修改_config.yml中的theme: landscape改为theme: hexo-theme-antiquity，然后重新执行hexo g就行。</p>
<p>建议执行下：hexo clean，清理下public文件内容在执行hexo generate；</p>
<p>最后hexo deploy重新发布就行。效果：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-20e83ea760e37c62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="八-上传代码至GitHub"><a href="#八-上传代码至GitHub" class="headerlink" title="八.上传代码至GitHub"></a>八.上传代码至GitHub</h2><p>1.将写好的文章部署到github服务器上：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>2.执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean    --清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line">hexo generate    --生成静态文件</span><br><span class="line">hexo deploy    --上传代码到gethub</span><br></pre></td></tr></table></figure>

<p>Are you sure you want to continue connecting –输yes就行</p>
<p>在浏览器中输入<a href="https://gitName.github.io就可以看到你的个人博客啦！" target="_blank" rel="noopener">https://gitName.github.io就可以看到你的个人博客啦！</a></p>
<p>记得将gitName替换成刚刚设置的仓库名；</p>
<h2 id="九-新建博客"><a href="#九-新建博客" class="headerlink" title="九.新建博客"></a>九.新建博客</h2><p>在你的bolg目录下运行命令:</p>
<p>hexo new 欢迎来到我的博客（名称自取）</p>
<p>然后打开E:\myHexoBlog\source_posts文件夹，就可以看到一个欢迎来到我的博客.md的文件。用支持markdown语法的软件打开该文件进行编辑即可。  </p>
<p>编辑好以后，运行下述命令： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p>然后，在网址中输入<a href="https://gitName.github.io" target="_blank" rel="noopener">https://gitName.github.io</a>即可看到你的博客上，出现这篇新的文章。  </p>
<p>至此，个人博客初步搭建过程就完成了。</p>
<p>我的Hexo博客网址：<a href="https://52lb.github.io" target="_blank" rel="noopener">https://52lb.github.io</a> 仅供参考，内容博文较少。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序插件-保存图片到本地</title>
    <url>/2019/11/11/%E5%89%8D%E7%AB%AF/2019/111102/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序保存图片到本地方法，用户拒绝授权后重新拉取授权方法</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>小程序为保护用户隐私，对保存相册需要进行授权：</p>
<p>一.授权又分三种情况：</p>
<p>1.用户第一次授权；</p>
<p>2.用户拒绝授权；</p>
<p>3.用户已授权；</p>
<p>二.处理逻辑：</p>
<p>1.获取用户授权信息，判断用户是否已授权；</p>
<p>2.判断scope.writePhotosAlbum是否为true，</p>
<p>若为true，则直接保存图片；</p>
<p>若为undefined，则说明是第一次授权，需要调用wx.authorize进行授权，授权框只会在第一次询问时弹出，如果用户已经拒绝了，则不会在弹出，即为false。</p>
<p>若为false，则需要使用wx.openSetting引导用户打开授权设置，用户授权之后才能保存图片到相册；</p>
<h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-770cc94bb34c4c8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class=&quot;couponImg&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;couponTip&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;tipBg&quot;&gt;&lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;tipContent&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;iconClose&quot;&gt;</span><br><span class="line">                &lt;image src=&quot;/images/iconClose.png&quot; bindtap=&quot;closeCoupon&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">            &lt;image src=&quot;&#123;&#123;qrCodeImg&#125;&#125;&quot; class=&quot;qrCode&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;view class=&quot;saveBtn&quot;&gt;</span><br><span class="line">                &lt;button class=&quot;btnMain&quot; bindtap=&quot;hasAuthSetting&quot;&gt;保存到相册&lt;/button&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h2 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.couponImg .couponTip&#123;width: 100%; position: fixed; top: 0; height: 100vh; z-index: 1001;&#125;</span><br><span class="line">.couponImg .tipBg&#123;width: 100vh; height: 100vh; background: rgba(0, 0, 0, 0.4); position: absolute; top: 0; z-index: 1002;&#125;</span><br><span class="line">.couponImg .tipContent&#123;width: 80%; height: 1000rpx; position: absolute; left: 50%; top: 50%; transform: translate(-50%,-50%);z-index: 1003;&#125;</span><br><span class="line">.couponImg .tipContent .qrCode&#123;width: 100%; height: 700rpx;margin-bottom: 20rpx;border-radius: 20rpx;overflow: hidden;&#125;</span><br><span class="line">.couponImg .tipContent .iconClose&#123;width: 100%;position: relative;height: 80rpx;&#125;</span><br><span class="line">.couponImg .tipContent .iconClose image&#123;width: 64rpx;height: 64rpx;position: absolute;right: -50rpx;&#125;</span><br><span class="line">.saveBtn button&#123;width: 80%;margin: 0 auto;border-radius: 50rpx;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        qrCodeImg: &quot;https://www.btluo.com/images/myXCX01.jpg&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    hasAuthSetting:function() &#123;</span><br><span class="line">        let that = this;</span><br><span class="line">        wx.getSetting(&#123;</span><br><span class="line">            success(res) &#123;</span><br><span class="line">                if (res.authSetting[&quot;scope.writePhotosAlbum&quot;]) &#123;</span><br><span class="line">                    that.saveImg();</span><br><span class="line">                &#125; else if (res.authSetting[&quot;scope.writePhotosAlbum&quot;] === undefined) &#123;</span><br><span class="line">                    wx.authorize(&#123;</span><br><span class="line">                        scope: &quot;scope.writePhotosAlbum&quot;,</span><br><span class="line">                        success() &#123;</span><br><span class="line">                            that.saveImg();</span><br><span class="line">                        &#125;,</span><br><span class="line">                        fail() &#123;</span><br><span class="line">                            wx.showToast(&#123;</span><br><span class="line">                                title: &quot;您没有授权，无法保存到相册&quot;,</span><br><span class="line">                                icon: &quot;none&quot;</span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    wx.openSetting(&#123;</span><br><span class="line">                        success(res) &#123;</span><br><span class="line">                            if (res.authSetting[&quot;scope.writePhotosAlbum&quot;]) &#123;</span><br><span class="line">                                that.saveImg();</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                wx.showToast(&#123;</span><br><span class="line">                                    title: &quot;您没有授权，无法保存到相册&quot;,</span><br><span class="line">                                    icon: &quot;none&quot;</span><br><span class="line">                                &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    saveImg: function () &#123;</span><br><span class="line">        let qrCodeImg = this.data.qrCodeImg;</span><br><span class="line">        wx.downloadFile(&#123;</span><br><span class="line">            url: qrCodeImg,</span><br><span class="line">            success: function (res) &#123;</span><br><span class="line">                var benUrl = res.tempFilePath;</span><br><span class="line">                //图片保存到本地相册</span><br><span class="line">                wx.saveImageToPhotosAlbum(&#123;</span><br><span class="line">                    filePath: benUrl,</span><br><span class="line">                    //授权成功，保存图片</span><br><span class="line">                    success: function (data) &#123;</span><br><span class="line">                        wx.showToast(&#123;</span><br><span class="line">                            title: &quot;保存成功&quot;,</span><br><span class="line">                            icon: &quot;success&quot;,</span><br><span class="line">                            duration: 2000</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>项目案例下载地址：<a href="https://gitee.com/caseAddress/wxminiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/wxminiDemo.git</a> –其他小程序插件共用地址，持续更新中</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-koa-body实现文件上传</title>
    <url>/2019/11/19/%E5%89%8D%E7%AB%AF/2019/111901/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于之前写文章上传图片功能没做，都是从简书写完再复制过来，这样导致外链过多，而且太麻烦，所以完善了一下文件上传功能。</p>
<h2 id="一-方法"><a href="#一-方法" class="headerlink" title="一.方法"></a>一.方法</h2><p>由于我的博客是用nodejs-koa2做的，所以要实现图片上传功能有三种方法：</p>
<p>1：koa-body</p>
<p>2：busboy</p>
<p>3：koa-multer</p>
<p>因为我项目用的是koa-body，所以本文主要讲述的是使用koa-body进行文件上传；</p>
<h2 id="二-实现步骤"><a href="#二-实现步骤" class="headerlink" title="二.实现步骤"></a>二.实现步骤</h2><h3 id="1-安装koa-body依赖"><a href="#1-安装koa-body依赖" class="headerlink" title="1.安装koa-body依赖"></a>1.安装koa-body依赖</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install koa-body --save    或   cnpm install koa-body --save</span><br></pre></td></tr></table></figure>

<h3 id="2-在项目中引入koa-body"><a href="#2-在项目中引入koa-body" class="headerlink" title="2.在项目中引入koa-body"></a>2.在项目中引入koa-body</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 判断是单文件还是多文件上传</span><br><span class="line">if(ctx.request.files.file.length &gt; 1)&#123;</span><br><span class="line">    // 多个文件上传</span><br><span class="line">    const files = ctx.request.files.file; // 获取上传文件</span><br><span class="line">    let dataList = []; //存储返回文件名</span><br><span class="line">    for(let i=0;i        // 创建可读流</span><br><span class="line">        const reader = fs.createReadStream(files[i].path);</span><br><span class="line">        // 修改文件的名称</span><br><span class="line">        var myDate = new Date();</span><br><span class="line">        var newFilename = myDate.getTime()+&quot;.&quot;+files[i].name.split(&quot;.&quot;)[1];</span><br><span class="line">        var uploadPath = path.join(&quot;/home/img/upload&quot;) + `/$&#123;newFilename&#125;`;</span><br><span class="line">        // 创建可写流</span><br><span class="line">        const upStream = fs.createWriteStream(uploadPath);</span><br><span class="line">        // 可读流通过管道写入可写流</span><br><span class="line">        reader.pipe(upStream);</span><br><span class="line"></span><br><span class="line">        // 存入文件名</span><br><span class="line">        dataList.push(&quot;https://www.btluo.com/img/upload/&quot; + newFilename);</span><br><span class="line">    &#125;</span><br><span class="line">    // 返回保存文件路径</span><br><span class="line">    return ctx.body = &#123; code: 0, data: dataList &#125;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    // 单个文件上传</span><br><span class="line">    const file = ctx.request.files.file;</span><br><span class="line">    // 创建可读流</span><br><span class="line">    const reader = fs.createReadStream(file.path);</span><br><span class="line">    // 修改文件的名称</span><br><span class="line">    var myDate = new Date();</span><br><span class="line">    var newFilename = myDate.getTime()+&quot;.&quot;+file.name.split(&quot;.&quot;)[1];</span><br><span class="line">    console.log(newFilename);</span><br><span class="line">    var uploadPath = path.join(&quot;/home/img/upload&quot;) + `/$&#123;newFilename&#125;`;</span><br><span class="line">    //创建可写流</span><br><span class="line">    const upStream = fs.createWriteStream(uploadPath);</span><br><span class="line">    // 可读流通过管道写入可写流</span><br><span class="line">    reader.pipe(upStream);</span><br><span class="line">    //返回保存的路径</span><br><span class="line">    return ctx.body = &#123; code: 0, data: [&quot;https://www.btluo.com/img/upload/&quot; + newFilename] &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：新版本的koa-body是通过ctx.request.files获取上传的文件，旧版本的koa-body是通过ctx.request.body.files获取上传的文件 ；</p>
<p>附上前端ajax请求代码截图：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ec2c43af73684b58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span><br><span class="line">    $(&quot;.submitBtn&quot;).on(&quot;click&quot;,() =&gt; &#123;</span><br><span class="line">        var params = new FormData();</span><br><span class="line">        params.append(&quot;name&quot;,$(&quot;.filename&quot;).val())</span><br><span class="line">        params.append(&quot;file&quot;,$(&quot;.imgPath&quot;)[0].files[0])</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            data: params,</span><br><span class="line">            url: &quot;http://www.btluo.com/api/uploadFile&quot;,</span><br><span class="line">            type: &quot;post&quot;,</span><br><span class="line">            processData: false,</span><br><span class="line">            contentType: false,</span><br><span class="line">            success: function(res) &#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-计算用户离商家的距离</title>
    <url>/2019/12/02/%E5%89%8D%E7%AB%AF/2019/120201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>前段时间公司在做一个小程序平台的时候，需要用到计算商家与用户之间的距离的功能，然后网上查了下，具体有两种方法，本文主要介绍这两种用法以及其利弊。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>微信小程序怎么计算用户离商家的距离;</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1.使用小程序的wx.getLocation 方法获取用户的经纬度,然后用已知的商家的经纬进行计算;   </p>
<p>2.利用腾讯地图位置服务calculateDistance直接计算；</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>1.使用小程序提供的获取用户位置信息的api，获取用户信息；</p>
<p>2.获取后台返回的商家经纬度；以深圳北地铁站（22.610564,114.030313）为例；</p>
<p>3.利用公式进行两点的经纬度计算；</p>
<p>代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 方法调用</span><br><span class="line">getDistance:function()&#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    wx.getLocation(&#123;</span><br><span class="line">        type: &quot;wgs84&quot;,</span><br><span class="line">        success(res) &#123;</span><br><span class="line">            that.getDistance(res.latitude, res.longitude,22.610564,114.030313);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">// 距离计算</span><br><span class="line">distance: function (la1, lo1, la2, lo2) &#123;</span><br><span class="line">    var La1 = la1 * Math.PI / 180.0;</span><br><span class="line">    var La2 = la2 * Math.PI / 180.0;</span><br><span class="line">    var La3 = La1 - La2;</span><br><span class="line">    var Lb3 = lo1 * Math.PI / 180.0 - lo2 * Math.PI / 180.0;</span><br><span class="line">    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(La3 / 2), 2) + Math.cos(La1) * Math.cos(La2) * Math.pow(Math.sin(Lb3 / 2), 2)));</span><br><span class="line">    s = s * 6378.137;</span><br><span class="line">    s = Math.round(s * 10000) / 10000;</span><br><span class="line">    s = s.toFixed(2);</span><br><span class="line">    console.log(&quot;用户距离商家的距离为：&quot; + s);</span><br><span class="line">    return s;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<pre><code>用户距离商家的距离为：16.42</code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>利用腾讯地图位置服务calculateDistance直接计算；</p>
<p>1.前往<a href="https://lbs.qq.com/qqmap_wx_jssdk/index.html" target="_blank" rel="noopener">腾讯位置服务</a>注册登录，并根据步骤申请key：</p>
<p>申请开发者密钥（key）：<a href="https://lbs.qq.com/console/key.html" target="_blank" rel="noopener">申请密钥</a></p>
<p>开通webserviceAPI服务：控制台 -&gt; key管理 -&gt; 设置（使用该功能的key）-&gt; 勾选webserviceAPI -&gt; 保存</p>
<p>(小程序SDK需要用到webserviceAPI的部分服务，所以使用该功能的KEY需要具备相应的权限)</p>
<p>下载微信小程序JavaScriptSDK，<a href="http://3gimg.qq.com/lightmap/xcx/jssdk/qqmap-wx-jssdk1.2.zip" target="_blank" rel="noopener">微信小程序JavaScriptSDK v1.2</a></p>
<p>代码：</p>
<p>腾讯api文档：<a href="https://lbs.qq.com/qqmap_wx_jssdk/method-calculatedistance.html" target="_blank" rel="noopener">https://lbs.qq.com/qqmap_wx_jssdk/method-calculatedistance.html</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 引入SDK核心类</span><br><span class="line">var QQMapWX = require(&quot;xxx/qqmap-wx.js&quot;);</span><br><span class="line"> </span><br><span class="line">// 实例化API核心类</span><br><span class="line">var qqmapsdk = new QQMapWX(&#123;</span><br><span class="line">    key: &quot;开发密钥（key）&quot; // 必填</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">//在Page(&#123;&#125;)中使用下列代码</span><br><span class="line">//事件触发，调用接口</span><br><span class="line">formSubmit(e)&#123;</span><br><span class="line">    var _this = this;</span><br><span class="line">    //调用距离计算接口</span><br><span class="line">    qqmapsdk.calculateDistance(&#123;</span><br><span class="line">        //mode: &quot;driving&quot;,//可选值：&quot;driving&quot;（驾车）、&quot;walking&quot;（步行），不填默认：&quot;walking&quot;,可不填</span><br><span class="line">        //from参数不填默认当前地址</span><br><span class="line">        //获取表单提交的经纬度并设置from和to参数（示例为string格式）</span><br><span class="line">        from: e.detail.value.start || &quot;&quot;, //若起点有数据则采用起点坐标，若为空默认当前地址</span><br><span class="line">        to: e.detail.value.dest, //终点坐标</span><br><span class="line">        success: function(res) &#123;//成功后的回调</span><br><span class="line">          console.log(res);</span><br><span class="line">          var res = res.result;</span><br><span class="line">          var dis = [];</span><br><span class="line">          for (var i = 0; i &lt; res.elements.length; i++) &#123;</span><br><span class="line">            dis.push(res.elements[i].distance); //将返回数据存入dis数组，</span><br><span class="line">          &#125;</span><br><span class="line">          _this.setData(&#123; //设置并更新distance数据</span><br><span class="line">            distance: dis</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: function(error) &#123;</span><br><span class="line">          console.error(error);</span><br><span class="line">        &#125;,</span><br><span class="line">        complete: function(res) &#123;</span><br><span class="line">          console.log(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="优缺点比较"><a href="#优缺点比较" class="headerlink" title="优缺点比较"></a>优缺点比较</h2><p>方法一：</p>
<p>优点：无需配置，只需两点之间经纬度，无使用次数限制；</p>
<p>缺点：准确度有误差，直接计算的两点之间的距离，比腾讯地图查的距离明显要小；</p>
<p>方法二：</p>
<p>优点：距离精准，与腾讯地图误差较小；</p>
<p>缺点：前期需要配置，且有使用限制，每天只能使用1万次，当然有钱的同学可以去购买配额-<a href="https://lbs.qq.com/dev/console/quota/manage；" target="_blank" rel="noopener">https://lbs.qq.com/dev/console/quota/manage；</a></p>
<p>当然也可以写个判断，限额到了，就使用方法一；</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-使用jsonwebtoken对管理后台进行token校验</title>
    <url>/2019/12/04/%E5%89%8D%E7%AB%AF/2019/120401/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>对登录管理后台时，进行登录失效校验思路：在管理员登录请求nodejs时，nodejs根据jwt生成token，前端接收token，存放在本地，之后每次请求将token放在header带给nodejs，后端验证token是否失效。</p>
<h2 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1.引入依赖"></a>1.引入依赖</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const fs = require(&quot;fs&quot;);</span><br><span class="line">const path = require(&quot;path&quot;);</span><br><span class="line">const jwt = require(&quot;jsonwebtoken&quot;);</span><br></pre></td></tr></table></figure>

<h2 id="2-生成token"><a href="#2-生成token" class="headerlink" title="2.生成token"></a>2.生成token</h2><p>根据前端登录请求返回data，生成token：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">constructor(data) &#123;</span><br><span class="line">    this.data = data;</span><br><span class="line">&#125;</span><br><span class="line">generateToken() &#123;</span><br><span class="line">    let data = this.data;</span><br><span class="line">    let created = Math.floor(Date.now() / 1000);</span><br><span class="line">    let cert = fs.readFileSync(path.join(__dirname, &quot;../pem/rsa_private_key.pem&quot;));//私钥 可以自己生成</span><br><span class="line">    let token = jwt.sign(&#123;</span><br><span class="line">        data,</span><br><span class="line">        exp: created + 60 * 60 * 6, //过期时间6个小时</span><br><span class="line">    &#125;, cert, &#123;algorithm: &quot;RS256&quot;&#125;);</span><br><span class="line">    return token;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-返回token到前端"><a href="#3-返回token到前端" class="headerlink" title="3.返回token到前端"></a>3.返回token到前端</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let jwt = new JwtUtil(result[0].userName);</span><br><span class="line">let token = jwt.generateToken();</span><br><span class="line">ctx.body = &#123; code: 0,data:result[0],access_token: token,&quot;msg&quot;: &quot;登入成功&quot;&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="4-前端接收token数据，并存入本地"><a href="#4-前端接收token数据，并存入本地" class="headerlink" title="4.前端接收token数据，并存入本地"></a>4.前端接收token数据，并存入本地</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-626dde4a493f7f37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="5-请求时携带token"><a href="#5-请求时携带token" class="headerlink" title="5.请求时携带token"></a>5.请求时携带token</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-675341528c25c392.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="6-nodejs校验前端返回token"><a href="#6-nodejs校验前端返回token" class="headerlink" title="6.nodejs校验前端返回token"></a>6.nodejs校验前端返回token</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 校验token</span><br><span class="line">verifyToken() &#123;</span><br><span class="line">    let token = this.data;</span><br><span class="line">    let cert = fs.readFileSync(path.join(__dirname, &quot;../pem/rsa_public_key.pem&quot;));//公钥 可以自己生成</span><br><span class="line">    let res;</span><br><span class="line">    try &#123;</span><br><span class="line">        let result = jwt.verify(token, cert, &#123;algorithms: [&quot;RS256&quot;]&#125;) || &#123;&#125;;</span><br><span class="line">        let &#123;exp = 0&#125; = result, current = Math.floor(Date.now() / 1000);</span><br><span class="line">        if (current &lt;= exp) &#123;</span><br><span class="line">            res = result.data || &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">        res = &quot;err&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据结果返回不同状态:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let token = ctx.request.header.myblogtoken;</span><br><span class="line">let jwt = new JwtUtil(token);</span><br><span class="line">let jwtResult = jwt.verifyToken();</span><br><span class="line">if (jwtResult == &quot;err&quot;) &#123;</span><br><span class="line">  ctx.body = &#123; code: 1001, msg: &quot;登录已过期,请重新登录&quot; &#125;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  //处理数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-完整代码"><a href="#7-完整代码" class="headerlink" title="7.完整代码"></a>7.完整代码</h2><p>①.nodejs新建一个jwt.js的文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 引入模块依赖</span><br><span class="line">const fs = require(&quot;fs&quot;);</span><br><span class="line">const path = require(&quot;path&quot;);</span><br><span class="line">const jwt = require(&quot;jsonwebtoken&quot;);</span><br><span class="line">// 创建 token 类</span><br><span class="line">class Jwt &#123;</span><br><span class="line">    constructor(data) &#123;</span><br><span class="line">        this.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //生成token</span><br><span class="line">    generateToken() &#123;</span><br><span class="line">        let data = this.data;</span><br><span class="line">        let created = Math.floor(Date.now() / 1000);</span><br><span class="line">        //私钥 可以自己生成</span><br><span class="line">        let cert = fs.readFileSync(path.join(__dirname, &quot;../pem/rsa_private_key.pem&quot;));</span><br><span class="line">        let token = jwt.sign(&#123;</span><br><span class="line">            data,</span><br><span class="line">            exp: created + 60 * 60 * 6, //过期时间6个小时</span><br><span class="line">        &#125;, cert, &#123;algorithm: &quot;RS256&quot;&#125;);</span><br><span class="line">        return token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 校验token</span><br><span class="line">    verifyToken() &#123;</span><br><span class="line">        let token = this.data;</span><br><span class="line">        //公钥 可以自己生成</span><br><span class="line">        let cert = fs.readFileSync(path.join(__dirname, &quot;../pem/rsa_public_key.pem&quot;));</span><br><span class="line">        let res;</span><br><span class="line">        try &#123;</span><br><span class="line">            let result = jwt.verify(token, cert, &#123;algorithms: [&quot;RS256&quot;]&#125;) || &#123;&#125;;</span><br><span class="line">            let &#123;exp = 0&#125; = result, current = Math.floor(Date.now() / 1000);</span><br><span class="line">            if (current &lt;= exp) &#123;</span><br><span class="line">                res = result.data || &#123;&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            res = &quot;err&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">module.exports = Jwt;</span><br></pre></td></tr></table></figure>

<p>②.引入jwt.js,并根据登录请求返回token：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const JwtUtil  = require(&quot;../common/jwt&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;GET /api/signIn&quot;: async (ctx, next) =&gt; &#123;</span><br><span class="line">    const db = require(&quot;../db&quot;);</span><br><span class="line">    const model = require(&quot;./../model&quot;);</span><br><span class="line">    let parameter = &#123;&#125;;</span><br><span class="line">    ctx.request.querystring.replace(/([^=&amp;]+)=([^&amp;]*)/g, function(m,key,value) &#123;</span><br><span class="line">      parameter[decodeURIComponent(key)] = decodeURIComponent(value);</span><br><span class="line">    &#125;);</span><br><span class="line">    let result = await db.sequelize.query(&quot;SELECT * FROM mb_system_user WHERE user_name=&quot;111&quot; AND password=&quot;111&quot;&quot; , &#123;</span><br><span class="line">        type: db.sequelize.QueryTypes.SELECT</span><br><span class="line">      &#125;</span><br><span class="line">    ).then(function(results) &#123;</span><br><span class="line">      return results;</span><br><span class="line">    &#125;);</span><br><span class="line">    if(result.length &gt;= 1)&#123;</span><br><span class="line">      let jwt = new JwtUtil(result[0].userName);</span><br><span class="line">      let token = jwt.generateToken();</span><br><span class="line">      ctx.body = &#123; code: 0,data:result[0],access_token: token,&quot;msg&quot;: &quot;登入成功&quot;&#125;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      ctx.body = &#123; code: 500, msg: &quot;用户名或密码输入错误，请重新输入&quot; &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>③.请求时调用校验token是否有效接口：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;GET /api/jiaoyan&quot;: async (ctx, next) =&gt; &#123;</span><br><span class="line">    let token = ctx.request.header.myblogtoken;</span><br><span class="line">    let jwt = new JwtUtil(token);</span><br><span class="line">    let jwtResult = jwt.verifyToken();</span><br><span class="line">    if (jwtResult == &quot;err&quot;) &#123;</span><br><span class="line">      ctx.body = &#123; code: 1001, msg: &quot;登录已过期,请重新登录&quot; &#125;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      ctx.body = &#123; code: 0&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="8-其他"><a href="#8-其他" class="headerlink" title="8.其他"></a>8.其他</h2><p>代码中运用到的公钥和私钥，可以查看这篇文章：</p>
<p><a href="https://www.cnblogs.com/zhangjianqiang/p/10308029.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhangjianqiang/p/10308029.html</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>vue整合wangeditor3富文本编辑器</title>
    <url>/2019/12/26/%E5%89%8D%E7%AB%AF/2019/122601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在使用vue做管理后台时，编辑文章页面需要使用到富文本编辑器，因此本文主要介绍如何在vue中添加wangeditor3编辑器</p>
<h2 id="一-背景"><a href="#一-背景" class="headerlink" title="一.背景"></a>一.背景</h2><p>由于在开发管理后台的时候编辑文章，轮播等可能会多个页面需要用到富文本编辑器，因此，我需要将wangeditor作为组件的形式整合到vue中使用；</p>
<h2 id="二-实现步骤"><a href="#二-实现步骤" class="headerlink" title="二.实现步骤"></a>二.实现步骤</h2><h3 id="1-安装wangEditor"><a href="#1-安装wangEditor" class="headerlink" title="1.安装wangEditor"></a>1.安装wangEditor</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install wangeditor --save</span><br></pre></td></tr></table></figure>

<h3 id="2-封装组件"><a href="#2-封装组件" class="headerlink" title="2.封装组件"></a>2.封装组件</h3><p>将wangEditor封装成组件wangeditor.vue（子组件）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;wangeditor&quot;&gt;</span><br><span class="line">    &lt;div ref=&quot;editorElem&quot; style=&quot;text-align:left&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import E from &quot;wangeditor&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;editorElem&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      editor: null,</span><br><span class="line">      editorContent: &quot;&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: [&quot;catchData&quot;, &quot;content&quot;], // 接收父组件的方法</span><br><span class="line">  watch: &#123;</span><br><span class="line">    content() &#123;</span><br><span class="line">      this.editor.txt.html(this.content);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.editor = new E(this.$refs.editorElem);</span><br><span class="line">    this.editor.customConfig.onchange = html =&gt; &#123;</span><br><span class="line">      this.editorContent = html;</span><br><span class="line">      this.catchData(this.editorContent); // 把这个html通过catchData的方法传入父组件</span><br><span class="line">    &#125;;</span><br><span class="line">    this.editor.customConfig.uploadImgServer = &quot;你的上传图片的接口&quot;;</span><br><span class="line">    this.editor.customConfig.uploadFileName = &quot;你自定义的文件名&quot;;</span><br><span class="line">    this.editor.customConfig.menus = [&quot;undo&quot;,&quot;redo&quot;,&quot;bold&quot;,&quot;italic&quot;,&quot;underline&quot;,&quot;strikeThrough&quot;,&quot;link&quot;,&quot;quote&quot;,&quot;image&quot;,&quot;emoticon&quot;,&quot;table&quot;,&quot;video&quot;,&quot;head&quot;,&quot;fontSize&quot;,&quot;fontName&quot;,&quot;foreColor&quot;,&quot;backColor&quot;,&quot;list&quot;,&quot;justify&quot;,&quot;code&quot;];</span><br><span class="line">    // 下面是最重要的的方法</span><br><span class="line">    this.editor.customConfig.uploadImgHooks = &#123;</span><br><span class="line">      before: function(xhr, editor, files) &#123;</span><br><span class="line">        // 图片上传之前触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件</span><br><span class="line">        // 如果返回的结果是 &#123;prevent: true, msg: &apos;xxxx&apos;&#125; 则表示用户放弃上传</span><br><span class="line">        // return &#123;</span><br><span class="line">        //     prevent: true,</span><br><span class="line">        //     msg: &apos;放弃上传&apos;</span><br><span class="line">        // &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function(xhr, editor, result) &#123;</span><br><span class="line">        // 图片上传并返回结果，图片插入成功之后触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line">        this.imgUrl = Object.values(result.data).toString();</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: function(xhr, editor, result) &#123;</span><br><span class="line">        // 图片上传并返回结果，但图片插入错误时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line">      &#125;,</span><br><span class="line">      error: function(xhr, editor) &#123;</span><br><span class="line">        // 图片上传出错时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象</span><br><span class="line">      &#125;,</span><br><span class="line">      timeout: function(xhr, editor) &#123;</span><br><span class="line">        // 图片上传超时时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      // 如果服务器端返回的不是 &#123;errno:0, data: [...]&#125; 这种格式，可使用该配置</span><br><span class="line">      // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）</span><br><span class="line">      customInsert: function(insertImg, result, editor) &#123;</span><br><span class="line">        // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）</span><br><span class="line">        // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line"></span><br><span class="line">        // 举例：假如上传图片成功后，服务器端返回的是 &#123;url:&apos;....&apos;&#125; 这种格式，即可这样插入图片：</span><br><span class="line">        let url = Object.values(result.data); // result.data就是服务器返回的图片名字和链接</span><br><span class="line">        JSON.stringify(url); // 在这里转成JSON格式</span><br><span class="line">        insertImg(url);</span><br><span class="line">        // result 必须是一个 JSON 格式字符串！！！否则报错</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    this.editor.create(); // 创建富文本实例</span><br><span class="line">    if (!this.content) &#123;</span><br><span class="line">      this.editor.txt.html(&quot;请输入编辑内容&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      this.editor.txt.html(this.content);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; rel=&quot;stylesheet/scss&quot;&gt;</span><br><span class="line">  #wangeditor &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">  #wangeditor .w-e-toolbar &#123;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-在父组件中调用子组件"><a href="#3-在父组件中调用子组件" class="headerlink" title="3.在父组件中调用子组件"></a>3.在父组件中调用子组件</h3><p>①.引入子组件(注意改成自己的子组件存放路径)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import wangeditor from &quot;../../components/wangeditor&quot;;</span><br></pre></td></tr></table></figure>

<p>②.在components 中注册子组件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">components: &#123;</span><br><span class="line">    wangeditor: wangeditor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>③.监听富文本编辑器输入内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">catchData(value) &#123;</span><br><span class="line">    this.content = value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步骤①，②，③完整代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import wangeditor from &quot;../../components/wangeditor&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 监听富文本编辑器</span><br><span class="line">    catchData(value) &#123;</span><br><span class="line">      this.content = value;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    wangeditor: wangeditor</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>④.在模板中渲染：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;wangeditor :catchData=&quot;catchData&quot; :content=&quot;editForm.content&quot;&gt;&lt;/wangeditor&gt;</span><br></pre></td></tr></table></figure>

<p>在子组件中用props 项传了两个值，一个catchData函数，在methods中定义步骤③，用于在父组件中获取富文本中的内容，还有一个content作为初始化的数据（用于初始化从后台获取到的文章内容）；</p>
<p>editForm.content的内容根据实际代码替换成后台返回的数据；</p>
<h2 id="三-其他"><a href="#三-其他" class="headerlink" title="三.其他"></a>三.其他</h2><p>wangeditor官网：<a href="http://www.wangeditor.com" target="_blank" rel="noopener">http://www.wangeditor.com</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>在vue中添加浏览器导航标题favicon图标</title>
    <url>/2020/01/06/%E5%89%8D%E7%AB%AF/2020/010601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>vue在打包时添加favicon标题图标文件方法</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>修改webpack中的配置文件：</p>
<p>1.将favicon.ico图片放在根目录下；</p>
<p>2.找到build下的webpack.dev.conf.js文件找到以下内容，新增favicon: path.resolve(‘favicon.ico’)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">      filename: &apos;index.html&apos;,</span><br><span class="line">      template: &apos;index.html&apos;,</span><br><span class="line">      inject: true,</span><br><span class="line">      favicon: path.resolve(&apos;favicon.ico&apos;)//新增内容</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure>

<p>3.找到build下的webpack.prod.conf.js文件，找到以下内容，并新增 favicon: path.resolve(‘favicon.ico’)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">      filename: config.build.index,</span><br><span class="line">      template: &apos;index.html&apos;,</span><br><span class="line">      inject: true,</span><br><span class="line">      favicon: path.resolve(&apos;favicon.ico&apos;), //新增内容</span><br><span class="line">      minify: &#123;</span><br><span class="line">        removeComments: true,</span><br><span class="line">        collapseWhitespace: true,</span><br><span class="line">        removeAttributeQuotes: true</span><br><span class="line">      &#125;,</span><br><span class="line">      chunksSortMode: &apos;dependency&apos;</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure>

<p>4.在首页index.html中引入favicon.ico：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;favicon.ico&quot;/&gt;</span><br></pre></td></tr></table></figure>

<p>5.重新打包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<p>就能在打包文件dist中看到favicon.ico文件了；</p>
<p>当然也可以直接将favicon.ico文件放在dist的根目录中，直接在index.html中引入就行，但是这样每次打包都得复制favicon.ico到根目录，不推荐这种方法。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在mysql中存emoji表情？</title>
    <url>/2020/03/27/%E5%89%8D%E7%AB%AF/2020/032702/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>最近完善了一下小程序的评论功能，但是弄完后发现评论时加表情，居然报错了。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在完善完我的博客小程序评论功能之后，测试了一番，在评论时添加emoji表情发现他居然报错了，伤心。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为在mysql5.5.3版本以前，utf8编码最大能存储3个字节，而表情是4个字节,所以在评论时将表情存到utf8编码的字段里时就报错了！</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>将mysql升级到5.5.3+版本，将utf-8编码，改成utf8mb4编码，这样添加表情时就不会报错啦！</p>
<h2 id="一-修改数据库配置文件（my-cnf）"><a href="#一-修改数据库配置文件（my-cnf）" class="headerlink" title="一.修改数据库配置文件（my.cnf）"></a>一.修改数据库配置文件（my.cnf）</h2><h3 id="1-打开linux，打开文件my-cnf-输入以下命令"><a href="#1-打开linux，打开文件my-cnf-输入以下命令" class="headerlink" title="1.打开linux，打开文件my.cnf,输入以下命令"></a>1.打开linux，打开文件my.cnf,输入以下命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<h3 id="2-插入以下代码"><a href="#2-插入以下代码" class="headerlink" title="2.插入以下代码"></a>2.插入以下代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[client]  </span><br><span class="line">default-character-set=utf8mb4  </span><br><span class="line">  </span><br><span class="line">[mysql]  </span><br><span class="line">default-character-set=utf8mb4  </span><br><span class="line">  </span><br><span class="line">[mysqld]  </span><br><span class="line">character-set-client-handshake = FALSE  </span><br><span class="line">collation-server = utf8mb4_unicode_ci  </span><br><span class="line">init-connect=&apos;SET NAMES utf8mb4&apos;  </span><br><span class="line">character-set-server = utf8mb4</span><br></pre></td></tr></table></figure>

<p>注：或者借用xftp找到路径：/etc/my.cnf下编辑也行，输入方法2中的代码：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d2ddd507fe0ee756.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1297f6dd5144e09f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="3-重启mysql服务"><a href="#3-重启mysql服务" class="headerlink" title="3.重启mysql服务"></a>3.重启mysql服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>

<h3 id="4-进入mysql"><a href="#4-进入mysql" class="headerlink" title="4.进入mysql"></a>4.进入mysql</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<h3 id="5-查看mysql字符集"><a href="#5-查看mysql字符集" class="headerlink" title="5.查看mysql字符集"></a>5.查看mysql字符集</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES WHERE Variable_name LIKE &apos;character\_set\_%&apos; OR Variable_name LIKE &apos;collation%&apos;;</span><br></pre></td></tr></table></figure>

<p>然后就可以了：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-573955c903000b8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>如果插入表情还是不行，那可能是原有数据库，表，字段已经设计好，而且已经存入过数据，然后存入emoji表情，编码还是原来的utf-8，则可以试下步骤二；</p>
<h2 id="二-修改数据库、表、字段"><a href="#二-修改数据库、表、字段" class="headerlink" title="二.修改数据库、表、字段"></a>二.修改数据库、表、字段</h2><h3 id="1-查看字符集"><a href="#1-查看字符集" class="headerlink" title="1.查看字符集"></a>1.查看字符集</h3><p>首先先查看下存储表情的字段是什么字符集：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW FULL COLUMNS FROM wxmini_user_info</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f5b3c13d65cb16f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-修改字符集"><a href="#2-修改字符集" class="headerlink" title="2.修改字符集"></a>2.修改字符集</h3><p>如果还是utf-8，则说明，步骤一没改变表的字符集，因此我们需要根据需求将存储表情的数据库或表或字段改为utf8mb4编码：</p>
<p>修改数据库字符集：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE 数据库名 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<p>修改表的字符集：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<p>修改某个字段的字符集：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE 字段名 字段名 该字段原来的数据类型 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-dcca655012a92769.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>注：如果修改的表或字段中存在数据时，应谨慎修改其字符集，操作不当，可能会导致数据丢失；</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>按上面两个步骤修改完，就可以保存emoji表情了，在linux修改my.cnf文件的时，记得备份以防出错不好回滚；还有确定数据库的版本，否则取出的值可能会显示问号。如果存入就是问号，那说明配置没有成功，请重启mysql，或者关闭再启动，再试试；</p>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>回复插入表情成功，啦啦啦（上面的问号是没改之前的数据）：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-02db2e1a22acbeaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>1.为啥服务设置字符集，还要设置表，设置字段：</p>
<pre><code>MySQL中默认字符集的设置有四级:服务器级，数据库级，表级 ，还有字段级的字符集设置。前三种均为默认设置，并不代码你的字段最终会使用这个字符集设置。因此在使用mysql时，字符集都是已经设定好的，系统会确定默认所使用的字符集和校对规则，也就是说如果没有对更低级别的字符集和校对规则进行设置时，字符集会默认继承更高级别所设定的默认字符集和校对规则，可能会影响我们储存数据，所以我们建议要用show create table table ; 或show full fields from tableName; 先来检查当前表中字段的字符集设置。</code></pre><p>2.utf8与utf8mb4哪个好：</p>
<pre><code>utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。  

utf8mb4编码中mb4就是most bytes 4的意思，专门用来兼容四字节的unicode。他们之间的区别就是mysql支持的 utf8 编码最大字符长度为 3 字节，如果遇到 4 字节的宽字符就会插入异常了。三个字节的utf8最大能编码的Unicode字符是 0xffff，也就是说，任何不在基本多文本平面的 Unicode字符，都无法使用 Mysql 的 utf8 字符集存储，包括 emoji 表情等；所以，设计数据库时如果想要允许用户使用特殊符号，最好使用utf8mb4编码来存储，使得数据库有更好的兼容性，但是这样设计会导致耗费更多的存储空间。</code></pre><p>参考文档:</p>
<p><a href="https://www.cnblogs.com/ipengrui1/p/12283407.html" target="_blank" rel="noopener">utf8和utf8mb4的具体区别有哪些？</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-使用wxParse解析html</title>
    <url>/2020/04/02/%E5%89%8D%E7%AB%AF/2020/040201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在开发博客项目时遇到在微信小程序里需要显示文章内容，文章内容是通过管理后台中的wangEditor富文本编写，而小程序是不支持html格式的，那我们需要显示html内容的时侯，就需要通过wxParse来实现。</p>
<h2 id="一-下载wxParse"><a href="#一-下载wxParse" class="headerlink" title="一.下载wxParse"></a>一.下载wxParse</h2><p>GitHub下载地址：<a href="https://github.com/icindy/wxParse" target="_blank" rel="noopener">https://github.com/icindy/wxParse</a></p>
<h2 id="二-拷贝到项目中"><a href="#二-拷贝到项目中" class="headerlink" title="二.拷贝到项目中"></a>二.拷贝到项目中</h2><p>将下载完成的wxParse文件夹，拷贝到项目中；</p>
<p>注：注意路径，根据拷贝位置自行修改引入路径；</p>
<h2 id="三-使用步骤"><a href="#三-使用步骤" class="headerlink" title="三.使用步骤"></a>三.使用步骤</h2><h3 id="1-引入wxParse的样式"><a href="#1-引入wxParse的样式" class="headerlink" title="1.引入wxParse的样式"></a>1.引入wxParse的样式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;/page/wxParse/wxParse.wxss&quot;;</span><br></pre></td></tr></table></figure>

<h3 id="2-引入wxParse"><a href="#2-引入wxParse" class="headerlink" title="2.引入wxParse"></a>2.引入wxParse</h3><p>在需要加载html内容的页面的js文件里引入wxParse：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var WxParse = require(&apos;../../wxParse/wxParse.js&apos;);</span><br></pre></td></tr></table></figure>

<h3 id="3-调用wxParse"><a href="#3-调用wxParse" class="headerlink" title="3.调用wxParse"></a>3.调用wxParse</h3><p>在js中调用WxParse.wxParse方法来设置html内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line">* WxParse.wxParse(bindName , type, data, target,imagePadding)</span><br><span class="line">* 1.bindName绑定的数据名(必填)</span><br><span class="line">* 2.type可以为html或者md(必填)</span><br><span class="line">* 3.data为传入的具体数据(必填)</span><br><span class="line">* 4.target为Page对象,一般为this(必填)</span><br><span class="line">* 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: function () &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">        url: &quot;&quot;, </span><br><span class="line">        method: &quot;POST&quot;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            &quot;id&quot;:13</span><br><span class="line">        &#125;,</span><br><span class="line">        header: &#123;</span><br><span class="line">            &quot;content-type&quot;: &quot;application/json&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        success: function(res) &#123;</span><br><span class="line">            var article = res.data[0].content;</span><br><span class="line">            WxParse.wxParse(&apos;article&apos;, &apos;html&apos;, article, that,5);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="4-在页面中引用模板"><a href="#4-在页面中引用模板" class="headerlink" title="4.在页面中引用模板"></a>4.在页面中引用模板</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;import src=&quot;../../wxParse/wxParse.wxml&quot;/&gt;</span><br><span class="line">&lt;template is=&quot;wxParse&quot; data=&quot;&#123;&#123;wxParseData:article.nodes&#125;&#125;&quot;/&gt;</span><br></pre></td></tr></table></figure>

<h2 id="四-效果展示"><a href="#四-效果展示" class="headerlink" title="四.效果展示"></a>四.效果展示</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-b1272b43796bfbf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery-网站图片放大缩小</title>
    <url>/2020/03/27/%E5%89%8D%E7%AB%AF/2020/033101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>完善了一下我的官网博客中图片不能点击放大的功能！</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>点击官网内文章图片显示大图，再次点击可关闭弹出的图片。</p>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-3f8d38b7bc3d4d1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>html：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;outerdiv&quot; style=&quot;position:fixed;top:0;left:0;background:rgba(0,0,0,0.7);z-index:2;width:100%;height:100%;display:none;&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;innerdiv&quot; style=&quot;position:absolute;&quot;&gt;</span><br><span class="line">		&lt;img id=&quot;bigimg&quot; style=&quot;border:5px solid #fff;&quot; src=&quot;&quot; /&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>js：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 点击图片放大,再点缩小</span><br><span class="line">$(function () &#123;</span><br><span class="line">	$(&quot;#articleDetail img&quot;).click(function () &#123;</span><br><span class="line">		var _this = $(this);//将当前的pimg元素作为_this传入函数  </span><br><span class="line">		imgShow(&quot;#outerdiv&quot;, &quot;#innerdiv&quot;, &quot;#bigimg&quot;, _this);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">function imgShow(outerdiv, innerdiv, bigimg, _this) &#123;</span><br><span class="line">	var src = _this.attr(&quot;src&quot;);//获取当前点击的pimg元素中的src属性  </span><br><span class="line">	$(bigimg).attr(&quot;src&quot;, src);//设置#bigimg元素的src属性  </span><br><span class="line"></span><br><span class="line">	/*获取当前点击图片的真实大小，并显示弹出层及大图*/</span><br><span class="line">	$(&quot;&lt;img/&gt;&quot;).attr(&quot;src&quot;, src).load(function () &#123;</span><br><span class="line">		var windowW = $(window).width();//获取当前窗口宽度  </span><br><span class="line">		var windowH = $(window).height();//获取当前窗口高度  </span><br><span class="line">		var realWidth = this.width;//获取图片真实宽度  </span><br><span class="line">		var realHeight = this.height;//获取图片真实高度  </span><br><span class="line">		var imgWidth, imgHeight;</span><br><span class="line">		var scale = 0.8;//缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放  </span><br><span class="line"></span><br><span class="line">		if (realHeight &gt; windowH * scale) &#123;//判断图片高度  </span><br><span class="line">			imgHeight = windowH * scale;//如大于窗口高度，图片高度进行缩放  </span><br><span class="line">			imgWidth = imgHeight / realHeight * realWidth;//等比例缩放宽度  </span><br><span class="line">			if (imgWidth &gt; windowW * scale) &#123;//如宽度扔大于窗口宽度  </span><br><span class="line">				imgWidth = windowW * scale;//再对宽度进行缩放  </span><br><span class="line">			&#125;</span><br><span class="line">		&#125; else if (realWidth &gt; windowW * scale) &#123;//如图片高度合适，判断图片宽度  </span><br><span class="line">			imgWidth = windowW * scale;//如大于窗口宽度，图片宽度进行缩放  </span><br><span class="line">			imgHeight = imgWidth / realWidth * realHeight;//等比例缩放高度  </span><br><span class="line">		&#125; else &#123;//如果图片真实高度和宽度都符合要求，高宽不变  </span><br><span class="line">			imgWidth = realWidth;</span><br><span class="line">			imgHeight = realHeight;</span><br><span class="line">		&#125;</span><br><span class="line">		$(bigimg).css(&quot;width&quot;, imgWidth);//以最终的宽度对图片缩放  </span><br><span class="line"></span><br><span class="line">		var w = (windowW - imgWidth) / 2;//计算图片与窗口左边距  </span><br><span class="line">		var h = (windowH - imgHeight) / 2;//计算图片与窗口上边距  </span><br><span class="line">		$(innerdiv).css(&#123; &quot;top&quot;: h, &quot;left&quot;: w &#125;);//设置#innerdiv的top和left属性  </span><br><span class="line">		$(outerdiv).fadeIn(&quot;fast&quot;);//淡入显示#outerdiv及.pimg  </span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	$(outerdiv).click(function () &#123;//再次点击淡出消失弹出层  </span><br><span class="line">		$(this).fadeOut(&quot;fast&quot;);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>转载：<a href="https://blog.csdn.net/yournevermore/article/details/88583040" target="_blank" rel="noopener">https://blog.csdn.net/yournevermore/article/details/88583040</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Html中如何引入图标？</title>
    <url>/2020/04/02/%E5%89%8D%E7%AB%AF/2020/040202/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>如题，在日常开发网站时，过多的图片往往会影响网页的加载，因此我们往往会需要用到小图标，因此本文主要讲解如何在网页中引入小图标；</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>HTML中如何引入图标（以font awesome为例）；</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="1-引入js"><a href="#1-引入js" class="headerlink" title="1.引入js"></a>1.引入js</h3><p>可直接引入或前往<a href="https://fontawesome.dashgame.com/" target="_blank" rel="noopener">font awesome</a>官网下载：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script defer src=&quot;https://use.fontawesome.com/releases/v5.0.8/js/all.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-选择图标"><a href="#2-选择图标" class="headerlink" title="2.选择图标"></a>2.选择图标</h3><p>打开官网，任意选择一款图标：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-953c34edd00c45a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="3-复制代码"><a href="#3-复制代码" class="headerlink" title="3.复制代码"></a>3.复制代码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ded3a45d749c0b1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>也可根据需要改变图标大小（也可使用font-size）：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-52c1c72e7f6cadb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>据需要还能修改图标颜色等样式；</p>
<h3 id="4-使用图标"><a href="#4-使用图标" class="headerlink" title="4.使用图标"></a>4.使用图标</h3><p>将图标代码复制到需要的div或者span等标签中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>然后就能正常使用了；</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用一段css让网站变灰？</title>
    <url>/2020/04/03/%E5%89%8D%E7%AB%AF/2020/040301/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为表达全国人民对抗击新冠肺炎疫情斗争牺牲烈士和逝世通报的深切哀悼，国务院发布公告明天十点进行全国哀悼日，想到以往默哀日访问网站时会发现大部分网站会变成全灰，因此试了一下如何用一段css让全站变灰</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何使用一段css代码使整个网站变灰；</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>使用css3新增的filter属性修改html样式：filter:grayscale来调整元素的灰度值；</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    filter: grayscale(100%);</span><br><span class="line">    -webkit-filter: grayscale(100%);</span><br><span class="line">    -moz-filter: grayscale(100%);</span><br><span class="line">    -ms-filter: grayscale(100%);</span><br><span class="line">    -o-filter: grayscale(100%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-60f17aaac2a04036.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>web前端页面优化方法</title>
    <url>/2018/10/07/%E5%89%8D%E7%AB%AF/2018/100701/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>在用户使用我们的网站时，网站的加载速度对是否能留住用户有着致命的影响，因此本文主要介绍部分优化页面的方法</li>
</ul>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-尽量减少-HTTP-请求"><a href="#1-尽量减少-HTTP-请求" class="headerlink" title="1. 尽量减少 HTTP 请求"></a>1. 尽量减少 HTTP 请求</h3><p>作为第一条，可能也是最重要的一条。根据数据分析表明，有很大一部分用户访问会因为这一条而获得更好的访问体验。常见的减少 HTTP 请求的方法：</p>
<pre><code>1) 合并文件，比如把多个 CSS 文件合成一个；Gulp,Grunt 构建工具: 合并CSS, 合并JS, CSS&amp;JS压缩；

2) CSS Sprites 雪碧图。利用 CSS background 相关元素进行背景图绝对定位；

3) 图片用base64 与 延迟加载；</code></pre><h3 id="2-减少-DNS-查找："><a href="#2-减少-DNS-查找：" class="headerlink" title="2 减少 DNS 查找："></a>2 减少 DNS 查找：</h3><pre><code>1）. 使用本地资源 ；

2）.使用加速器CDN；</code></pre><h3 id="3-避免重定向；"><a href="#3-避免重定向；" class="headerlink" title="3. 避免重定向；"></a>3. 避免重定向；</h3><p>不是绝对的避免，尽量减少。另外，应该注意一些不必要的重定向。</p>
<h3 id="4-Ajax可缓存："><a href="#4-Ajax可缓存：" class="headerlink" title="4 .Ajax可缓存："></a>4 .Ajax可缓存：</h3><p>尽量让Ajax可缓存，响应时间对 Ajax 来说至关重要，否则用户体验绝对好不到哪里去。</p>
<h3 id="5-延迟载入组件："><a href="#5-延迟载入组件：" class="headerlink" title="5. 延迟载入组件："></a>5. 延迟载入组件：</h3><p>lazyload.js；</p>
<h3 id="6-预载入组件："><a href="#6-预载入组件：" class="headerlink" title="6. 预载入组件："></a>6. 预载入组件：</h3><p>require.js；</p>
<h3 id="7-减少-DOM-元素数量；"><a href="#7-减少-DOM-元素数量；" class="headerlink" title="7. 减少 DOM 元素数量；"></a>7. 减少 DOM 元素数量；</h3><h3 id="8-最小化iframe的数量："><a href="#8-最小化iframe的数量：" class="headerlink" title="8. 最小化iframe的数量："></a>8. 最小化iframe的数量：</h3><p>iframe 是 网站SEO 的大忌。所以针对前端优化来说 iframe 有其好处，也有其弊端，谨慎使用吧。</p>
<h3 id="9-杜绝-http-404-错误"><a href="#9-杜绝-http-404-错误" class="headerlink" title="9. 杜绝 http 404 错误"></a>9. 杜绝 http 404 错误</h3><p>对页面链接的充分测试加上对 Web 服务器 error 日志的不断跟踪能有效减少 404 错误，也能提升用户体验：</p>
<pre><code>1）. 杜绝所有网站现有的链接的404，死链接；

2）.自定义404页面，提醒用户，访问的页面不存在，并自动跳转至有效页面。

    如： https://www.btluo.com/404.html；</code></pre><h3 id="10-防止页面阻塞："><a href="#10-防止页面阻塞：" class="headerlink" title="10.防止页面阻塞："></a>10.防止页面阻塞：</h3><p>css文件在头部引入，js在也页面尾部，防止页面阻塞；</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序图片404错误，怎么使用默认图片替换？</title>
    <url>/2020/04/14/%E5%89%8D%E7%AB%AF/2020/041401/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>小程序图片404错误，怎么使用默认图片替换？</p>
<p>微信小程序图片加载失败怎么显示默认图片？</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们在查看image的属性时会发现，image中自带有binderror属性，是可用于处理图片加载失败时的函数：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-5c5407ca24806307.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>话不多说，直接上代码：</p>
<h2 id="常用图片引入"><a href="#常用图片引入" class="headerlink" title="常用图片引入"></a>常用图片引入</h2><h3 id="1-wxml"><a href="#1-wxml" class="headerlink" title="1.wxml"></a>1.wxml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;image src=&quot;&#123;&#123;imgUrl&#125;&#125;&quot; binderror=&quot;errorImg&quot;&gt;&lt;/image&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-js"><a href="#2-js" class="headerlink" title="2.js"></a>2.js</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">errorImg: function()&#123;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      imgUrl: &apos;图片加载失败时需要显示的图片地址&apos;</span><br><span class="line">    &#125;)   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通常情况下上面的方案就能解决图片加载失败时，显示默认图片的问题，但是如果在小程序中使用了wx:for循环时，如何在图片加载失败时显示默认图片呢？</p>
<p>解决方法：小程序图片加载视频显示默认图片代码如下：</p>
<h2 id="循环引入图片"><a href="#循环引入图片" class="headerlink" title="循环引入图片"></a>循环引入图片</h2><h3 id="1-wxml-1"><a href="#1-wxml-1" class="headerlink" title="1.wxml"></a>1.wxml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view wx:for=&quot;&#123;&#123;imgList&#125;&#125;&quot; wx:key=&quot;&#123;&#123;key&#125;&#125;&quot; wx:for-index=&quot;index&quot;&gt;</span><br><span class="line">      &lt;image src=&quot;&#123;&#123;item.imgUrl&#125;&#125;&quot; binderror=&quot;errorImg&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-js-1"><a href="#2-js-1" class="headerlink" title="2.js"></a>2.js</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">errorImg: function(e) &#123;</span><br><span class="line">    var index = e.currentTarget.dataset.index</span><br><span class="line">    var img = &apos;imgList[&apos; + index + &apos;].imgUrl&apos;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">        [img]: &apos;图片加载失败时需要显示的图片地址&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo网站部署到GitHub时出现spawn failed错误</title>
    <url>/2020/04/14/%E5%89%8D%E7%AB%AF/2020/041402/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在完善完hexo的搜索功能，及新增几篇文章想上传github时，居然出现spawn failed错误了？？</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在完善完hexo的搜索功能，及新增几篇文章想上传github时，在cmd中输入hexo deploy命令部署到GitHub上时，出现如下图所示的问题  :</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-9eeb3a886764698b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>百度了一下问题，网上说，使用Get Bash Here 上传就能解决，然而，使用Get Bash Here 上传它还是报了这个错，伤心。</p>
<p>然后去百度翻译了一下这个错：</p>
<p><font color=#c7254e >请确保您拥有正确的访问权限存储库存在。致命的错误。或许您可以在这里找到解决方案：<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html</a></font></p>
<p>哦豁，可能是我本地的ssh密钥没生成，或者不小心被我删了，然后只好重新生成了一下：</p>
<p>生成方法在之前的文章中有介绍：<a href="https://www.btluo.com/news.html?articleId=44" target="_blank" rel="noopener">如何使用Hexo建站</a> 只需要看如何创建SSH就行；</p>
<p>然后在重新hexo d一下，嗯，nice，成功了：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3048f38c37f65f12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HEXO</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器-2.配置https遇到的问题</title>
    <url>/2018/10/05/%E5%90%8E%E7%AB%AF/2018/100502/</url>
    <content><![CDATA[<h2 id="问题1："><a href="#问题1：" class="headerlink" title="问题1："></a>问题1：</h2><ul>
<li><p>因为小程序不支持http，所以我们需要通过服务器的nginx来实现网站https的配置；</p>
</li>
<li><p>配置链接：<a href="https://help.aliyun.com/knowledge_detail/95505.html?spm=5176.2020520154.0.0.45d3y7Iiy7Iidz" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/95505.html?spm=5176.2020520154.0.0.45d3y7Iiy7Iidz</a></p>
</li>
</ul>
<h3 id="配置出错："><a href="#配置出错：" class="headerlink" title="配置出错："></a>配置出错：</h3><p>但是在配置过程中，我按照步骤做，到最后输入/usr/local/nginx/sbin/nginx -t也成功了，但是再浏览器输入<a href="https://47.107.131.13的时候还是会报错404；" target="_blank" rel="noopener">https://47.107.131.13的时候还是会报错404；</a></p>
<h3 id="问题查询："><a href="#问题查询：" class="headerlink" title="问题查询："></a>问题查询：</h3><p>通过netstat -tnlp指令来查看我开启的端口，后面发现我的443端口没有开启，然后我发现是我把443的端口文件写错位置了（通过linux输入ps -ef|grep nginx查看nginx开启位置）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.btluo.com;</span><br><span class="line">    ssl_certificate  /home/tool/nginx-1.14.0/cert/cert-1541843453494_www.btluo.com.crt;</span><br><span class="line">    ssl_certificate_key  /home/tool/nginx-1.14.0/cert/cert-1541843453494_www.btluo.com.key;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    location /api &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:3000;</span><br><span class="line">    &#125;</span><br><span class="line">    location /img&#123;</span><br><span class="line">        root /home;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>重新找到/usr/local/nginx/sbin/nginx下面的nginx.conf文件把443服务开启之后就能正常输入<a href="https://47.107.131.13了。" target="_blank" rel="noopener">https://47.107.131.13了。</a></p>
<h2 id="问题2："><a href="#问题2：" class="headerlink" title="问题2："></a>问题2：</h2><p>在访问的时候，因为证书配置的是域名<a href="http://www.btluo.com，所以输入https://47.***.***.13的时候会出该网站的连接不是私密连接，可能存在风险；" target="_blank" rel="noopener">www.btluo.com，所以输入https://47.***.***.13的时候会出该网站的连接不是私密连接，可能存在风险；</a></p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>不使用ip做小程序的接口地址，改为域名；</p>
<h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><p>在小程序访问时，需要在小程序中的“设置-开发设置”中把域名加入进去：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-3d55b3dda55d078e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>然后就可以通过<a href="https://www.btluo.com/来写接口了。" target="_blank" rel="noopener">https://www.btluo.com/来写接口了。</a></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器-1.配置https</title>
    <url>/2018/10/05/%E5%90%8E%E7%AB%AF/2018/100501/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>HTTPS，是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。</li>
<li>http和https的区别就是，后者在网络传输过程中会很安全，原因就是给http安装了SSL证书。</li>
</ul>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一-开启nginx的ssl模块"><a href="#一-开启nginx的ssl模块" class="headerlink" title="一.开启nginx的ssl模块"></a>一.开启nginx的ssl模块</h3><p>1.切换到nginx安装目录:</p>
<pre><code>cd /home/tool/nginx-1.14.0</code></pre><p>2.查看nginx原有的模块:</p>
<pre><code>/usr/local/nginx/sbin/nginx -v</code></pre><p>3.重新配置:</p>
<pre><code>./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module</code></pre><p>4.重新编译，不需要make  install安装。否则会覆盖:</p>
<pre><code>make</code></pre><p>5.备份原有已装好的nginx:</p>
<pre><code>cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak</code></pre><p>6.将刚刚编译好的nginx覆盖掉原来的nginx(ngixn必须停止):</p>
<p>停止nginx：</p>
<pre><code>cd /usr/local/nginx/sbin/

./nginx -s stop

cp ./objs/nginx /usr/local/nginx/sbin/</code></pre><p>这时，会提示是否覆盖，请输入yes，直接回车默认不覆盖</p>
<p>7.启动nginx，查看nginx模块，发现已经添加:</p>
<p>启动nginx：</p>
<pre><code>sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</code></pre><p>查看nginx模块：</p>
<pre><code>/usr/local/nginx/sbin/nginx -V</code></pre><p>8.测试nginx是否正确:</p>
<pre><code>/usr/local/nginx/sbin/nginx -t</code></pre><p>（成功：nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</p>
<p>nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-6e8ac1714161d31e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片">  </p>
<p>出错解决方案：<a href="https://blog.csdn.net/u014227715/article/details/77649156" target="_blank" rel="noopener">https://blog.csdn.net/u014227715/article/details/77649156</a></p>
<h3 id="二-配置https"><a href="#二-配置https" class="headerlink" title="二.配置https"></a>二.配置https</h3><p>因为我使用的是阿里云的服务器，所以需要在阿里云上下载证书，来配置https，为了安全；</p>
<p>（参考链接：<a href="https://www.cnblogs.com/tianhei/p/7726505.html" target="_blank" rel="noopener">https://www.cnblogs.com/tianhei/p/7726505.html</a>）</p>
<p>购买证书链接：<a href="https://common-buy.aliyun.com/?spm=5176.2020520154.0.0.33e956a7ViBGU7&commodityCode=cas#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?spm=5176.2020520154.0.0.33e956a7ViBGU7&amp;commodityCode=cas#/buy</a></p>
<p>ssl证书安装指南：<a href="https://help.aliyun.com/knowledge_detail/95505.html?spm=5176.2020520154.0.0.45d3y7Iiy7Iidz" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/95505.html?spm=5176.2020520154.0.0.45d3y7Iiy7Iidz</a></p>
<p>1.选择证书:</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-e615f2eedc495fe2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
<p>2.申请证书:</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-7575d093b86b0624?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-824dad00a1a9aeff?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
<p>3.下载证书上传到nginx文件夹中新建一个cert:</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-dbbf8db055a3a1f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
<p>4.配置文件：打开nginx的nginx.conf文件，输入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name www.btluo.com;//绑定的域名</span><br><span class="line">    ssl on;</span><br><span class="line">    root html;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    ssl_certificate  /home/tool/nginx-1.14.0/cert/a.pem;</span><br><span class="line">    ssl_certificate_key  /home/tool/nginx-1.14.0/cert/a.key;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root html;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.查看nginx配置是否正确:</p>
<pre><code>/usr/local/nginx/sbin/nginx -t</code></pre><p>6.重启nginx：</p>
<pre><code>/usr/local/nginx/sbin/nginx -s reload</code></pre><p>7.通过netstat -tnlp指令来查看开启的端口是否成功。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-806ea689b941f7f6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
<p>8.访问页面：</p>
<p><a href="https://www.btluo.com" target="_blank" rel="noopener">https://www.btluo.com</a></p>
<p>注：小程序使用https时需要先加入白名单，在小程序的“设置-开发设置”中把域名加入进去：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/12858218-e03b321395f7e8de?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的个人博客图片"></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 Linux中修改mysql密码</title>
    <url>/2019/09/10/%E5%90%8E%E7%AB%AF/2019/091001/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Linux中修改mysql密码的方法</p>
<h2 id="一-已知原始数据库密码的情况"><a href="#一-已知原始数据库密码的情况" class="headerlink" title="一.已知原始数据库密码的情况"></a>一.已知原始数据库密码的情况</h2><h3 id="1-登录到mysql"><a href="#1-登录到mysql" class="headerlink" title="1.登录到mysql"></a>1.登录到mysql</h3><pre><code>mysql -uroot -p;  </code></pre><h3 id="2-输入密码，回车"><a href="#2-输入密码，回车" class="headerlink" title="2.输入密码，回车"></a>2.输入密码，回车</h3><h3 id="3-进入mysql"><a href="#3-进入mysql" class="headerlink" title="3.进入mysql"></a>3.进入mysql</h3><p>进入之前可以使用show databases;查看当前所有数据库；</p>
<pre><code>use mysql;  </code></pre><h3 id="4-修改密码"><a href="#4-修改密码" class="headerlink" title="4.修改密码"></a>4.修改密码</h3><pre><code>update user set password=password(&quot;修改后的密码&quot;) where user=&quot;root&quot;;  </code></pre><h3 id="5-刷新权限："><a href="#5-刷新权限：" class="headerlink" title="5.刷新权限："></a>5.刷新权限：</h3><pre><code>flush privileges;  （重要，记得操作）</code></pre><h3 id="6-退出mysql："><a href="#6-退出mysql：" class="headerlink" title="6.退出mysql："></a>6.退出mysql：</h3><pre><code>exit;  </code></pre><h2 id="二-忘记root密码的情况"><a href="#二-忘记root密码的情况" class="headerlink" title="二.忘记root密码的情况"></a>二.忘记root密码的情况</h2><h3 id="1-首先，先停止mysql服务"><a href="#1-首先，先停止mysql服务" class="headerlink" title="1.首先，先停止mysql服务"></a>1.首先，先停止mysql服务</h3><pre><code>sudo service mysql stop;  </code></pre><h3 id="2-执行以下语句"><a href="#2-执行以下语句" class="headerlink" title="2.执行以下语句"></a>2.执行以下语句</h3><pre><code>sudo mysqld_safe --skip-grant-tables &amp;  </code></pre><h3 id="3-回车下一步"><a href="#3-回车下一步" class="headerlink" title="3.回车下一步"></a>3.回车下一步</h3><p>步骤2输入完之后，直接按回车后，输入mysql即可登录成功；</p>
<h3 id="4-更新root密码"><a href="#4-更新root密码" class="headerlink" title="4.更新root密码"></a>4.更新root密码</h3><p>用use mysql关联要操作的数据库，按上面已知密码中步骤4的sql语句直接更新root密码即可：</p>
<pre><code>update user set password=password(&quot;修改后的密码&quot;) where user=&quot;root&quot;;  </code></pre><h3 id="5-刷新权限：-1"><a href="#5-刷新权限：-1" class="headerlink" title="5.刷新权限："></a>5.刷新权限：</h3><pre><code>flush privileges;  （重要，记得操作）</code></pre><h3 id="6-退出mysql：-1"><a href="#6-退出mysql：-1" class="headerlink" title="6.退出mysql："></a>6.退出mysql：</h3><pre><code>exit;  </code></pre>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>PM2简易使用手册</title>
    <url>/2019/09/10/%E5%90%8E%E7%AB%AF/2019/091002/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>PM2是node进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡等；</p>
<h2 id="一-安装PM2"><a href="#一-安装PM2" class="headerlink" title="一.安装PM2"></a>一.安装PM2</h2><p>// 全局安装pm2，依赖node和npm</p>
<pre><code>npm install -g pm2</code></pre><h2 id="二-PM2常用命令"><a href="#二-PM2常用命令" class="headerlink" title="二.PM2常用命令"></a>二.PM2常用命令</h2><h3 id="1-启动命令"><a href="#1-启动命令" class="headerlink" title="1.启动命令"></a>1.启动命令</h3><pre><code>pm2 start app.js --watch -i 2</code></pre><p>参数说明：</p>
<pre><code>--watch：监听应用目录的变化，一旦发生变化，自动重启。如果要精确监听、不见听的目录，最好通过配置文件。
-i --instances：启用多少个实例，可用于负载均衡。如果-i 0或者-i max，则根据当前机器核数确定实例数目。
--ignore-watch：排除监听的目录/文件，可以是特定的文件名，也可以是正则。比如--ignore-watch=&quot;test node_modules &quot;some scripts&quot;&quot;
-n --name：应用的名称。查看应用信息的时候可以用到。
-o --output ：标准输出日志文件的路径。
-e --error ：错误输出日志文件的路径。
--interpreter ：the interpreter pm2 should use for executing app (bash, python...)。比如你用的coffee script来编写应用。</code></pre><h3 id="2-重启"><a href="#2-重启" class="headerlink" title="2.重启"></a>2.重启</h3><p>重启特定的应用。可以先通过pm2 list获取应用的名字（–name指定的）或者进程id：</p>
<pre><code>pm2 restart app_name|app_id  </code></pre><p>例：pm2 restart 0 //重启id为0的进程（下同）</p>
<p>pm2 restart appName //重启名字为appName的进程（下同）</p>
<p>重启所有应用：</p>
<pre><code>pm2 restart all</code></pre><h3 id="3-停止"><a href="#3-停止" class="headerlink" title="3.停止"></a>3.停止</h3><p>停止特定的应用。可以先通过pm2 list获取应用的名字（–name指定的）或者进程id：</p>
<pre><code>pm2 stop app_name|app_id  </code></pre><p>停止所有应用：</p>
<pre><code>pm2 stop all  </code></pre><h3 id="4-删除："><a href="#4-删除：" class="headerlink" title="4.删除："></a>4.删除：</h3><p>删除特定的应用。可以先通过pm2 list获取应用的名字（–name指定的）或者进程id：  </p>
<pre><code>pm2 delete app_name|app_id  </code></pre><p>关闭并删除所有应用 ：</p>
<pre><code>pm2 delete all  </code></pre><h3 id="5-查看进程状态："><a href="#5-查看进程状态：" class="headerlink" title="5.查看进程状态："></a>5.查看进程状态：</h3><pre><code>pm2 list</code></pre><h3 id="6-查看某个进程信息："><a href="#6-查看某个进程信息：" class="headerlink" title="6.查看某个进程信息："></a>6.查看某个进程信息：</h3><p>[root@iZ94wb7tioqZ pids]# pm2 describe 0</p>
<p>Describing process with id 0 - name oc-server</p>
<table>
<thead>
<tr>
<th>status</th>
<th>online</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td>string</td>
</tr>
<tr>
<td>id</td>
<td>0</td>
</tr>
<tr>
<td>path</td>
<td>/data/file/qiquan/over_the_counter/server/bin/www</td>
</tr>
<tr>
<td>args</td>
<td></td>
</tr>
<tr>
<td>exec cwd</td>
<td>/data/file/qiquan/over_the_counter/server</td>
</tr>
<tr>
<td>error log path</td>
<td>/data/file/qiquan/over_the_counter/server/logs/app-err-0.log</td>
</tr>
<tr>
<td>out log path</td>
<td>/data/file/qiquan/over_the_counter/server/logs/app-out-0.log</td>
</tr>
<tr>
<td>pid path</td>
<td>/root/.pm2/pids/oc-server-0.pid</td>
</tr>
<tr>
<td>mode</td>
<td>fork_mode</td>
</tr>
<tr>
<td>node v8 arguments</td>
<td></td>
</tr>
<tr>
<td>watch &amp; reload</td>
<td></td>
</tr>
<tr>
<td>interpreter</td>
<td>node</td>
</tr>
<tr>
<td>restarts</td>
<td>293</td>
</tr>
<tr>
<td>unstable restarts</td>
<td>0</td>
</tr>
<tr>
<td>uptime</td>
<td>87m</td>
</tr>
<tr>
<td>created at</td>
<td>2016-08-26T08:13:43.705Z</td>
</tr>
</tbody></table>
<h3 id="7-监控进程"><a href="#7-监控进程" class="headerlink" title="7.监控进程"></a>7.监控进程</h3><p>监控每个 node 进程的 cpu 和内存使用情况（包括各种响应，错误信息）：</p>
<pre><code>pm2 monit  </code></pre><h3 id="8-显示所有进程的日志信息"><a href="#8-显示所有进程的日志信息" class="headerlink" title="8.显示所有进程的日志信息"></a>8.显示所有进程的日志信息</h3><pre><code>pm2 logs  </code></pre><h3 id="9-监控运行这些进程的机器的状态"><a href="#9-监控运行这些进程的机器的状态" class="headerlink" title="9.监控运行这些进程的机器的状态"></a>9.监控运行这些进程的机器的状态</h3><pre><code>pm2 web  </code></pre><h2 id="三-配置PM2启动文件"><a href="#三-配置PM2启动文件" class="headerlink" title="三.配置PM2启动文件"></a>三.配置PM2启动文件</h2><p>pm2 启动的方式可以进行很多的扩展，比如设置环境，设置错误信息打印，设置输入信息打印等等高级功能。那么一条命令就不能完成这些任务，所有 pm2 提供了配置文件的方式来启动～</p>
<p>pm2.config.js：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 名称任意，按照个人习惯来</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    apps: [</span><br><span class="line">        &#123;</span><br><span class="line">            name: &quot;&quot;, // 应用名称</span><br><span class="line">            script: &quot;./build/server.js&quot;, // 启动文件地址</span><br><span class="line">            cwd: &quot;./&quot;, // 当前工作路径</span><br><span class="line">            watch: [</span><br><span class="line">                // 监控变化的目录，一旦变化，自动重启</span><br><span class="line">                &quot;src&quot;,</span><br><span class="line">                &quot;build&quot;,</span><br><span class="line">            ],</span><br><span class="line">            ignore_watch: [</span><br><span class="line">                // 忽视这些目录的变化</span><br><span class="line">                &quot;node_modules&quot;,</span><br><span class="line">                &quot;logs&quot;,</span><br><span class="line">                &quot;public&quot;,</span><br><span class="line">            ],</span><br><span class="line">            node_args: &quot;--harmony&quot;, // node的启动模式</span><br><span class="line">            env: &#123; //我们可以在内部添加很多个参数变量，这样我们所使用的 process.env.XXX 就会对应发生变化,</span><br><span class="line">            NODE_ENV: &quot;development&quot;, // 设置运行环境，此时process.env.NODE_ENV的值就是development</span><br><span class="line">            ORIGIN_ADDR: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        env_production: &#123;</span><br><span class="line">            NODE_ENV: &quot;production&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        out_file: &quot;./logs/out.log&quot;, // 普通日志路径</span><br><span class="line">        error_file: &quot;./logs/err.log&quot;, // 错误日志路径</span><br><span class="line">        merge_logs: true,</span><br><span class="line">        log_date_format: &quot;YYYY-MM-DD HH:mm Z&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>摘抄至PM2实用入门指南，了解更多==》：<a href="https://www.cnblogs.com/chyingp/p/pm2-documentation.html" target="_blank" rel="noopener">https://www.cnblogs.com/chyingp/p/pm2-documentation.html</a></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-保存视频到本地相册</title>
    <url>/2020/04/08/%E5%89%8D%E7%AB%AF/2020/040801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序进行微信授权并保存视频到本地</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>小程序中如何将保存视频到本地相册；</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="1-wxml"><a href="#1-wxml" class="headerlink" title="1.wxml"></a>1.wxml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view bindtap=&quot;downloadVideo&quot;&gt;下载视频&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-index-js"><a href="#2-index-js" class="headerlink" title="2.index.js"></a>2.index.js</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 下载视频前授权保存相册</span><br><span class="line">downloadVideo:function()&#123;</span><br><span class="line">    let that = this</span><br><span class="line">        , videoUrl = this.data.videoData.videoUrl;</span><br><span class="line">    // 判断是否有视频</span><br><span class="line">    if(videoUrl == &quot;&quot;)&#123;</span><br><span class="line">        util.showErrorModal(&quot;暂无可下载视频，请稍后重试！&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        wx.getSetting(&#123;</span><br><span class="line">            success(res) &#123;</span><br><span class="line">                if (res.authSetting[&quot;scope.writePhotosAlbum&quot;]) &#123;</span><br><span class="line">                    that.saveVideo();</span><br><span class="line">                &#125; else if (res.authSetting[&quot;scope.writePhotosAlbum&quot;] === undefined) &#123;</span><br><span class="line">                    wx.authorize(&#123;</span><br><span class="line">                        scope: &quot;scope.writePhotosAlbum&quot;,</span><br><span class="line">                        success() &#123;</span><br><span class="line">                            that.saveVideo();</span><br><span class="line">                        &#125;,</span><br><span class="line">                        fail() &#123;</span><br><span class="line">                            wx.showToast(&#123;title: &quot;您没有授权，无法保存视频到相册哦~&quot;, icon: &quot;none&quot;&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    wx.openSetting(&#123;</span><br><span class="line">                        success(res) &#123;</span><br><span class="line">                            if (res.authSetting[&quot;scope.writePhotosAlbum&quot;]) &#123;</span><br><span class="line">                                that.saveVideo();</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                wx.showToast(&#123;title: &quot;您没有授权，无法保存视频到相册哦~&quot;, icon: &quot;none&quot;&#125;);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">// 保存视频到相册</span><br><span class="line">saveVideo:function()&#123;</span><br><span class="line">    let fileName = new Date().valueOf()</span><br><span class="line">        , videoUrl = this.data.videoData.videoUrl;</span><br><span class="line">    wx.showLoading(&#123; title: &apos;视频下载中&apos;, mask: true &#125;);</span><br><span class="line">    wx.downloadFile(&#123;</span><br><span class="line">        url: videoUrl,</span><br><span class="line">        filePath: wx.env.USER_DATA_PATH + &apos;/&apos; + fileName + &apos;.mp4&apos;,</span><br><span class="line">        success: res =&gt; &#123;</span><br><span class="line">            console.log(res);</span><br><span class="line">            let filePath = res.filePath;</span><br><span class="line">            wx.saveVideoToPhotosAlbum(&#123;</span><br><span class="line">                filePath,</span><br><span class="line">                success: file =&gt; &#123;</span><br><span class="line">                    wx.hideLoading();</span><br><span class="line">                    util.showErrorModal(&quot;下载成功！！&quot;);</span><br><span class="line">                    // 删除本地缓存文件</span><br><span class="line">                    let fileMgr = wx.getFileSystemManager();</span><br><span class="line">                    fileMgr.unlink(&#123;</span><br><span class="line">                        filePath: wx.env.USER_DATA_PATH + &apos;/&apos; + fileName + &apos;.mp4&apos;,</span><br><span class="line">                        success: function (r) &#123; &#125;,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                fail: err =&gt; &#123;</span><br><span class="line">                    wx.hideLoading();</span><br><span class="line">                    console.log(err)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>3.util.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 消息提示</span><br><span class="line">function showErrorToast(msg) &#123;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">        title: msg,</span><br><span class="line">        icon: &apos;loading&apos;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">// 错误提示</span><br><span class="line">function showErrorModal(msg) &#123;</span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">        title: &apos;温馨提示&apos;,</span><br><span class="line">        content: msg,</span><br><span class="line">        showCancel: false</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    showErrorToast,</span><br><span class="line">    showErrorModal,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：只贴了与本文章有关部分代码；  </p>
<p>亲测下载成功；</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>在linux中使用nginx时遇到的问题</title>
    <url>/2019/10/16/%E5%90%8E%E7%AB%AF/2019/101601/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在linux中使用nginx重启时，报了一个缺少http_ssl_module模块的错。导致nginx无法重启，本文主要介绍解决方法。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在linux中重启nginx时，报了一个错：nginx: [emerg] the “ssl” parameter requires ngx_http_ssl_module in /usr/local/nginx/conf/nginx.conf:53；</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>这是因为当时在linux中安装nginx时没有使用到SSL，所以在之前编译的时候使用的不带SSL的默认编译参数。让nginx重新配置添加SSL模块，就能解决这一问题了。但是，如何在现有nginx的基础上，添加一个支持SSL的编译参数呢？首先要找回原来编译nginx时的编译参数，然后再加上支持SSL的编译参数就行。如果不这样做，那么编译出来的nginx可能就会有问题（某些旧的编译参数被去掉了，使得nginx不能支持某些功能）。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-切换到nginx源码包"><a href="#1-切换到nginx源码包" class="headerlink" title="1.切换到nginx源码包"></a>1.切换到nginx源码包</h3><p>（我的源码所在位置 /home/tool/nginx-1.14.0）：</p>
<pre><code>cd /home/tool/nginx-1.14.0</code></pre><h3 id="2-查看ngixn原有的模块"><a href="#2-查看ngixn原有的模块" class="headerlink" title="2.查看ngixn原有的模块"></a>2.查看ngixn原有的模块</h3><p>（查看下之前默认编译参数）：</p>
<pre><code>/usr/local/nginx/sbin/nginx -V  </code></pre><h3 id="3-重新配置添加SSL模块"><a href="#3-重新配置添加SSL模块" class="headerlink" title="3.重新配置添加SSL模块"></a>3.重新配置添加SSL模块</h3><pre><code>./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module</code></pre><h3 id="4-重新编译"><a href="#4-重新编译" class="headerlink" title="4.重新编译"></a>4.重新编译</h3><p>不需要make install安装。否则会覆盖：</p>
<pre><code>make</code></pre><h3 id="5-备份已安装好的nginx"><a href="#5-备份已安装好的nginx" class="headerlink" title="5.备份已安装好的nginx"></a>5.备份已安装好的nginx</h3><pre><code>cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak</code></pre><h3 id="6-查看当前nginx已启动进程"><a href="#6-查看当前nginx已启动进程" class="headerlink" title="6.查看当前nginx已启动进程"></a>6.查看当前nginx已启动进程</h3><p>（将刚刚编译好的nginx覆盖掉原来的nginx之前需要将nginx停止）：</p>
<pre><code>ps -ef | grep nginx</code></pre><p>7.停止nginx主进程</p>
<pre><code>kill - QUIT 主进程号 或 kill -TERM 主进程号 </code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-e41e11f1a02d4044.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="8-将刚编译好的nginx覆盖掉原来的nginx"><a href="#8-将刚编译好的nginx覆盖掉原来的nginx" class="headerlink" title="8.将刚编译好的nginx覆盖掉原来的nginx"></a>8.将刚编译好的nginx覆盖掉原来的nginx</h3><pre><code>cp ./objs/nginx /usr/local/nginx/sbin/</code></pre><p>这时，会提示是否覆盖，请输入yes，直接回车默认不覆盖</p>
<h3 id="9-重新启动nginx"><a href="#9-重新启动nginx" class="headerlink" title="9.重新启动nginx"></a>9.重新启动nginx</h3><pre><code>cd （--返回根目录）

/usr/local/nginx/sbin/nginx -c/usr/local/nginx/conf/nginx.conf --启动nginx</code></pre><h3 id="10-查看nginx模块，是否更新"><a href="#10-查看nginx模块，是否更新" class="headerlink" title="10.查看nginx模块，是否更新"></a>10.查看nginx模块，是否更新</h3><pre><code>/usr/local/nginx/sbin/nginx -V    </code></pre>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器-搭建服务器</title>
    <url>/2018/10/10/%E5%90%8E%E7%AB%AF/2018/101001/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于个人需求，需要建个个人博客，方便把遇到的问题和解决的过程，总结写成博客，所以买了个服务器和域名，开始搭建我的服务器；</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一-安装nginx"><a href="#一-安装nginx" class="headerlink" title="一.安装nginx"></a>一.安装nginx</h3><p>参考链接：<a href="https://www.linuxidc.com/Linux/2016-09/134907.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-09/134907.htm</a>；</p>
<p>1.安装gcc：</p>
<pre><code>yum install gcc-c++</code></pre><p>2.安装PCRE pcre-devel：</p>
<pre><code>yum install -y pcre pcre-devel</code></pre><p>3.安装zlib：</p>
<pre><code>yum install -y zlib zlib-devel</code></pre><p>4.安装openssl：</p>
<pre><code>yum install -y openssl openssl-devel</code></pre><p>5.官网下载nginx的.tar.gz安装包，地址：<a href="https://nginx.org/en/download.html" target="_blank" rel="noopener">https://nginx.org/en/download.html</a></p>
<p>6.解压： </p>
<pre><code>tar -zxvf nginx-1.14.0.tar.gz</code></pre><p>7.进去解压目录：</p>
<pre><code>cd nginx-1.14.0</code></pre><p>8.使用默认配置：</p>
<pre><code>./configure --prefix=/usr/local/nginx</code></pre><ol start="9">
<li><p>编译安装：</p>
<p> make</p>
</li>
</ol>
<p>10.需要安装 libpcre3-dev,命令为：</p>
<pre><code>sudo apt-get install libpcre3-dev</code></pre><ol start="11">
<li><p>安装nginx：</p>
<p>sudo make install</p>
</li>
</ol>
<p>12.启动nginx：</p>
<pre><code>sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</code></pre><p>13.重启nginx：</p>
<pre><code>/usr/local/nginx/sbin/nginx -s reload</code></pre><p>14.关闭nginx：</p>
<pre><code>cd /usr/local/nginx/sbin/

./nginx -s stop</code></pre><h3 id="二-安装node"><a href="#二-安装node" class="headerlink" title="二.安装node"></a>二.安装node</h3><p>参考链接：<a href="https://www.cnblogs.com/baby123/p/6955396.html" target="_blank" rel="noopener">https://www.cnblogs.com/baby123/p/6955396.html</a></p>
<p>（下载node：<a href="https://nodejs.org/zh-cn/download/到服务器到/home/tool文件夹中）" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/到服务器到/home/tool文件夹中）</a></p>
<p>1.解压： </p>
<pre><code>tar -xvf node-v10.13.0.tar.gz</code></pre><p>2.进入解压目录，执行ls命令：</p>
<pre><code>cd node-v10.13.0 &amp;&amp; ls</code></pre><p>3.测试node是否安装成功：</p>
<pre><code>./node -v</code></pre><p>4.配置node全局配置：</p>
<pre><code>ln -s /home/tool/node-v11.0.0-linux-x64/bin/node /usr/local/bin/node</code></pre><p>5.配置npm全局配置：</p>
<pre><code>ln -s /home/tool/node-v11.0.0-linux-x64/bin/npm /usr/local/bin/npm</code></pre><p>（可以在任何目录下执行node和npm命令）</p>
<p>6.查看环境变量：</p>
<pre><code>echo $PATH</code></pre><p>（/usr/local/bin是环境变量PATH的内容，所以建立软链接后可以直接使用node命令）</p>
<h3 id="三-安装mysql"><a href="#三-安装mysql" class="headerlink" title="三.安装mysql"></a>三.安装mysql</h3><p>参考链接：<a href="https://www.cnblogs.com/starof/p/4680083.html" target="_blank" rel="noopener">https://www.cnblogs.com/starof/p/4680083.html</a></p>
<p>1.官网下载安装mysql-server</p>
<pre><code>wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm

rpm -ivh mysql-community-release-el7-5.noarch.rpm

yum install mysql-community-server</code></pre><p>2.安装成功后重启mysql服务：</p>
<pre><code>service mysqld restart</code></pre><p>3.初次安装mysql，root账户没有密码：</p>
<pre><code>mysql -u root -p root</code></pre><p>4.设置密码：</p>
<pre><code>mysql&gt; set password for</code></pre>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>Java入坑01-Java入门简介</title>
    <url>/2020/03/12/%E5%90%8E%E7%AB%AF/2020/031201/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>java学习笔记，教程:廖雪峰官方网站;</p>
<h3 id="一-Java的三个版本"><a href="#一-Java的三个版本" class="headerlink" title="一.Java的三个版本"></a>一.Java的三个版本</h3><p>1.JavaSE：Standard Edition，标准版，包含标准的JVM和标准库；</p>
<p>2.JavaEE：Enterprise Edition，在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等；</p>
<p>3.JavaME：Micro Edition，一个针对嵌入式设备的javaSE的简洁版；</p>
<p>三者间的关系：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-9f7909c8726756e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="二-学习路线"><a href="#二-学习路线" class="headerlink" title="二.学习路线"></a>二.学习路线</h2><p>1.Java SE：掌握Java语言本身、Java核心开发技术以及Java标准库的使用；</p>
<p>2.Java EE：Spring框架、数据库开发、分布式架构；</p>
<h2 id="三-安装jdk"><a href="#三-安装jdk" class="headerlink" title="三.安装jdk"></a>三.安装jdk</h2><h3 id="什么是jdk，为什么要安装jdk"><a href="#什么是jdk，为什么要安装jdk" class="headerlink" title="什么是jdk，为什么要安装jdk"></a>什么是jdk，为什么要安装jdk</h3><p>因为Java程序必须运行在JVM之上，如果只有Java源码，要编译成Java字节码，就需要jdk，因为jdk除了包含jre(运行Java字节码的虚拟机)，还提供了编译器、调试器等开发工具。</p>
<p>jdk安装步骤：<a href="https://www.btluo.com/news.html?articleId=55" target="_blank" rel="noopener">https://www.btluo.com/news.html?articleId=55</a></p>
<h2 id="四-编写第一个java程序"><a href="#四-编写第一个java程序" class="headerlink" title="四.编写第一个java程序"></a>四.编写第一个java程序</h2><p>1.新建一个文件夹，新增一个.java格式的文件，如下图所示：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d31a73a353647a7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.打开编辑器，将刚刚新建的文件打开，输入我们的第一个java程序代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Hello &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;Hello, world!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-641f2d8735101f46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>在上面java程序中的：</p>
<pre><code>public class Hello{...}</code></pre><p>这种写法被定义为class类，public表示这个类是公开的，class用来定义这是一个类，public、class都是Java的关键字，必须小写，Hello是类的名字，首字母H要大写。而花括号{}中间则是类的定义；</p>
<p>在花括号{}中，Hello类定义了一个名为main的方法：</p>
<pre><code>public static void main(String[] args) { ... }</code></pre><p>它是可执行的代码块，一个方法除了方法名main，还有用()括起来的方法参数，这里的main方法有一个参数，参数类型是String[]，参数名是args，public、static用来修饰方法，这里表示它是一个公开的静态方法，void是方法的返回类型，而花括号{}中间的就是方法的代码；方法里的代码每一行用;结束，这里只有一行代码，就是：</p>
<pre><code>System.out.println(&quot;Hello, world!&quot;);</code></pre><p>意思是打印Hello, world!到控制台；</p>
<p>Java规定，每个类定义的public static void main(String[] args)是Java程序的固定入口方法，因此，Java程序总是从main方法开始执行。</p>
<p>3.运行java代码：</p>
<p>Java源码本质上是一个文本文件，我们需要先用javac把Hello.java编译成字节码文件Hello.class，然后，用java命令执行这个字节码文件：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8a82673cb5ed0dc8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>所以通过javac执行Hello.java文件，生成Hello.css文件</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-2ac5b278c293583f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>在执行以下命令,就能输出刚刚需要打印的Hello, world!了：</p>
<pre><code>java Hello</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/12858218-f33488ab4354cf28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>注：</p>
<p>一个Java源码只能定义一个public类型的class，并且class名称和文件名要完全一致；</p>
<p>使用javac可以将.java源码编译成.class字节码；</p>
<p>使用java可以运行一个已编译的Java程序，参数是类名。</p>
<p>系列文章皆摘抄至：<a href="https://www.liaoxuefeng.com/wiki/1252599548343744" target="_blank" rel="noopener">廖雪峰的官方网站</a>  </p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java入坑02-eclipse安装及配置使用</title>
    <url>/2020/03/12/%E5%90%8E%E7%AB%AF/2020/031202/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>java学习笔记，教程:廖雪峰官方网站;</p>
<p>Java开发，其实在安装好JDK后，就可以使用文本文档编辑，但是这样开发十分麻烦，效率极低。因此需要使用专门的开发工具，辅助我们快速、高效地开发代码。目前比较流行的Java开发工具有三个：Eclipse、MyEclipse、IntelliJ IDEA。以下是Eclipse的安装和JDK的整合：</p>
<h2 id="一-Eclipse的安装"><a href="#一-Eclipse的安装" class="headerlink" title="一.Eclipse的安装"></a>一.Eclipse的安装</h2><p>1.打开eclipse的官网：<a href="https://www.eclipse.org/downloads/packages/" target="_blank" rel="noopener">https://www.eclipse.org/downloads/packages/</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-2298ec226b4047d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>点击Download下载：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-331acc696b35a038.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>下载完后点击安装：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-aa3e38553f41daf0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="二-为Eclipse配置JDK"><a href="#二-为Eclipse配置JDK" class="headerlink" title="二.为Eclipse配置JDK"></a>二.为Eclipse配置JDK</h2><p>1、打开Eclipse，点击菜单栏Window下的Preferences。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-99af19b29c2ec649.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.点击Java–》Instralled JREs–》Add，选择默认standard VM–》next，选择JDK安装的位置，点击完成。最后点击Apply，完成JDK配置。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3560f5c2413824f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>选择jdk所在文件夹:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-69c6cf770a6c345b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>点击Apply，配置完成：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4d0cf9ca2646fe93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="三-其他设置"><a href="#三-其他设置" class="headerlink" title="三.其他设置"></a>三.其他设置</h2><p>1.General –》 Editors –》 Text Editors：</p>
<p>钩上“Show line numbers”，这样编辑器会显示行号；</p>
<p>2.General –》 Workspace:</p>
<p>钩上“Refresh using native hooks or polling”，这样Eclipse会自动刷新文件夹的改动；</p>
<p>对于“Text file encoding”，如果Default不是UTF-8，一定要改为“Other：UTF-8”，所有文本文件均使用UTF-8编码；</p>
<p>对于“New text file line delimiter”，建议使用Unix，即换行符使用\n而不是Windows的\r\n。</p>
<p>3.Windows–》preferences–》Java–》Editor–》Content Assist</p>
<p>在右边的“Auto activation triggers for Java”后的框中输入.qwertyuioplkjhgfdsazxcvbnm，点击OK。</p>
<p>设置成功后可自动补全代码；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8df0eabb31f9d7dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="四-使用eclipse新建java项目"><a href="#四-使用eclipse新建java项目" class="headerlink" title="四.使用eclipse新建java项目"></a>四.使用eclipse新建java项目</h2><p>1.在Eclipse菜单选择File–》New–》Java Project，给项目命名，如HelloWord：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-7086d9ff2e3834ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f9e5e594b28a3f89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>点击“Finish”就成功创建了一个名为HelloWorld的Java工程。</p>
<p>2.新建并运行HelloWorld：</p>
<p>选中源码目录src，点击右键，在弹出菜单中选择New–》Class：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4fb6e3729c35f7bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>输入要输出的测试内容：System.out.println(“Hello Word”)，</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-fa779f18f6aedccc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>保存，然后选中文件Hello.java，点击右键，在弹出的菜单中选中Run As–》Java Application：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1a8e018b6c0b3586.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>在Console窗口中就可以看到运行结果：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-aff6d170e1ec2845.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>如果没有在主界面中看到Console窗口，请选中菜单Window–》Show View–》Console，即可显示。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-JDK下载与安装详细步骤</title>
    <url>/2019/12/20/%E5%90%8E%E7%AB%AF/2019/122001/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>后台在运行Java源码时，要编译成Java字节码，就需要JDK，因为JDK除了包含JRE，还提供了编译器、调试器等开发工具。</p>
<h2 id="1-下载并安装jdk"><a href="#1-下载并安装jdk" class="headerlink" title="1.下载并安装jdk"></a>1.下载并安装jdk</h2><p>官方下载地址：<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4aa74e09a0080b07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h2><p>①.右击桌面“我的电脑”右键–&gt;”属性”–&gt;”高级系统设置”–&gt;”高级”–&gt;”环境变量” ;</p>
<p>②.在系统变量里新建”JAVA_HOME”变量，变量值为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Program Files\Java\jdk1.8.0_131（安装jdk时所在安装路径）</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-77c1281fa1ca3d10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>③.在系统变量里新建”classpath”变量，输入（最前面的.不要漏了）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar;%JAVA_HOME%\lib\dt.jar</span><br></pre></td></tr></table></figure>

<p>④.找到path变量，添加变量值（已存在就不用新建）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure>

<p>⑤.打开命令行，输入以下命令，测试配置是否成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-57176b7a5655efe7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javac</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-72f929b84590f7a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode前端开发利器</title>
    <url>/2018/10/28/IT/2018/102801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>代码编辑器的选择，可以说是开发者社区中一个经久不衰的话题，现今编辑器的数量数不胜数，vim,Emacs,Atom,sublime Text等等，那么对于一个开发者而言，挑选一个合适的编辑器是可以有效的提高编程效率；</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一-选择合适的编辑器，提高编程效率"><a href="#一-选择合适的编辑器，提高编程效率" class="headerlink" title="一.选择合适的编辑器，提高编程效率"></a>一.选择合适的编辑器，提高编程效率</h3><p><code>代码编辑器的选择，可以说是开发者社区中一个经久不衰的话题，现今编辑器的数量数不胜数，vim，sublime Text,Emacs,Atom等等，那么对于一个开发者而言，挑选一个合适的编辑器是可以有效的提高编程效率；</code></p>
<p><strong>选择编辑器时，需要考虑的三个因素：</strong></p>
<p>1.选择的编辑器对文本，代码的编程效率要求有多高；</p>
<p>2.选择的编辑器对编程语音的支持如何，配置是否繁琐；</p>
<p>3.选择的编辑器插件生态如何，社区是否活跃；</p>
<blockquote>
<p>VSCode：是一款免费的、开源的、高性能的、跨平台的、轻量级的代码编辑器，同时，在性能，语言支持、开源社区方面也做的很不错！</p>
</blockquote>
<h3 id="二-学编辑器，到底应该学什么"><a href="#二-学编辑器，到底应该学什么" class="headerlink" title="二.学编辑器，到底应该学什么"></a>二.学编辑器，到底应该学什么</h3><ul>
<li><p>编辑器的学习就像编程语言的学习类似，一开始不熟悉的一门编程语言的时候，可能会从官方文档，从头到尾的学习这门语言的内容，但是学习过程中一些小小的语法就可能会影响你学习的进度，到之后你完全掌握这门语法的时候，你会发现开始学习时遇到的那点语法问题并不是那么的重要。</p>
</li>
<li><p>在掌握一门编程语言的时候，你想要学习另外一门编程语言，并且还是按照第一次的学习方式去学习这门语言，那么说明你并没有从全局理解这门语言，也没有再脑海中建立“学习框架”。</p>
</li>
<li><p>其实，一门新的编程语言往往是解决老语言的某个短板，但是他们的本质其实并没有多大的改变，如果你在学习第一门语言的时候能建立一套自己的“学习框架”，之后再学习一门新的语言的时候就会更有效率。</p>
</li>
<li><p>同时，学习编辑器的学习，也和编辑语言一样。当使用一个工具时，你最关心的应该是它能用来做什么，它擅长做什么，以及它不能做什么；换句话说，就是指这个工具的‘上限’和‘下限’</p>
</li>
</ul>
<p><strong>首先，我们先找一下编辑器的‘下限’：</strong></p>
<p>1.快捷键的选用：</p>
<ul>
<li><p>首先要考虑编辑器再选用快捷键的时候是否会与系统自带快捷键有所冲突；</p>
</li>
<li><p>其次，要参考其他开发工具对快捷键组合，迎合用户习惯；</p>
</li>
<li><p>最后，也是最重要的一点，我们要看快捷键的配置是否有统一性；</p>
</li>
</ul>
<p><code>配置的统一性：Shift键只能用于控制文本选择，Ctrl或者Cmd键只能当做辅助键，Tab用于控件之间的跳转等。</code></p>
<p>2.编程语言以及框架的支持：</p>
<p>选择一个编辑器时，我们需要考虑的是它对你必须使用的编程语言的支持情况如何，语法高亮是否正确，是否能自动补全代码能否直接调试或运行测试等；</p>
<p>3.对工作流的选择和支持</p>
<blockquote>
<p>（工作流：是对工作流程及其各操作步骤之间业务规则的抽象、概括描述。）</p>
</blockquote>
<p>最后一个影响因素，就是编辑器对工作流的选择和支持，比如说Vim编辑器（<a href="http://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener" title="vim编辑器--菜鸟教程">http://www.runoob.com/linux/linux-vim.html</a>）并不自带资源管理器，如果你希望在Vim中看到文件树并快速切换文件就需要安装相应的插件；但是现在大多数的编辑器都直接集成了资源管理器，VSCode自带了版本管理，可以说是对版本管理在开发过程中的重要地位的一种认同，但是有些开发工具把测试功能集成进去，这个需求并不是所以人都认为是日常开发必要的；</p>
<p><strong>接着，我们来说说编辑器的‘上限’：</strong></p>
<ul>
<li><p>如果说一款编辑器支持用户写插件来定制功能，那么它的‘上限’就很高了。像Eclipse这样允许修改任意功能的工具来说，它们的‘上限’理论就是无限的，但是扩展编辑器这个事，还是需要从社区和个人的，能否达到这个高度还是个未知数。</p>
</li>
<li><p>Eclipse是最流行的java编辑器之一，插件的开发语言也是java，所以它的插件社区还是很活跃的，但是Eclipse把插件运行到主程序中，一旦插件的性能堪忧，就会影响到Eclipse的本身体验。</p>
</li>
<li><p>VSCode的插件开发语言是JavaScript，所以写扩展对于很多人来说是没有门槛的，因为大多数人多少都会写点js，所以对于VSCode来说插件社区的活跃度还是不用担心的，主要是要考虑如何避免跳进Eclipse的坑里。</p>
</li>
<li><p>关于编辑器的‘上限’和‘下限’，其实就是我们再选择编辑器的时候所需要考虑的因素以及学习的方向，当然最重要的就是多动手；</p>
</li>
</ul>
<h3 id="三-关于VSCode"><a href="#三-关于VSCode" class="headerlink" title="三.关于VSCode"></a>三.关于VSCode</h3><blockquote>
<p>VSCode(Visual Studio Code):它是一个免费的，开源的跨平台编辑器。之所以强调‘编辑器’，可能是VSCode并无意成为一个全尺寸的集成开发环境，也就是IDE。它是由Erich Gamma把Monaco Editor移植到桌面平台上，成为了现今的VSCode。</p>
</blockquote>
<p>很多人都把编辑器等同于IDE，其实并非如此。IDE更为注重编程体验，对代码有很好的理解，同时侧重于为代码调试、测试等提供图形化界面的支持。因此，可能会显得比较笨重；</p>
<p>而编辑器则相对更轻量，侧重文件或者文件夹，语言，工作流的支持更丰富和自由，VSCode的定位就是编辑器，但又并不局限于此。 </p>
<p><strong>开源开发的平台</strong></p>
<ul>
<li><p>首先，<strong>VSCode</strong>的源代码以MIT协议（开源中国）开源，这就意味着我们可以免费获取VSCode的核心代码，社区可以基于VSCode的代码，开发自己的产品；而VSCode也经常能从一些知名的项目中吸取宝贵的经验。</p>
</li>
<li><p>其次，VSCode的源代码托管在GitHub上，同时使用GitHub的开发计划和测试，使每个用户都可以在GitHub上了解VSCode的开发进度，作为用户，可以更好的了解产品的发展情况。</p>
</li>
<li><p>再者，VSCode自带了TypeScript和Node.js的支持，用户下载VSCode后能立即获得javascript和nodejs的智能提示，且无需任何配置即可调试nodejs，然而VSCode的团队并不会精通所有的语言，那么对于他们不熟悉的语言，VSCode该怎么支持呢？最好的方法就是让专业的人来做，所以VSCode为编程工作者提供了统一的API（即Language Server Protocol和 Code Debugging Protocol），使得每一个语言都能得到更好的支持。</p>
</li>
</ul>
<p><strong>VSCode学习指南</strong></p>
<p>1.VSCode有一套自己的快捷键，你可以通过学习快捷键来了解核心编辑器所支持的功能。同时，VSCode允许自定义快捷键，使用户能更好的使用VSCode。VSCode对鼠标，多光标，搜索都有完备的支持，对自动补全，代码片段等都一应俱全。</p>
<p>2.学会使用工作台，工作区，VSCode中除了编辑器区域，还有其他很多功能，像是资源管理器。跨文件搜索、插件管理等，它们就组成了统一的界面，就是工作台；这个工作台的设计代表了VSCode对工作流的选择。VSCode内置的软件版本管理，终端模拟器，调试器等，都能提高工作效率。</p>
<p>3.VSCode允许定制和开发插件，所以试着把自己的想法，来满足自己的需求，能更好的提升自己，了解VSCode；</p>
<p>4.关注每月的发布更新日志，关注VSCode官方博客；</p>
<p>通过以上几个步骤，能更好的使用好VSCode，提高工作效率。</p>
<p>总结：VSCode的定位是轻量级的代码编辑器，综合了Eclipse等许多优秀工具的优势，同时也解决了它们的弊端，VSCode在性能、语言支持、社区方面都很不错；</p>
<p>VSCode更新日志：<a href="https://code.visualstudio.com/updates/v1_27" target="_blank" rel="noopener" title="VSCode更新日志">https://code.visualstudio.com/updates/v1_27</a></p>
<p>VSCode官方博客：<a href="https://code.visualstudio.com/blogs/2018/09/12/engineering-with-azure-pipelines" target="_blank" rel="noopener" title="VSCode官方博客">https://code.visualstudio.com/blogs/2018/09/12/engineering-with-azure-pipelines</a></p>
<p>VSCode社区：<a href="https://code.visualstudio.com/community" target="_blank" rel="noopener" title="VSCode社区">https://code.visualstudio.com/community</a></p>
<h3 id="四-快速上手VSCode"><a href="#四-快速上手VSCode" class="headerlink" title="四.快速上手VSCode"></a>四.快速上手VSCode</h3><p><strong>安装与版本选择</strong></p>
<p>VSCode有两个发布渠道，一个是常用的稳定版，每月发布一个主版本；另一个是insiders，每周一到周五早上6点发布，也是VSCode内部团队使用的版本，目的是为了更好的发现Bug。微软内部对这个做法还有个专门的名词：eat your own dog food(吃自己的狗粮)。</p>
<p>VSCode目前在全世界大概有一万五千名用户在使用insiders版本。不过刚接触VSCode，稳定版会相对适合。但是如果已经使用VSCode一段时间的话，可以试一试insiders。因为使用这个版本可以尽早用上最新的功能，一般VSCode的新功能会先在insiders上线，等运行一段时间后才会随着当月稳定版发布。改动较大的可能会运行两个月之后才会推向稳定版。</p>
<p>其次，一个新功能的添加往往是不成熟的，使用insiders可以第一时间在GitHub上反馈对新功能的看法及建议，甚至能为其提供代码。</p>
<p><strong>下载安装VSCode</strong></p>
<p>官网：<a href="https://code.visualstudio.com" target="_blank" rel="noopener" title="VSCode官网">https://code.visualstudio.com</a></p>
<p><strong>初次使用VSCode</strong></p>
<p>VSCode第一次启动的时候会显示一个‘欢迎使用’页，主要是为了方便快速打开文件，文件夹以及访问历史文件，更换主题色，更换快捷键等：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a9fb3c89906d5dc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="初次使用界面"></p>
<p>这个界面有着很多你可能感兴趣的功能：</p>
<p>1.命令面板：</p>
<p>我们可以通过快捷键F1或者Ctrl+Shift+P（mac上的Cmd+Shift+P）键打开VSCode的命令面板。!</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-aae41b8bc251f8a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="命令面板"></p>
<p>VSCode的绝大部分命令都能从命令面板找到，所以只要熟悉命令面板，就能不用鼠标，完全使用键盘来完成编码工作。</p>
<p>2.界面概览：</p>
<p>展示VSCode默认界面里的不同部件的位置，名称和快捷键。VSCode强调无鼠标操作，但是记快捷键就会成为很多新手的痛点，这个界面恰好能解决这个痛点。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a722423cc76b2afc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="界面概览"></p>
<p>3.交互式演戏场：</p>
<p>打开这个界面，我们会看到很多的英文教程，它通过各种交互实例，展示了一些高级编辑代码功能的使用，每个功能都会有一个代码片段和编辑器能供我们使用。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e42184329a979329.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="交互式演戏场"></p>
<h3 id="五-VSCode快捷键"><a href="#五-VSCode快捷键" class="headerlink" title="五.VSCode快捷键"></a>五.VSCode快捷键</h3><p><strong>光标移动</strong></p>
<p>1.option + ← ：移动到单词最前面；</p>
<p>2.option + → ：移动到单词最末尾； </p>
<p>3.option + 方向键 ：以单词为单位移动；</p>
<p>4.cmd + ← ：移动到当前行最前面；</p>
<p>5.cmd + → ：移动到当前行最末尾；</p>
<p>6.cmd + shift + \ ：花括号之间跳转；</p>
<p>7.cmd + 上下键 ：移动到文档第一行或最后一行；</p>
<p><strong>文本选择</strong></p>
<p>基于单词，行，文档的光标操作加上个shift键，就可以移动光标的同时选择文本；</p>
<p><strong>删除操作</strong></p>
<p><code>删除当前选中文本内容（Windows：home+shift；macOS：cmd+left+shift）</code></p>
<p>1.cmd + Backspace ：删除当前行光标后的所有字符；</p>
<p>2.cmd + delete ：删除光标前的所有字符；</p>
<p>3.option + delete ：把当前单词光标前的字符删除；</p>
<p>4.option + Backspace ：删除当前单词光标后的字符；</p>
<p><strong>自定义快捷键</strong></p>
<p>打开命令面板（F1或ctrl+shift+p）搜索‘打开键盘快捷方式’，就可以更换或者删除快捷键；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3c55074b2beef304.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自定义快捷键"></p>
<h3 id="六-VSCode快捷键进阶"><a href="#六-VSCode快捷键进阶" class="headerlink" title="六.VSCode快捷键进阶"></a>六.VSCode快捷键进阶</h3><p>1.cmd + shfit + k :删除当前代码行；</p>
<p>2.cmd + x ：剪切这行代码；</p>
<p>3.cmd + Enter :在当前行的上面新增一行；</p>
<p>4.option + ‘上下键’：将当前行或者当前选中的几行代码在编辑器中上下移动；</p>
<p>5.option + shift +‘上下方向键’：向上向下复制当前行；</p>
<p><code>移动代码行，代码缩进发生改变</code></p>
<p><strong>添加注释</strong></p>
<p>1.cmd + / ：注释一行代码；</p>
<p>2.option + shift + A :注释一整段代码；</p>
<p><strong>格式化代码</strong></p>
<p>1.option + shift + F :格式化代码；</p>
<p>2.cmd + K cmd + F :格式化选中行代码；</p>
<p>3.cmd + shift + P ：代码缩进；</p>
<h3 id="七-文件、符号、代码之间的快速跳转"><a href="#七-文件、符号、代码之间的快速跳转" class="headerlink" title="七.文件、符号、代码之间的快速跳转"></a>七.文件、符号、代码之间的快速跳转</h3><p>1.Ctrl + Tab(同时按住),继续按着Ctrl键，松开Tab键 :打开当前打开文件的列表，选择要打开文件，松开Ctrl就能打开对应文件；</p>
<p>2.Ctrl + P :打开最近打开文件列表，同时列表顶部出现搜索框，搜索文件名，回车（Enter），可以在当前窗口打开对应文件；使用Cmd + Enter会在新的编辑器窗口打开这个文件。</p>
<p>3.Ctrl + g :行跳转，输入对应数字回车，可以跳转到当前文件的当前行。</p>
<p>4.Ctrl + p(输入文件名 + “：” + 行数)：跳转到指定文件的指定行数。 </p>
<p>5.Cmd + shift + O :调出当前文件的符号（函数名等），使用方向键或者搜索，回车，就能跳转到你想要的符号；如果输入“：”可以对当前文件的所有符号进行分类；</p>
<p>6.Ctrl + T ：打开多个文件，搜索多个文件中的符号；</p>
<p>7.F12：跳转到函数的定义处；Cmd + F12 ：跳转到函数的实现位置；注：js中没有接口的概念，定义和实现是相同的，所以js中的F12和Cmd + F12效果是一样的；</p>
<p>8.Shift + F12 ：打开函数引用的预览（把光标放在函数或者类上，按Shift+F12可以打开一个引用列表和内嵌编辑器）</p>
<h3 id="八-VSCode中的鼠标操作"><a href="#八-VSCode中的鼠标操作" class="headerlink" title="八.VSCode中的鼠标操作"></a>八.VSCode中的鼠标操作</h3><p>1.在VSCode中，单击鼠标左键：把光标移动到相应的位置；双击鼠标左键：将当前光标下的单词选中；三击鼠标左键：选中当前行代码；四次点击鼠标左键：选中整个文档。</p>
<p>2.鼠标左键单击行号：直接选中所在行；按住鼠标左键再行号上下移动：可以选中多行代码；</p>
<p>3.拖动选中的代码，按住鼠标左键，移动鼠标可以改变代码位置；如果想在拖动时复制一份代码，可以按住Ctrl键，操作结果就能从原来的“剪切+复制”变成“复制+黏贴”。</p>
<p>4.VSCode中，如果鼠标拥有中键，只需要按下鼠标中键，然后对着一段文档拖出一个框，再框中的代码就被选中了，而且每一行选中的代码，都有一个独立的光标。</p>
<p>5.悬停提示窗口：当鼠标移动到某些文件上之后，一会就会显示跟鼠标下文本相关的信息；如果鼠标放在某个函数上，按下Ctrl时，则能在悬停提示的窗口上看到该函数的实现。</p>
<p>6.代码的跳转和链接：如果我们把鼠标放在函数上时，函数下方会出现一个下划线，然后当我们按下鼠标左键时，就能跳转到该函数的定义处。</p>
<p>当我们再编写Markdown这样的非编程语言的文档时，通过Ctrl+鼠标左键能打开超级链接。</p>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>java入坑03-廖雪峰官网练习插件</title>
    <url>/2020/03/12/%E5%90%8E%E7%AB%AF/2020/031203/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>java学习笔记，教程:廖雪峰官方网站;</p>
<p>本文是廖雪峰官网提供的一个Eclipse IDE的练习插件，可以非常方便地下载练习代码。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1.选择Help–》Install New Software，Add新增插件：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-bd6c06da87a55a58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>输入任意名称，如Java Practice Plugin，填入<a href="https://liaoxuefeng.gitee.io/learn-java-update-site/，然后Add：" target="_blank" rel="noopener">https://liaoxuefeng.gitee.io/learn-java-update-site/，然后Add：</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d7a4dea3e68589f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>在列表中选中Java Practice Feature，然后点击Next安装：</p>
<p>在安装过程中，由于插件代码没有数字签名，所以会弹出一个警告，选择Install anyway继续安装，安装成功后，根据提示重启Eclipse即可。</p>
<p>重启Eclipse后，选择菜单Window–》Show View–》Other，在弹出的对话框中选择Java–》Java Practice：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e01d4b9005c95c3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>然后点击打开，即可在Eclipse中看到Java Practice插件：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-f04e64f74e017ef0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>双击右侧hello.zip直接下载并导入到Eclipse中，即可打开对应练习；</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode-提高工作效率的有效插件</title>
    <url>/2019/08/08/IT/2019/080801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>程序员如何在日常工作中，更快更有效的提高工作效率-看下以下VSCode插件吧</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>vscode提高效率有效使用插件</strong></p>
<table>
<thead>
<tr>
<th>插件名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>wechat-snippet</td>
<td>这个插件主要的功能就是代码辅助，代码片段自动完成，可以作为上个插件的补充。</td>
</tr>
<tr>
<td>minapp</td>
<td>支持微信小程序标签、属性的智能补全，并且提示中包含文档内容（同时支持原生小程序、mpvue 和 wepy 框架，并提供 snippets）。</td>
</tr>
<tr>
<td>wxml</td>
<td>这款插件用于将wxml代码进行高亮显示，并且提供代码格式化的功能，可将代码格式化为较易阅读的样式。</td>
</tr>
<tr>
<td>vscode weapp api</td>
<td>为 VSCode 提供微信小程序 API 提示及代码片段 。</td>
</tr>
<tr>
<td>Auto Close Tag</td>
<td>自动闭合HTML标签 。</td>
</tr>
<tr>
<td>Auto Rename Tag</td>
<td>修改HTML标签时，自动修改匹配的标签 。</td>
</tr>
<tr>
<td>Color Highlight</td>
<td>颜色值在代码中高亮显示。</td>
</tr>
<tr>
<td>Color Picker</td>
<td>拾色器。</td>
</tr>
<tr>
<td>ESLint</td>
<td>ESLint插件，高亮提示 。</td>
</tr>
<tr>
<td>File Peek</td>
<td>根据路径字符串，快速定位到文件 。</td>
</tr>
<tr>
<td>vetur</td>
<td>目前比较好的Vue语法高亮 。</td>
</tr>
<tr>
<td>HTMLHintHTML</td>
<td>格式提示 。</td>
</tr>
<tr>
<td>JavaScript (ES6) code snippets</td>
<td>ES6语法代码段 。</td>
</tr>
<tr>
<td>markdownlint</td>
<td>Markdown格式提示 。</td>
</tr>
<tr>
<td>Prettify JSON</td>
<td>格式化JSON。</td>
</tr>
<tr>
<td>vscode-Document This</td>
<td>jsdoc注释生成。</td>
</tr>
<tr>
<td>vscode-eCSStractor</td>
<td>抽取页面的class，生成一个css文档。</td>
</tr>
<tr>
<td>vscode-CSS Peek</td>
<td>class名字定义跳转。（终于拥有dw cc的这个css定义跳转功能）。</td>
</tr>
<tr>
<td>vscode-Live Server</td>
<td>http服务器（相当于使用nodejs的http-server ）。</td>
</tr>
<tr>
<td>vscode-Change Case</td>
<td>变量名命名风格切换。（解决了命名风格不统一的工具）。</td>
</tr>
<tr>
<td>Bookmarks</td>
<td>添加行书签 。</td>
</tr>
<tr>
<td>Can I Use</td>
<td>HTML5、CSS3、SVG的浏览器兼容性检查。</td>
</tr>
<tr>
<td>Code Runner</td>
<td>运行选中代码段（支持大量语言，包括Node）。</td>
</tr>
<tr>
<td>CodeBing</td>
<td>在VSCode中弹出浏览器并搜索，可编辑搜索引擎 。</td>
</tr>
<tr>
<td>Document This</td>
<td>注释文档生成。</td>
</tr>
<tr>
<td>EditorConfig for VS Code</td>
<td>EditorConfig插件。</td>
</tr>
<tr>
<td>Emoji</td>
<td>在代码中输入emoji 。</td>
</tr>
<tr>
<td>Font-awesome codes for html</td>
<td>FontAwesome提示代码段 。</td>
</tr>
<tr>
<td>ftp-sync</td>
<td>同步文件到ftp。</td>
</tr>
<tr>
<td>Git Blame</td>
<td>在状态栏显示当前行的Git信息。</td>
</tr>
<tr>
<td>Git History(git log)</td>
<td>查看git log 。</td>
</tr>
<tr>
<td>GitLens</td>
<td>显示文件最近的commit和作者，显示当前行commit信息。</td>
</tr>
<tr>
<td>Guides</td>
<td>高亮缩进基准线 。</td>
</tr>
<tr>
<td>Gulp Snippets</td>
<td>Gulp代码段 。</td>
</tr>
<tr>
<td>HTML CSS Class Completion</td>
<td>CSS class提示。</td>
</tr>
<tr>
<td>HTML CSS Support</td>
<td>Css提示（支持vue）。</td>
</tr>
<tr>
<td>Indenticator</td>
<td>缩进高亮 。</td>
</tr>
<tr>
<td>language-stylus</td>
<td>Stylus语法高亮和提示。</td>
</tr>
<tr>
<td>Lodash</td>
<td>Lodash代码段。</td>
</tr>
<tr>
<td>MochaSnippets</td>
<td>Mocha代码段 。</td>
</tr>
<tr>
<td>Node modules resolve</td>
<td>快速导航到Node模块。</td>
</tr>
<tr>
<td>npm</td>
<td>运行npm命令 。</td>
</tr>
<tr>
<td>npm Intellisense</td>
<td>导入模块时，提示已安装模块名称 。</td>
</tr>
<tr>
<td>Output Colorizer</td>
<td>彩色输出信息。</td>
</tr>
<tr>
<td>Partial Diff</td>
<td>对比两段代码或文件 。</td>
</tr>
<tr>
<td>Path Autocomplete</td>
<td>路径完成提示。</td>
</tr>
<tr>
<td>Path Intellisense</td>
<td>另一个路径完成提示。</td>
</tr>
<tr>
<td>Project Manager</td>
<td>快速切换项目。</td>
</tr>
<tr>
<td>REST Client</td>
<td>发送REST风格的HTTP请求。</td>
</tr>
<tr>
<td>Settings Sync VSCode</td>
<td>设置同步到Gist。</td>
</tr>
<tr>
<td>String Manipulation</td>
<td>字符串转换处理（驼峰、大写开头、下划线等等） 。</td>
</tr>
<tr>
<td>Test Spec Generator</td>
<td>测试用例生成（支持chai、should、jasmine）。</td>
</tr>
<tr>
<td>TODO Parser</td>
<td>Todo管理 。</td>
</tr>
<tr>
<td>Version Lens</td>
<td>package.json文件显示模块当前版本和最新版本。</td>
</tr>
<tr>
<td>View Node Package</td>
<td>快速打开选中模块的主页和代码仓库。</td>
</tr>
<tr>
<td>vscode-icons</td>
<td>文件图标，方便定位文件 。</td>
</tr>
<tr>
<td>VSCode Great Icons</td>
<td>文件图标拓展 。</td>
</tr>
<tr>
<td>VueHelper</td>
<td>Vue2代码段（包括Vue2 api、vue-router2、vuex2）。</td>
</tr>
<tr>
<td>Quokka.js</td>
<td>可以即时显示js和ts的运行结果，想试验一些短代码的运行结果，但是又不想之后删除文件的时候可以用到。</td>
</tr>
<tr>
<td>codeRunner</td>
<td>可以运行C, C++, Java, JavaScript, PHP, Python, Perl, Perl 6, Ruby, Go, Lua, Groovy, PowerShell, BAT/CMD, BASH/SH, F# Script, F# (.NET Core), C# Script,等开发语言并支持局部执行。</td>
</tr>
<tr>
<td>IntelliSense for CSS class names</td>
<td>智能提示 css 的 class 名</td>
</tr>
<tr>
<td>Node.js Modules Intellisense</td>
<td>可以在导入语句中自动完成JavaScript / TypeScript模块。</td>
</tr>
<tr>
<td>vscode-faker</td>
<td>生成假数据，地址，电话，图片等等。</td>
</tr>
<tr>
<td>Regex Previewer</td>
<td>测试正则的插件</td>
</tr>
<tr>
<td>open in browser</td>
<td>快速在浏览器中打开html文件（安装后，使用快捷键Alt+B）。</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-注册流程及部分注意事项</title>
    <url>/2019/07/01/%E5%89%8D%E7%AB%AF/2019/070101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信小程序是一种新的开放能力，开发者可以快速地开发一个小程序。小程序可以在微信内被便捷地获取和传播，同时具有出色的使用体验。</p>
<h2 id="一-小程序注册到发布"><a href="#一-小程序注册到发布" class="headerlink" title="一.小程序注册到发布"></a>一.小程序注册到发布</h2><h3 id="1-注册微信小程序账号"><a href="#1-注册微信小程序账号" class="headerlink" title="1.注册微信小程序账号"></a>1.注册微信小程序账号</h3><p><a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1&token=&lang=zh_CN" target="_blank" rel="noopener">https://mp.weixin.qq.com/wxopen/waregister?action=step1&amp;token=&amp;lang=zh_CN</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3e7471412830458c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-登陆获取微信小程序的AppID"><a href="#2-登陆获取微信小程序的AppID" class="headerlink" title="2. 登陆获取微信小程序的AppID"></a>2. 登陆获取微信小程序的AppID</h3><p><a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">https://mp.weixin.qq.com/</a></p>
<p>在设置-基本设置中</p>
<h3 id="3-下载微信开发者工具"><a href="#3-下载微信开发者工具" class="headerlink" title="3. 下载微信开发者工具"></a>3. 下载微信开发者工具</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p>
<h3 id="4-创建项目"><a href="#4-创建项目" class="headerlink" title="4. 创建项目"></a>4. 创建项目</h3><p>选择项目，填写appid:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-63628bb859d62ee5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="5-手机预览调试"><a href="#5-手机预览调试" class="headerlink" title="5.手机预览调试"></a>5.手机预览调试</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-2147d456565da93c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>两种预览方式：</p>
<p>①. 扫描二维码；</p>
<p>②. 直接编译自动预览；</p>
<h3 id="6-代码上传"><a href="#6-代码上传" class="headerlink" title="6. 代码上传"></a>6. 代码上传</h3><p><img src="https://upload-images.jianshu.io/upload_images/12858218-286dc8a0d0893b1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>填写版本号，及项目备注；</p>
<h3 id="7-小程序发布"><a href="#7-小程序发布" class="headerlink" title="7.小程序发布"></a>7.小程序发布</h3><p>代码上传成功后登陆小程序公众平台提交审核发布：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-9fe0b2040fd4e8ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="8-注意事项"><a href="#8-注意事项" class="headerlink" title="8.注意事项"></a>8.注意事项</h3><p>开发前需配置https部署以及设置合法域名，并加入白名单：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d5208df52fc91e85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="二-小程序开发"><a href="#二-小程序开发" class="headerlink" title="二.小程序开发"></a>二.小程序开发</h2><h3 id="1-微信小程序项目结构及配置"><a href="#1-微信小程序项目结构及配置" class="headerlink" title="1.微信小程序项目结构及配置"></a>1.微信小程序项目结构及配置</h3><p>Page：存放页面的文件夹</p>
<p>App.js：小程序的脚本代码，所有的页面都可以调用这个js的代码；</p>
<p>app.json：小程序的全局配置（可以配置小程序的窗口  背景色，配置导航条样式，配置默认标题等，这个文件不可以添加注释）</p>
<p>app.wxss：小程序的公共样式。</p>
<p>其他：每一个小程序页面是由同路径下同名的四个不同后缀文件的组成，如：index.js、index.wxml、index.wxss、index.json。.js 是脚本文件，.json 是配置文件，.wxss 样式文件，.wxml 是页面文件。</p>
<p>index.js我们可以监听并处理页面的生命周期、处理数据，做数据交互等；</p>
<p>Index.wxml是页面的结构文件，相当于html，用于数据的展示等；</p>
<p>Index.wxss页面样式，相当于css，处理页面布局等；</p>
<p>Index.json是页面的配置文件，可以用于修改当前页面的导航栏的颜色标题等，如果不写则默认app.json中的数据；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-46baaa9ef2feb61a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="2-小程序的生命周期"><a href="#2-小程序的生命周期" class="headerlink" title="2. 小程序的生命周期"></a>2. 小程序的生命周期</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-d46108875f74c88c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-7aadd20a0b94f65e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>常用生命周期：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">    data:&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    onLoad:function(options)&#123;</span><br><span class="line">        // 页面初始化 options为页面跳转所带来的参数</span><br><span class="line">    &#125;,    </span><br><span class="line">    onReady:function()&#123;</span><br><span class="line">        // 页面渲染完成</span><br><span class="line">    &#125;,</span><br><span class="line">    onShow:function()&#123;</span><br><span class="line">        // 页面显示</span><br><span class="line">    &#125;,</span><br><span class="line">    onHide:function()&#123;</span><br><span class="line">        // 页面隐藏</span><br><span class="line">    &#125;,</span><br><span class="line">    onUnload:function()&#123;</span><br><span class="line">        // 页面关闭</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-小程序开发api处理"><a href="#3-小程序开发api处理" class="headerlink" title="3. 小程序开发api处理"></a>3. 小程序开发api处理</h3><p>①．封装小程序的request请求</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-22fe022dad3acbb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>使用es6的Promise属性将所有的请求封装好，方便之后请求的调用；</p>
<p>②．新建一个api.js用于存放所有的请求</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-026b778315de09e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>③. 调用接口</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-5da65b335cd89f2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-01a203fd73dc0223.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="4-授权登录并获取获取用户信息"><a href="#4-授权登录并获取获取用户信息" class="headerlink" title="4.授权登录并获取获取用户信息"></a>4.授权登录并获取获取用户信息</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  onLaunch: function() &#123;</span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: function(res) &#123;</span><br><span class="line">        if (res.code) &#123;</span><br><span class="line">        &#125; else &#123;console.log(“获取用户登录态失败！” + res.errMsg)&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>①.通过wx.login()请求得到code，然后通过</p>
<pre><code>https://api.weixin.qq.com/sns/jscode2session?appid=APPID&amp;secret=SECRET&amp;js_code=JSCODE&amp;grant_type=authorization_code</code></pre><p>去换取session_key和openid;</p>
<p>②.判断用户登录是否过期：</p>
<p>通过wx.checkSessio()请求来判断登录是否过期，失败可以重新调用wx.login()来重新登录;</p>
<p>③.用户授权登录：</p>
<p>wx.openSetting()这是以前授权的接口（通过弹框引导用户）；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ac2f69b655104018.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>现在授权是通过button来引导用户授权：</p>
<p>通过wx.getSetting()来判断获取当前用户的授权状态；</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-4d44296fccdbecdb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>通过判断scope这个属性来判断某个功能是否已授权：</p>
<p>授权注意事项：</p>
<p>[if !supportLists]1. [endif]注意判断小程序是否是最新版本：wx.canIUse(“button.open-type.getUserInfo”)；</p>
<p>④.获取用户信息</p>
<p>通过wx.login()登录,并通过用户授权之后，就可以通过wx.getUserInfo来获取用户信息了；</p>
<h3 id="5-支付调用"><a href="#5-支付调用" class="headerlink" title="5.支付调用"></a>5.支付调用</h3><p>官方文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&index=5" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&amp;index=5</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-3ae5b4611ab12a54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b566b5231be3958e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="6-小程序转发"><a href="#6-小程序转发" class="headerlink" title="6.小程序转发"></a>6.小程序转发</h3><p>官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html</a></p>
<p>①.onShareAppMessage():右上角转发配置，及转发后回调函数返回 shareTicket（获取更多转发信息的时候需要通过shareTicket）:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onShareAppMessage: function (res) &#123;</span><br><span class="line">    if (res.from === “button”) &#123;</span><br><span class="line">      // 可以通过这个来判断是否是使用按钮分享的</span><br><span class="line">    &#125;</span><br><span class="line">    return&#123;</span><br><span class="line">    title：分享的标题，</span><br><span class="line">    Path：“分享的页面路径”</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>页面内发起分享，使用button按钮：open-type=”share”;</p>
<p>②.wx.showSahreMenu()：显示转发按钮；</p>
<p>③.wx.hideSahreMenu():隐藏转发按钮；</p>
<p>④.wx.getShareInfo()；根据 shareTicket 获取已加密的群信息;</p>
<h2 id="三-注意事项"><a href="#三-注意事项" class="headerlink" title="三.注意事项"></a>三.注意事项</h2><p>1.post请求，json数据格式转换（“content-type”: “application/x-www-form-urlencoded”）；</p>
<p>2.微信小程序有自己的开发单位（rpx，大概1：2比例）；</p>
<p>3.样式文件不支持本地图片，可以使用网络图片，或者base64；</p>
<p>4.一个应用同时只能打开10个页面，当已经打开了10个页面之后，wx.navigateTo不能正常打开新页面。所以不需要的页面可以使用wx.redirectTo进行跳转；</p>
<p>5.小程序项目的文件大小不能超过2M；</p>
<p>6.底部需要导航栏的话，只能配置2-5个tab；跳转到tab页，需使用wx.switchTab，其他跳转方式无法使用；</p>
<p>7.小程序有并发限制，wx.request、wx.uploadFile、wx.downloadFile 的最大并发限制是 10 个。</p>
<p>所有为了保险起见，需要写个请求队列，如果并发量大于10，则需要等待请求。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>页面css布局神器-flex布局</title>
    <url>/2019/08/01/%E5%89%8D%E7%AB%AF/2019/080101/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>摘抄至大神阮一峰的网络日志，为了方便了解更多flex布局知识，将该网站内容收录到我的博客</p>
<p>网页布局（layout）是 CSS 的一个重点应用。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-ce99eda99fc2df08.gif?imageMogr2/auto-orient/strip" alt="我的博客图片"></p>
<p>布局的传统解决方案，基于<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box_model" target="_blank" rel="noopener">盒状模型</a>，依赖<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display" target="_blank" rel="noopener">display</a>属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position" target="_blank" rel="noopener">position</a>属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float" target="_blank" rel="noopener">float</a>属性。它对于那些特殊布局非常不方便，比如，<a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="noopener">垂直居中</a>就不容易实现。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-20f58c6f48826ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2009年，W3C 提出了一种新的方案—-Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-996680d1c692e486.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>Flex 布局将成为未来布局的首选方案。本文介绍它的语法：</p>
<h2 id="一-Flex-布局是什么？"><a href="#一-Flex-布局是什么？" class="headerlink" title="一.Flex 布局是什么？"></a>一.Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>
<p>任何一个容器都可以指定为 Flex 布局。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>行内元素也可以使用 Flex 布局。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Webkit 内核的浏览器，必须加上-webkit前缀。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display: -webkit-flex;/* Safari */</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。</p>
<h2 id="二-基本概念"><a href="#二-基本概念" class="headerlink" title="二.基本概念"></a>二.基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-beabf5209b3fdfd5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p>
<p>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p>
<h2 id="三-容器的属性"><a href="#三-容器的属性" class="headerlink" title="三.容器的属性"></a>三.容器的属性</h2><p>以下6个属性设置在容器上:</p>
<pre><code>flex-direction
flex-wrap
flex-flow
justify-content
align-items
align-content</code></pre><h3 id="3-1-flex-direction属性"><a href="#3-1-flex-direction属性" class="headerlink" title="3.1 flex-direction属性"></a>3.1 flex-direction属性</h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b9126a83c6d063ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>它可能有4个值:</p>
<pre><code>row（默认值）：主轴为水平方向，起点在左端。
row-reverse：主轴为水平方向，起点在右端。
column：主轴为垂直方向，起点在上沿。
column-reverse：主轴为垂直方向，起点在下沿。</code></pre><h3 id="3-2-flex-wrap属性"><a href="#3-2-flex-wrap属性" class="headerlink" title="3.2 flex-wrap属性"></a>3.2 flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-8711d457eb332d7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>它可能取三个值:</p>
<p>（1）nowrap（默认）：不换行:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-340d2a7ee99a0907.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>（2）wrap：换行，第一行在上方:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6c4f5eb3baade632.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>（3）wrap-reverse：换行，第一行在下方:</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-42ca592b104dd692.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="3-3-flex-flow属性"><a href="#3-3-flex-flow属性" class="headerlink" title="3.3 flex-flow属性"></a>3.3 flex-flow属性</h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    flex-flow: flex-direction || flex-wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-justify-content属性"><a href="#3-4-justify-content属性" class="headerlink" title="3.4 justify-content属性"></a>3.4 justify-content属性</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    justify-content: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-31743a65720f83b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右：</p>
<pre><code>flex-start（默认值）：左对齐；
flex-end：右对齐；
center： 居中；
space-between：两端对齐，项目间的间隔都相等；
space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍；</code></pre><h3 id="3-5-align-items属性"><a href="#3-5-align-items属性" class="headerlink" title="3.5 align-items属性"></a>3.5 align-items属性</h3><p>align-items属性定义项目在交叉轴上如何对齐。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    align-items: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-aa0abef65a39d6ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下：</p>
<pre><code>flex-start：交叉轴的起点对齐;
flex-end：交叉轴的终点对齐;
center：交叉轴的中点对齐;
baseline: 项目的第一行文字的基线对齐;
stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度;</code></pre><h3 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h3><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    align-content: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-c0403117313d6d41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>该属性可能取6个值：</p>
<pre><code>flex-start：与交叉轴的起点对齐；
flex-end：与交叉轴的终点对齐；
center：与交叉轴的中点对齐；
space-between：与交叉轴两端对齐，轴线之间的间隔平均分布；
space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍；
stretch（默认值）：轴线占满整个交叉轴；</code></pre><h2 id="四-项目的属性"><a href="#四-项目的属性" class="headerlink" title="四.项目的属性"></a>四.项目的属性</h2><p>以下6个属性设置在项目上:</p>
<pre><code>order
flex-grow
flex-shrink
flex-basis
flex
align-self</code></pre><h3 id="4-1-order属性"><a href="#4-1-order属性" class="headerlink" title="4.1 order属性"></a>4.1 order属性</h3><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    order: 1; /* 类型：integer */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-2cae1400640168e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h3 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h3><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    flex-grow: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-e8ccbd233c8363be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>
<h3 id="4-3-flex-shrink属性"><a href="#4-3-flex-shrink属性" class="headerlink" title="4.3 flex-shrink属性"></a>4.3 flex-shrink属性</h3><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    flex-shrink: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-86094dc19d0bef61.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>
<p>负值对该属性无效。</p>
<h3 id="4-4-flex-basis属性"><a href="#4-4-flex-basis属性" class="headerlink" title="4.4 flex-basis属性"></a>4.4 flex-basis属性</h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    flex-basis: 350px | auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p>
<h3 id="4-5-flex属性"><a href="#4-5-flex属性" class="headerlink" title="4.5 flex属性"></a>4.5 flex属性</h3><p>flex属性是flex-grow,flex-shrink和flex-basis的简写，默认值为0 1 auto。后两个属性可选:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    flex: none | [ &lt;&quot;flex-grow&quot;&gt; &lt;&quot;flex-shrink&quot;&gt;? || &lt;&quot;flex-basis&quot;&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>该属性有两个快捷值：auto(1 1 auto) 和 none (0 0 auto)。</p>
<p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>
<h3 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h3><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    align-self: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-1e269ee6f319c60b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>
<p>注：<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool" target="_blank" rel="noopener">摘抄至阮一峰的网络日志</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序插件-分类demo</title>
    <url>/2019/09/18/%E5%89%8D%E7%AB%AF/2019/091801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>一款实用的左右分类联动菜单-（即可左联动，也可右联动），收藏一下</p>
<h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-32cfdf040923c300.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class=&quot;menuLeft&quot;&gt;</span><br><span class="line">    &lt;scroll-view class=&quot;leftScroll&quot; scroll-x=&quot;true&quot; scroll-y=&quot;true&quot; scroll-with-animation=&quot;true&quot; scroll-top=&quot;&#123;&#123;leftMenuTop&#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;text class=&quot;menuItem &#123;&#123;index === currentActiveIndex ? &apos;menuActive&apos; : &apos;&apos;&#125;&#125;&quot; wx:for=&quot;&#123;&#123;navList&#125;&#125;&quot; wx:key=&quot;unique&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; id=&quot;&#123;&#123;index&#125;&#125;&quot; catchtap=&quot;changeMenu&quot;&gt;&#123;&#123;item.c_name&#125;&#125;&lt;/text&gt;</span><br><span class="line">    &lt;/scroll-view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;menuRight&quot;&gt;</span><br><span class="line">    &lt;scroll-view class=&quot;rightScroll&quot; scroll-y=&quot;true&quot; scroll-with-animation=&quot;true&quot; scroll-top=&quot;&#123;&#123;rightProTop&#125;&#125;&quot; bindscroll=&quot;scroll&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;pro-item&quot; wx:for=&quot;&#123;&#123;navList&#125;&#125;&quot; wx:key=&quot;unique&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;classifyName&quot;&gt;&#123;&#123;item.c_name&#125;&#125;&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;classifyListBox flex ac fwrap&quot;&gt;</span><br><span class="line">                &lt;view class=&quot;classifyList&quot; wx:for-item=&quot;items&quot; wx:for=&quot;&#123;&#123;item.list&#125;&#125;&quot; wx:key=&quot;unique&quot;&gt;</span><br><span class="line">                    &lt;image class=&quot;goodsImg&quot; src=&quot;&#123;&#123;items.url&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">                    &lt;view class=&quot;goodsName&quot;&gt;&#123;&#123;items.goodsName&#125;&#125;&lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/scroll-view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<h2 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">page&#123;background-color: #f0f0f0;&#125;</span><br><span class="line">.menuLeft&#123;width: 180rpx;height: 100%;border-right: 1px solid #f5f5f5;position: fixed;background-color: #f5f5f5;top: 0;left: 0;&#125;</span><br><span class="line">.leftScroll&#123;width: 100%;height: 100%;&#125;</span><br><span class="line">.menuItem&#123;font-size: 26rpx;box-sizing: border-box;height: 100rpx;line-height: 100rpx;width: 180rpx;background-color: #fff;display: block;border-bottom: 1px solid #f5f5f5;position: relative;z-index: 10;text-align: center;&#125;</span><br><span class="line">.menuActive&#123;border-left: 10rpx solid #fd6631;background-color: #f0f0f0;&#125;</span><br><span class="line">.menuRight&#123;width: 570rpx;box-sizing: border-box;padding-left: 20rpx;padding-right: 20rpx;height: 100%;position: fixed;top: 0;right: 0;&#125;</span><br><span class="line">.rightScroll&#123;height: 100%;box-sizing: border-box;&#125;</span><br><span class="line">.classifyName&#123;height: 65rpx;line-height: 65rpx;font-size: 28rpx;font-weight: 700;&#125;</span><br><span class="line">.classifyListBox&#123;background-color: #fff;overflow: hidden;color: #fff;box-sizing: border-box;padding: 20rpx 0 0 0;&#125;</span><br><span class="line">.classifyList&#123;width: 170rpx;overflow: hidden;margin-right: 10rpx;float: left;&#125;</span><br><span class="line">.classifyListBox .classifyList:nth-child(3n)&#123;margin-right: 0rpx;&#125;</span><br><span class="line">.goodsImg&#123;display: block;width: 100rpx;height: 100rpx;margin: 0 auto;margin-bottom: 15rpx;&#125;</span><br><span class="line">.goodsName&#123;width: 100%;overflow: hidden;box-sizing: border-box;height: 42rpx;line-height: 42rpx;text-align: center;font-size: 24rpx;text-overflow: ellipsis;white-space: nowrap;color: #333;margin-bottom: 20rpx;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// pages/classify/classify.js</span><br><span class="line">var app = getApp();</span><br><span class="line">//声明全局变量</span><br><span class="line">let proListToTop = [],</span><br><span class="line">    menuToTop = [],</span><br><span class="line">    MENU = 0,</span><br><span class="line">    windowHeight, timeoutId;</span><br><span class="line">// MENU ==&gt; 是否为点击左侧进行滚动的，如果是，则不需要再次设置左侧的激活状态</span><br><span class="line">Page(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        staticImg: app.globalData.staticImg,</span><br><span class="line">        currentActiveIndex: 0,</span><br><span class="line">        // 接口返回的商品数组</span><br><span class="line">        navList: [&#123;</span><br><span class="line">            c_id: &quot;01&quot;,</span><br><span class="line">            c_name: &quot;餐饮服务&quot;,</span><br><span class="line">            list: [&#123;</span><br><span class="line">                id: 1,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            c_id: &quot;07&quot;,</span><br><span class="line">            c_name: &quot;医院药店&quot;,</span><br><span class="line">            list: [&#123;</span><br><span class="line">                id: 1,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 2,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 3,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 4,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 5,</span><br><span class="line">                url: &quot;/images/1.jpg&quot;,</span><br><span class="line">                goodsName: &quot;分类&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    onLoad: function (e) &#123;</span><br><span class="line">        // 确保页面数据已经刷新完毕~</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">            this.getAllRects()</span><br><span class="line">        &#125;, 20)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    changeMenu(e) &#123;</span><br><span class="line">        console.log(proListToTop);</span><br><span class="line">        // 改变左侧tab栏操作</span><br><span class="line">        if (Number(e.target.id) === this.data.currentActiveIndex) return</span><br><span class="line">        MENU = 1</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">            currentActiveIndex: Number(e.target.id),</span><br><span class="line">            rightProTop: proListToTop[Number(e.target.id)]</span><br><span class="line">        &#125;)</span><br><span class="line">        this.setMenuAnimation(Number(e.target.id))</span><br><span class="line">    &#125;,</span><br><span class="line">    scroll(e) &#123;</span><br><span class="line">        console.log(e);</span><br><span class="line">        for (let i = 0; i &lt; proListToTop.length; i++) &#123;</span><br><span class="line">            if (e.detail.scrollTop &lt; proListToTop[i] &amp;&amp; i !== 0 &amp;&amp; e.detail.scrollTop &gt; proListToTop[i - 1]) &#123;</span><br><span class="line">                return this.setDis(i)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 找不到匹配项，默认显示第一个数据</span><br><span class="line">        if (!MENU) &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                currentActiveIndex: 0</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        MENU = 0</span><br><span class="line">    &#125;,</span><br><span class="line">    setDis(i) &#123;</span><br><span class="line">        // 设置左侧menu栏的选中状态</span><br><span class="line">        if (i !== this.data.currentActiveIndex + 1 &amp;&amp; !MENU) &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                currentActiveIndex: i - 1</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        MENU = 0</span><br><span class="line">        this.setMenuAnimation(i)</span><br><span class="line">    &#125;,</span><br><span class="line">    setMenuAnimation(i) &#123;</span><br><span class="line">        // 设置动画，使menu滚动到指定位置。</span><br><span class="line">        let self = this</span><br><span class="line">        console.log(33)</span><br><span class="line">        if (menuToTop[i].animate) &#123;</span><br><span class="line">            console.log(11111)</span><br><span class="line">            // 节流操作</span><br><span class="line">            if (timeoutId) &#123;</span><br><span class="line">                clearTimeout(timeoutId)</span><br><span class="line">            &#125;</span><br><span class="line">            timeoutId = setTimeout(() =&gt; &#123;</span><br><span class="line">                console.log(12138)</span><br><span class="line">                self.setData(&#123;</span><br><span class="line">                    leftMenuTop: (menuToTop[i].top - windowHeight)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;, 50)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(11)</span><br><span class="line">            if (this.data.leftMenuTop === 0) return</span><br><span class="line">            console.log(22)</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                leftMenuTop: 0</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getActiveReacts() &#123;</span><br><span class="line">        wx.createSelectorQuery().selectAll(&quot;.menuActive&quot;).boundingClientRect(function (rects) &#123;</span><br><span class="line">            return rects[0].top</span><br><span class="line">        &#125;).exec()</span><br><span class="line">    &#125;,</span><br><span class="line">    getAllRects() &#123;</span><br><span class="line"></span><br><span class="line">        // 获取商品数组的位置信息</span><br><span class="line">        wx.createSelectorQuery().selectAll(&quot;.pro-item&quot;).boundingClientRect(function (rects) &#123;</span><br><span class="line">            rects.forEach(function (rect) &#123;</span><br><span class="line">                console.log(rect)</span><br><span class="line">                // 这里减去44是根据你的滚动区域距离头部的高度，如果没有高度，可以将其删去</span><br><span class="line">                // proListToTop.push(rect.top - 44)</span><br><span class="line">                proListToTop.push(rect.top)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;).exec()</span><br><span class="line"></span><br><span class="line">        // 获取menu数组的位置信息</span><br><span class="line">        wx.createSelectorQuery().selectAll(&quot;.menuItem&quot;).boundingClientRect(function (rects) &#123;</span><br><span class="line">            wx.getSystemInfo(&#123;</span><br><span class="line">                success: function (res) &#123;</span><br><span class="line">                    console.log(res);</span><br><span class="line">                    windowHeight = res.windowHeight / 2</span><br><span class="line">                    // console.log(windowHeight)</span><br><span class="line">                    rects.forEach(function (rect) &#123;</span><br><span class="line">                        menuToTop.push(&#123;</span><br><span class="line">                            top: rect.top,</span><br><span class="line">                            animate: rect.top &gt; windowHeight</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;).exec()</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取系统的高度信息</span><br><span class="line">    getSystemInfo() &#123;</span><br><span class="line">        let self = this</span><br><span class="line">        wx.getSystemInfo(&#123;</span><br><span class="line">            success: function (res) &#123;</span><br><span class="line">                windowHeight = res.windowHeight / 2</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>项目案例下载地址：<a href="https://gitee.com/caseAddress/wxminiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/wxminiDemo.git</a> –其他小程序插件共用地址，持续更新中</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-如何直接上传文件到腾讯云</title>
    <url>/2019/12/28/%E5%89%8D%E7%AB%AF/2019/122801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在开发小程序的过程中有多处页面使用了图片上传的功能，为了减少服务器的压力，建议还是上传到腾讯云，阿里云或者千牛云等其他平台上来存储我们的图片。</p>
<h2 id="一-背景"><a href="#一-背景" class="headerlink" title="一.背景"></a>一.背景</h2><p>当使用小程序上传文件时，服务器接口需要对上传文件进行处理，如果同一时间访问量大的话，后台要先处理请求，在把上传的文件存放到指定的文件夹里，在返回给客服端结果，处理的速度相对是比较慢的，用户等待的时间也就比较长，体验感不好。</p>
<p>如果我们在上传文件时直接上传到云服务器（腾讯云，阿里云，七牛云等）上，我们就可以直接把这个上传返回的可访问的文件地址在前端拿到，然后后端接收直接存入数据库就行，处理的时间就大大的减少了。</p>
<h2 id="二-目录结构"><a href="#二-目录结构" class="headerlink" title="二.目录结构"></a>二.目录结构</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-a86abf98a348d04b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="三-主要文件"><a href="#三-主要文件" class="headerlink" title="三.主要文件"></a>三.主要文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config.js----配置腾讯云信息；</span><br><span class="line">cos-wx-sdk-v5.js----微信小程序SDK 腾讯云对象存储服务；</span><br><span class="line">sdk.js----封装的返回文件路径接口；</span><br><span class="line">util.js----更改文件名时用于获取时间戳；</span><br><span class="line">uploadToCos文件夹----测试demo:上传图片至腾讯云；</span><br></pre></td></tr></table></figure>

<h2 id="四-uploadToCos效果图"><a href="#四-uploadToCos效果图" class="headerlink" title="四.uploadToCos效果图"></a>四.uploadToCos效果图</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-42f2bfd938bd2847.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="五-实现步骤"><a href="#五-实现步骤" class="headerlink" title="五.实现步骤"></a>五.实现步骤</h2><h3 id="1-config-js"><a href="#1-config-js" class="headerlink" title="1.config.js"></a>1.config.js</h3><p>–配置腾讯云信息;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    Bucket: &quot;**********&quot;,</span><br><span class="line">    Region: &quot;ap-******&quot;,</span><br><span class="line">    SecretId: &quot;*******************&quot;,</span><br><span class="line">    SecretKey: &quot;********************&quot;</span><br><span class="line">&#125;</span><br><span class="line">module.exports = config;</span><br></pre></td></tr></table></figure>

<p>注意将*替换成自己从腾讯云获取的配置信息（配置信息最好通过后台请求接口返回在放入config.js）。</p>
<p>腾讯云对象存储：<a href="https://cloud.tencent.com/document/product/436/7751" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/436/7751</a></p>
<h3 id="2-cos-wx-sdk-v5-js"><a href="#2-cos-wx-sdk-v5-js" class="headerlink" title="2.cos-wx-sdk-v5.js"></a>2.cos-wx-sdk-v5.js</h3><p>–微信小程序SDK for 腾讯云对象存储服务;</p>
<p>cos-wx-sdk-v5快速入门：<a href="https://www.npmjs.com/package/cos-wx-sdk-v5" target="_blank" rel="noopener">https://www.npmjs.com/package/cos-wx-sdk-v5</a></p>
<h3 id="3-sdk-js"><a href="#3-sdk-js" class="headerlink" title="3.sdk.js"></a>3.sdk.js</h3><p>–封装的返回文件路径接口;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var util = require(&quot;../utils/util.js&quot;);</span><br><span class="line">var COS = require(&quot;../utils/cos-wx-sdk-v5.js&quot;);</span><br><span class="line">var config = require(&quot;../utils/config.js&quot;);</span><br><span class="line">var cos = new COS(&#123;</span><br><span class="line">    getAuthorization: function (params, callback) &#123;//获取签名 必填参数</span><br><span class="line">        // 方法一（推荐）服务器提供计算签名的接口</span><br><span class="line">        // wx.request(&#123;</span><br><span class="line">        //     url: &quot;SIGN_SERVER_URL&quot;,</span><br><span class="line">        //     data: &#123;</span><br><span class="line">        //         Method: params.Method,</span><br><span class="line">        //         Key: params.Key</span><br><span class="line">        //     &#125;,</span><br><span class="line">        //     dataType: &quot;text&quot;,</span><br><span class="line">        //     success: function (result) &#123;</span><br><span class="line">        //         callback(result.data);</span><br><span class="line">        //     &#125;</span><br><span class="line">        // &#125;);</span><br><span class="line">        // 方法二（适用于前端调试）</span><br><span class="line">        var authorization = COS.getAuthorization(&#123;</span><br><span class="line">            SecretId: config.SecretId,</span><br><span class="line">            SecretKey: config.SecretKey,</span><br><span class="line">            Method: params.Method,</span><br><span class="line">            Key: params.Key</span><br><span class="line">        &#125;);</span><br><span class="line">        callback(authorization);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function sdk(filePath) &#123;</span><br><span class="line">    return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        let nowTime = util.formatTime(new Date());</span><br><span class="line">        // 上传的文件名</span><br><span class="line">        let Key = &quot;album/&quot; + nowTime + &quot;/&quot; + filePath.substr(filePath.lastIndexOf(&quot;/&quot;) + 1);</span><br><span class="line">        cos.postObject(&#123;</span><br><span class="line">            Bucket: config.Bucket,</span><br><span class="line">            Region: config.Region,</span><br><span class="line">            Key: Key,</span><br><span class="line">            FilePath: filePath,</span><br><span class="line">            onProgress: function (info) &#123;</span><br><span class="line">                // 上传进度</span><br><span class="line">                // console.log(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, function (err, data) &#123;</span><br><span class="line">            // console.log(err);</span><br><span class="line">            // console.log(data);</span><br><span class="line">            let res;</span><br><span class="line">            if (data &amp;&amp; data.headers.Location) &#123;</span><br><span class="line">                res =&#123;code:0,data: data.headers.Location&#125;</span><br><span class="line">                resolve(res);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                // 记得更换config里的腾讯云配置，否则就会执行下面代码</span><br><span class="line">                res = &#123;code: 400,msg: &quot;文件上传失败，请重试&quot;&#125;</span><br><span class="line">                resolve(res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    sdk</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-util-js"><a href="#4-util-js" class="headerlink" title="4.util.js"></a>4.util.js</h3><p>–更改文件名时用于获取时间戳;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const formatTime = date =&gt; &#123;</span><br><span class="line">    const year = date.getFullYear()</span><br><span class="line">    const month = date.getMonth() + 1</span><br><span class="line">    const day = date.getDate()</span><br><span class="line">    const hour = date.getHours()</span><br><span class="line">    const minute = date.getMinutes()</span><br><span class="line">    const second = date.getSeconds()</span><br><span class="line"></span><br><span class="line">    return [year, month, day].map(formatNumber).join(&apos;/&apos;)</span><br><span class="line">    // + &apos; &apos; + [hour, minute, second].map(formatNumber).join(&apos;:&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const formatNumber = n =&gt; &#123;</span><br><span class="line">    n = n.toString()</span><br><span class="line">    return n[1] ? n : &apos;0&apos; + n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 消息提示</span><br><span class="line">function showErrorToast(msg) &#123;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">        title: msg,</span><br><span class="line">        icon: &apos;loading&apos;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">// 错误提示</span><br><span class="line">function showErrorModal(msg) &#123;</span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">        title: &apos;温馨提示&apos;,</span><br><span class="line">        content: msg,</span><br><span class="line">        showCancel: false</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    formatTime,</span><br><span class="line">    showErrorToast,</span><br><span class="line">    showErrorModal,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-uploadToCos文件夹"><a href="#5-uploadToCos文件夹" class="headerlink" title="5.uploadToCos文件夹"></a>5.uploadToCos文件夹</h3><p><strong>html:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class=&quot;videoBox&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;space&quot;&gt;&lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;videoBody flex ac&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;uploadBox&quot;&gt;</span><br><span class="line">            &lt;image class=&quot;imgBtn&quot; src=&quot;/images/nestEdgeImg.jpg&quot; mode=&quot;aspectFill&quot; bindtap=&quot;chooseWxImage&quot; wx:if=&quot;&#123;&#123;imgUrl == &apos;&apos;&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;image class=&quot;imgBtn&quot; src=&quot;&#123;&#123;imgUrl&#125;&#125;&quot; mode=&quot;aspectFill&quot; bindtap=&quot;imgPreview&quot; wx:else&gt;&lt;/image&gt;</span><br><span class="line">            &lt;view class=&quot;delImg&quot; wx:if=&quot;&#123;&#123;imgUrl != &apos;&apos;&#125;&#125;&quot; data-type=&quot;img&quot; bindtap=&quot;delUpload&quot;&gt;</span><br><span class="line">                &lt;image src=&quot;/images/nestEdgeClose.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;uploadBox&quot;&gt;</span><br><span class="line">            &lt;image class=&quot;imgBtn&quot; src=&quot;/images/nestEdgeVideo.jpg&quot; mode=&quot;aspectFill&quot; bindtap=&quot;chooseWxVideo&quot; wx:if=&quot;&#123;&#123;videoUrl == &apos;&apos;&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;video src=&quot;&#123;&#123;videoUrl&#125;&#125;&quot; poster=&quot;&#123;&#123;imgUrl&#125;&#125;&quot; wx:else&gt;&lt;/video&gt;</span><br><span class="line">            &lt;view class=&quot;delImg&quot; wx:if=&quot;&#123;&#123;videoUrl != &apos;&apos;&#125;&#125;&quot; data-type=&quot;video&quot; bindtap=&quot;delUpload&quot;&gt;</span><br><span class="line">                &lt;image src=&quot;/images/nestEdgeClose.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;prompt f24 c888&quot;&gt;提示：点击上传图片或视频&lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;videoFoot&quot;&gt;</span><br><span class="line">        &lt;button class=&quot;btnMain&quot; bindtap=&quot;completeUpload&quot;&gt;完成&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<p><strong>css：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.videoBox&#123;width: 100%;overflow: hidden;&#125;</span><br><span class="line">.videoBox .videoBody&#123;padding: 40rpx;&#125;</span><br><span class="line">.videoBox .videoBody .uploadBox&#123;width: 210rpx; height: 210rpx; border: 1px dashed #cecece; border-radius: 10rpx; margin-right: 30rpx;position: relative;&#125;</span><br><span class="line">.videoBox .videoBody .uploadBox .imgBtn&#123;width: 100%; height: 100%;&#125;</span><br><span class="line">.videoBox .videoBody .uploadBox .delImg&#123;position: absolute;top: -20rpx;right: -20rpx;&#125;</span><br><span class="line">.videoBox .videoBody .uploadBox .delImg image&#123;width: 40rpx;height: 40rpx;&#125;</span><br><span class="line">.videoBox .videoBody .uploadBox video&#123;width: 100%; height: 100%;&#125;</span><br><span class="line">.videoBox .prompt&#123;padding: 0 40rpx;&#125;</span><br><span class="line">.videoBox .videoFoot&#123;margin-top: 120rpx;&#125;</span><br><span class="line">.videoBox .videoFoot button&#123;width: 92%; margin: 0 4%;height: 90rpx;line-height: 90rpx;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>js：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var util = require(&quot;../../utils/util.js&quot;);</span><br><span class="line">var sdk = require(&quot;../../utils/sdk.js&quot;);</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 页面的初始数据</span><br><span class="line">     * imgUrl：视频封面</span><br><span class="line">     * videoUrl：视频路径</span><br><span class="line">     */</span><br><span class="line">    data: &#123;</span><br><span class="line">        imgUrl: &quot;&quot;,</span><br><span class="line">        videoUrl: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 图片本地路径</span><br><span class="line">    chooseWxImage: function (type) &#123;</span><br><span class="line">        let that = this;</span><br><span class="line">        wx.chooseImage(&#123;</span><br><span class="line">            count: 1, // 最多可以选择的图片张数，默认9</span><br><span class="line">            sizeType: [&quot;original&quot;, &quot;compressed&quot;], // original 原图，compressed 压缩图，默认二者都有</span><br><span class="line">            sourceType: [&quot;album&quot;, &quot;camera&quot;], // album 从相册选图，camera 使用相机，默认二者都有</span><br><span class="line">            success: function (res) &#123;</span><br><span class="line">                let filePath = res.tempFilePaths[0];</span><br><span class="line">                wx.showLoading(&#123; title: &quot;图片上传中&quot;, mask: true &#125;);</span><br><span class="line">                sdk.sdk(filePath).then(res =&gt; &#123;</span><br><span class="line">                    console.log(res);</span><br><span class="line">                    if (res.code == 0) &#123;</span><br><span class="line">                        wx.hideLoading();</span><br><span class="line">                        that.setData(&#123;</span><br><span class="line">                            imgUrl: res.data</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        wx.hideLoading();</span><br><span class="line">                        wx.showModal(&#123;</span><br><span class="line">                            title: &quot;温馨提示&quot;,</span><br><span class="line">                            content: res.msg,</span><br><span class="line">                            showCancel: false,</span><br><span class="line">                            success: function () &#123;</span><br><span class="line">                                that.setData(&#123;</span><br><span class="line">                                    imgUrl: &quot;&quot;</span><br><span class="line">                                &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //图片预览</span><br><span class="line">    imgPreview: function (event) &#123;</span><br><span class="line">        let that = this</span><br><span class="line">            , src = this.data.imgUrl</span><br><span class="line">            , imgList = [src];//获取data-list</span><br><span class="line">        //图片预览</span><br><span class="line">        wx.previewImage(&#123;</span><br><span class="line">            current: src, // 当前显示图片的http链接</span><br><span class="line">            urls: imgList // 需要预览的图片http链接列表</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 添加视频</span><br><span class="line">    chooseWxVideo: function () &#123;</span><br><span class="line">        let that = this;</span><br><span class="line">        wx.chooseVideo(&#123;</span><br><span class="line">            sourceType: [&quot;album&quot;, &quot;camera&quot;],</span><br><span class="line">            maxDuration: 60,</span><br><span class="line">            camera: &quot;back&quot;,</span><br><span class="line">            success(res) &#123;</span><br><span class="line">                let filePath = res.tempFilePath;</span><br><span class="line">                wx.showLoading(&#123; title: &quot;视频上传中&quot;, mask: true &#125;);</span><br><span class="line">                sdk.sdk(filePath).then(res =&gt; &#123;</span><br><span class="line">                    console.log(res);</span><br><span class="line">                    if (res.code == 0) &#123;</span><br><span class="line">                        wx.hideLoading();</span><br><span class="line">                        that.setData(&#123;</span><br><span class="line">                            videoUrl: res.data</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        wx.hideLoading();</span><br><span class="line">                        wx.showModal(&#123;</span><br><span class="line">                            title: &quot;温馨提示&quot;,</span><br><span class="line">                            content: res.msg,</span><br><span class="line">                            showCancel: false,</span><br><span class="line">                            success: function () &#123;</span><br><span class="line">                                that.setData(&#123;</span><br><span class="line">                                    videoUrl: &quot;&quot;</span><br><span class="line">                                &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除图片或视频</span><br><span class="line">    delUpload: function (e) &#123;</span><br><span class="line">        console.log(e.currentTarget.dataset.type);</span><br><span class="line">        let that = this</span><br><span class="line">            , type = e.currentTarget.dataset.type;</span><br><span class="line">        if (type == &quot;img&quot;) &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                imgUrl: &quot;&quot;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else if (type == &quot;video&quot;) &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                videoUrl: &quot;&quot;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            util.showErrorModal(&quot;删除失败，请重试！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 完成视频编辑</span><br><span class="line">    completeUpload: function () &#123;</span><br><span class="line">        let that = this</span><br><span class="line">            , imgUrl = this.data.imgUrl</span><br><span class="line">            , videoUrl = this.data.videoUrl;</span><br><span class="line">        if (imgUrl == &quot;&quot;) &#123;</span><br><span class="line">            util.showErrorModal(&quot;请上传视频封面！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (videoUrl == &quot;&quot;) &#123;</span><br><span class="line">            util.showErrorModal(&quot;请上传视频！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        wx.showModal(&#123;</span><br><span class="line">            title: &quot;温馨提示&quot;,</span><br><span class="line">            content: &quot;请求成功！&quot;,</span><br><span class="line">            showCancel: false,</span><br><span class="line">            success: function () &#123;</span><br><span class="line">                wx.redirectTo(&#123;</span><br><span class="line">                    url: &quot;/pages/index/index&quot;,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>项目案例下载地址：<a href="https://gitee.com/caseAddress/wxminiDemo.git" target="_blank" rel="noopener">https://gitee.com/caseAddress/wxminiDemo.git</a> –其他小程序插件共用地址，持续更新中  </p>
<p>参考文章：<a href="https://github.com/piscium2010/cos-wx-upload-file" target="_blank" rel="noopener">https://github.com/piscium2010/cos-wx-upload-file</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>js获取用户访问IP，城市，以及获取当前操作浏览器</title>
    <url>/2019/12/18/%E5%89%8D%E7%AB%AF/2019/121801/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在管理后台，异地登录和对用户常用浏览器做数据分析时，常常会用到访问IP，当前操作浏览器等，因此本文主要介绍怎么获取IP,城市以及浏览器</p>
<h2 id="1-引入搜狐IP地址查询接口"><a href="#1-引入搜狐IP地址查询接口" class="headerlink" title="1.引入搜狐IP地址查询接口"></a>1.引入搜狐IP地址查询接口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://pv.sohu.com/cityjson?ie=utf-8&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-写入获取当前操作浏览器函数"><a href="#2-写入获取当前操作浏览器函数" class="headerlink" title="2.写入获取当前操作浏览器函数"></a>2.写入获取当前操作浏览器函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function getBrowserInfo() &#123;</span><br><span class="line">    var agent = navigator.userAgent.toLowerCase();</span><br><span class="line">    var regStr_ie = /msie [\d.]+;/gi;</span><br><span class="line">    var regStr_ff = /firefox\/[\d.]+/gi</span><br><span class="line">    var regStr_chrome = /chrome\/[\d.]+/gi;</span><br><span class="line">    var regStr_saf = /safari\/[\d.]+/gi;</span><br><span class="line">    //IE</span><br><span class="line">    if (agent.indexOf(&quot;msie&quot;) &gt; 0) &#123;</span><br><span class="line">      return agent.match(regStr_ie);</span><br><span class="line">    &#125;</span><br><span class="line">    //firefox</span><br><span class="line">    if (agent.indexOf(&quot;firefox&quot;) &gt; 0) &#123;</span><br><span class="line">      return agent.match(regStr_ff);</span><br><span class="line">    &#125;</span><br><span class="line">    //Chrome</span><br><span class="line">    if (agent.indexOf(&quot;chrome&quot;) &gt; 0) &#123;</span><br><span class="line">      return agent.match(regStr_chrome);</span><br><span class="line">    &#125;</span><br><span class="line">    //Safari</span><br><span class="line">    if (agent.indexOf(&quot;safari&quot;) &gt; 0 &amp;&amp; agent.indexOf(&quot;chrome&quot;) &lt; 0) &#123;</span><br><span class="line">      return agent.match(regStr_saf);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 获取访问IP、地区、、当前操作浏览器</span><br><span class="line">var BrowserMatch = &#123;</span><br><span class="line">    init: function () &#123;</span><br><span class="line">        this.browser = this.getBrowser().browser || &quot;未知浏览器&quot;;  //获取浏览器名</span><br><span class="line">        this.version = this.getBrowser().version || &quot;未知浏览器版本号&quot;;  //获取浏览器版本</span><br><span class="line">        this.OS = this.getOS() + &quot; &quot; + this.getDigits() || &quot;未知操作系统&quot;; //系统版本号 </span><br><span class="line">    &#125;,</span><br><span class="line">    getOS: function () &#123;  //判断所处操作系统</span><br><span class="line">        var sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class="line">        var isWin = (navigator.platform == &quot;Win32&quot;) || (navigator.platform == &quot;Win64&quot;) || (navigator.platform == &quot;wow64&quot;);</span><br><span class="line">        var isMac = (navigator.platform == &quot;Mac68K&quot;) || (navigator.platform == &quot;MacPPC&quot;) || (navigator.platform == &quot;Macintosh&quot;) || (navigator.platform == &quot;MacIntel&quot;);</span><br><span class="line">        if (isMac) return &quot;Mac&quot;;</span><br><span class="line">        var isUnix = (navigator.platform == &quot;X11&quot;) &amp;&amp; !isWin &amp;&amp; !isMac;</span><br><span class="line">        if (isUnix) return &quot;Unix&quot;;</span><br><span class="line">        var isLinux = (String(navigator.platform).indexOf(&quot;Linux&quot;) &gt; -1);</span><br><span class="line">        var bIsAndroid = sUserAgent.toLowerCase().match(/android/i) == &quot;android&quot;;</span><br><span class="line">        if (isLinux) &#123;</span><br><span class="line">            if (bIsAndroid) return &quot;Android&quot;;</span><br><span class="line">            else return &quot;Linux&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (isWin) &#123;</span><br><span class="line">            var isWin2K = sUserAgent.indexOf(&quot;Windows nt 5.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 2000&quot;) &gt; -1;</span><br><span class="line">            if (isWin2K) return &quot;Win2000&quot;;</span><br><span class="line">            var isWinXP = sUserAgent.indexOf(&quot;Windows nt 5.1&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows XP&quot;) &gt; -1</span><br><span class="line">            sUserAgent.indexOf(&quot;Windows XP&quot;) &gt; -1;</span><br><span class="line">            if (isWinXP) return &quot;WinXP&quot;;</span><br><span class="line">            var isWin2003 = sUserAgent.indexOf(&quot;Windows nt 5.2&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 2003&quot;) &gt; -1;</span><br><span class="line">            if (isWin2003) return &quot;Win2003&quot;;</span><br><span class="line">            var isWinVista = sUserAgent.indexOf(&quot;Windows nt 6.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows Vista&quot;) &gt; -1;</span><br><span class="line">            if (isWinVista) return &quot;WinVista&quot;;</span><br><span class="line">            var isWin7 = sUserAgent.indexOf(&quot;Windows nt 6.1&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 7&quot;) &gt; -1;</span><br><span class="line">            if (isWin7) return &quot;Win7&quot;;</span><br><span class="line">            var isWin8 = sUserAgent.indexOf(&quot;windows nt 6.2&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 8&quot;) &gt; -1;</span><br><span class="line">            if (isWin8) return &quot;Win8&quot;;</span><br><span class="line">            var isWin10 = sUserAgent.indexOf(&quot;windows nt 10.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 10&quot;) &gt; -1;</span><br><span class="line">            if (isWin10) return &quot;Win10&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;其他&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">    getDigits: function () &#123; //判断当前操作系统的版本号 </span><br><span class="line">        var sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class="line">        var is64 = sUserAgent.indexOf(&quot;win64&quot;) &gt; -1 || sUserAgent.indexOf(&quot;wow64&quot;) &gt; -1;</span><br><span class="line">        if (is64) &#123;</span><br><span class="line">            return &quot;64位&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return &quot;32位&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getBrowser: function () &#123;  // 获取浏览器名</span><br><span class="line">        var rMsie = /(msie\s|trident\/7)([\w\.]+)/;</span><br><span class="line">        var rTrident = /(trident)\/([\w.]+)/;</span><br><span class="line">        var rEdge = /(chrome)\/([\w.]+)/;//IE</span><br><span class="line">        var rFirefox = /(firefox)\/([\w.]+)/;  //火狐</span><br><span class="line">        var rOpera = /(opera).+version\/([\w.]+)/;  //旧Opera</span><br><span class="line">        var rNewOpera = /(opr)\/(.+)/;  //新Opera 基于谷歌</span><br><span class="line">        var rChrome = /(chrome)\/([\w.]+)/; //谷歌 </span><br><span class="line">        var rUC = /(chrome)\/([\w.]+)/;//UC</span><br><span class="line">        var rMaxthon = /(chrome)\/([\w.]+)/;//遨游</span><br><span class="line">        var r2345 = /(chrome)\/([\w.]+)/;//2345</span><br><span class="line">        var rQQ = /(chrome)\/([\w.]+)/;//QQ</span><br><span class="line">        //var rMetasr =  /(metasr)\/([\w.]+)/;//搜狗</span><br><span class="line">        var rSafari = /version\/([\w.]+).*(safari)/;</span><br><span class="line">        var ua = navigator.userAgent.toLowerCase();</span><br><span class="line">        var matchBS, matchBS2;</span><br><span class="line">        //IE 低版</span><br><span class="line">        matchBS = rMsie.exec(ua);</span><br><span class="line">        if (matchBS != null) &#123;</span><br><span class="line">            matchBS2 = rTrident.exec(ua);</span><br><span class="line">            if (matchBS2 != null) &#123;</span><br><span class="line">                switch (matchBS2[2]) &#123;</span><br><span class="line">                    case &quot;4.0&quot;:</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser:</span><br><span class="line">                                &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;IE: 8&quot;  //内核版本号</span><br><span class="line">                        &#125;;</span><br><span class="line">                        break;</span><br><span class="line">                    case &quot;5.0&quot;:</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser:</span><br><span class="line">                                &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;IE: 9&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                        break;</span><br><span class="line">                    case &quot;6.0&quot;:</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser:</span><br><span class="line">                                &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;IE: 10&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                        break;</span><br><span class="line">                    case &quot;7.0&quot;:</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser:</span><br><span class="line">                                &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;IE: 11&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                        break;</span><br><span class="line">                    default:</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser:</span><br><span class="line">                                &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;Undefined&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    browser: &quot;Microsoft IE&quot;,</span><br><span class="line">                    version: &quot;IE:&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //IE最新版</span><br><span class="line">        matchBS = rEdge.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;Microsoft Edge&quot;,</span><br><span class="line">                version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //UC浏览器                      </span><br><span class="line">        matchBS = rUC.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;UC&quot;,</span><br><span class="line">                version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //火狐浏览器</span><br><span class="line">        matchBS = rFirefox.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;火狐&quot;,</span><br><span class="line">                version: &quot;Firefox/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //Oper浏览器                     </span><br><span class="line">        matchBS = rOpera.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;Opera&quot;,</span><br><span class="line">                version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //遨游</span><br><span class="line">        matchBS = rMaxthon.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;遨游&quot;,</span><br><span class="line">                version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //2345浏览器                      </span><br><span class="line">        matchBS = r2345.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;2345&quot;,</span><br><span class="line">                version: &quot;Chrome/ &quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //QQ浏览器                      </span><br><span class="line">        matchBS = rQQ.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;QQ&quot;,</span><br><span class="line">                version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //Safari（苹果）浏览器</span><br><span class="line">        matchBS = rSafari.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent)) &amp;&amp; (!(window.chrome)) &amp;&amp; (!(window.opera))) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                browser: &quot;Safari&quot;,</span><br><span class="line">                version: &quot;Safari/&quot; + matchBS[1] || &quot;0&quot;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //谷歌浏览器</span><br><span class="line">        matchBS = rChrome.exec(ua);</span><br><span class="line">        if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">            matchBS2 = rNewOpera.exec(ua);</span><br><span class="line">            if (matchBS2 == null) &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    browser: &quot;谷歌&quot;,</span><br><span class="line">                    version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    browser: &quot;Opera&quot;,</span><br><span class="line">                    version: &quot;opr/&quot; + matchBS2[2] || &quot;0&quot;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">BrowserMatch.init();</span><br></pre></td></tr></table></figure>

<h2 id="3-获取需要的参数"><a href="#3-获取需要的参数" class="headerlink" title="3.获取需要的参数"></a>3.获取需要的参数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(&quot;当前用户IP地址：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cip&quot;]);</span><br><span class="line">console.log(&quot;当前用户所在城市ID：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cid&quot;]);</span><br><span class="line">console.log(&quot;当前用户所在城市：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cname&quot;]);</span><br><span class="line">console.log(&quot;当前使用浏览器版本：&quot;);</span><br><span class="line">console.log(getBrowserInfo());</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(&quot;当前用户IP地址：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cip&quot;]);</span><br><span class="line">console.log(&quot;当前用户所在城市ID：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cid&quot;]);</span><br><span class="line">console.log(&quot;当前用户所在城市：&quot;);</span><br><span class="line">console.log(returnCitySN[&quot;cname&quot;]);</span><br><span class="line">console.log(&quot;当前使用浏览器版本：&quot;);</span><br><span class="line">console.log(&quot;浏览器：&quot;+BrowserMatch.browser + &quot;，内核版本：&quot; + BrowserMatch.version + &quot;，操作系统：&quot; + BrowserMatch.OS);</span><br></pre></td></tr></table></figure>

<h2 id="4-完整代码"><a href="#4-完整代码" class="headerlink" title="4.完整代码"></a>4.完整代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;js获取用户访问IP，城市，以及获取当前操作浏览器&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://pv.sohu.com/cityjson?ie=utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        function getBrowserInfo() &#123;</span><br><span class="line">            var agent = navigator.userAgent.toLowerCase();</span><br><span class="line">            var regStr_ie = /msie [\d.]+;/gi;</span><br><span class="line">            var regStr_ff = /firefox\/[\d.]+/gi</span><br><span class="line">            var regStr_chrome = /chrome\/[\d.]+/gi;</span><br><span class="line">            var regStr_saf = /safari\/[\d.]+/gi;</span><br><span class="line">            //IE</span><br><span class="line">            if (agent.indexOf(&quot;msie&quot;) &gt; 0) &#123;</span><br><span class="line">                return agent.match(regStr_ie);</span><br><span class="line">            &#125;</span><br><span class="line">            //firefox</span><br><span class="line">            if (agent.indexOf(&quot;firefox&quot;) &gt; 0) &#123;</span><br><span class="line">                return agent.match(regStr_ff);</span><br><span class="line">            &#125;</span><br><span class="line">            //Chrome</span><br><span class="line">            if (agent.indexOf(&quot;chrome&quot;) &gt; 0) &#123;</span><br><span class="line">                return agent.match(regStr_chrome);</span><br><span class="line">            &#125;</span><br><span class="line">            //Safari</span><br><span class="line">            if (agent.indexOf(&quot;safari&quot;) &gt; 0 &amp;&amp; agent.indexOf(&quot;chrome&quot;) &lt; 0) &#123;</span><br><span class="line">                return agent.match(regStr_saf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&quot;当前用户IP地址：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cip&quot;]);</span><br><span class="line">        console.log(&quot;当前用户所在城市ID：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cid&quot;]);</span><br><span class="line">        console.log(&quot;当前用户所在城市：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cname&quot;]);</span><br><span class="line">        console.log(&quot;当前使用浏览器版本：&quot;);</span><br><span class="line">        console.log(getBrowserInfo());</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;js获取用户访问IP，城市，以及获取当前操作浏览器&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://pv.sohu.com/cityjson?ie=utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        // 获取访问IP、地区、、当前操作浏览器</span><br><span class="line">        var BrowserMatch = &#123;</span><br><span class="line">            init: function () &#123;</span><br><span class="line">                this.browser = this.getBrowser().browser || &quot;未知浏览器&quot;;  //获取浏览器名</span><br><span class="line">                this.version = this.getBrowser().version || &quot;未知浏览器版本号&quot;;  //获取浏览器版本</span><br><span class="line">                this.OS = this.getOS() + &quot; &quot; + this.getDigits() || &quot;未知操作系统&quot;; //系统版本号 </span><br><span class="line">            &#125;,</span><br><span class="line">            getOS: function () &#123;  //判断所处操作系统</span><br><span class="line">                var sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">                var isWin = (navigator.platform == &quot;Win32&quot;) || (navigator.platform == &quot;Win64&quot;) || (navigator.platform == &quot;wow64&quot;);</span><br><span class="line"></span><br><span class="line">                var isMac = (navigator.platform == &quot;Mac68K&quot;) || (navigator.platform == &quot;MacPPC&quot;) || (navigator.platform == &quot;Macintosh&quot;) || (navigator.platform == &quot;MacIntel&quot;);</span><br><span class="line">                if (isMac) return &quot;Mac&quot;;</span><br><span class="line">                var isUnix = (navigator.platform == &quot;X11&quot;) &amp;&amp; !isWin &amp;&amp; !isMac;</span><br><span class="line">                if (isUnix) return &quot;Unix&quot;;</span><br><span class="line">                var isLinux = (String(navigator.platform).indexOf(&quot;Linux&quot;) &gt; -1);</span><br><span class="line">                var bIsAndroid = sUserAgent.toLowerCase().match(/android/i) == &quot;android&quot;;</span><br><span class="line">                if (isLinux) &#123;</span><br><span class="line">                    if (bIsAndroid) return &quot;Android&quot;;</span><br><span class="line">                    else return &quot;Linux&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                if (isWin) &#123;</span><br><span class="line">                    var isWin2K = sUserAgent.indexOf(&quot;Windows nt 5.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 2000&quot;) &gt; -1;</span><br><span class="line">                    if (isWin2K) return &quot;Win2000&quot;;</span><br><span class="line">                    var isWinXP = sUserAgent.indexOf(&quot;Windows nt 5.1&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows XP&quot;) &gt; -1</span><br><span class="line">                    sUserAgent.indexOf(&quot;Windows XP&quot;) &gt; -1;</span><br><span class="line">                    if (isWinXP) return &quot;WinXP&quot;;</span><br><span class="line">                    var isWin2003 = sUserAgent.indexOf(&quot;Windows nt 5.2&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 2003&quot;) &gt; -1;</span><br><span class="line">                    if (isWin2003) return &quot;Win2003&quot;;</span><br><span class="line">                    var isWinVista = sUserAgent.indexOf(&quot;Windows nt 6.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows Vista&quot;) &gt; -1;</span><br><span class="line">                    if (isWinVista) return &quot;WinVista&quot;;</span><br><span class="line">                    var isWin7 = sUserAgent.indexOf(&quot;Windows nt 6.1&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 7&quot;) &gt; -1;</span><br><span class="line">                    if (isWin7) return &quot;Win7&quot;;</span><br><span class="line">                    var isWin8 = sUserAgent.indexOf(&quot;windows nt 6.2&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 8&quot;) &gt; -1;</span><br><span class="line">                    if (isWin8) return &quot;Win8&quot;;</span><br><span class="line">                    var isWin10 = sUserAgent.indexOf(&quot;windows nt 10.0&quot;) &gt; -1 || sUserAgent.indexOf(&quot;Windows 10&quot;) &gt; -1;</span><br><span class="line">                    if (isWin10) return &quot;Win10&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                return &quot;其他&quot;;</span><br><span class="line">            &#125;,</span><br><span class="line">            getDigits: function () &#123; //判断当前操作系统的版本号 </span><br><span class="line">                var sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class="line">                var is64 = sUserAgent.indexOf(&quot;win64&quot;) &gt; -1 || sUserAgent.indexOf(&quot;wow64&quot;) &gt; -1;</span><br><span class="line">                if (is64) &#123;</span><br><span class="line">                    return &quot;64位&quot;;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    return &quot;32位&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            getBrowser: function () &#123;  // 获取浏览器名</span><br><span class="line">                var rMsie = /(msie\s|trident\/7)([\w\.]+)/;</span><br><span class="line">                var rTrident = /(trident)\/([\w.]+)/;</span><br><span class="line">                var rEdge = /(chrome)\/([\w.]+)/;//IE</span><br><span class="line"></span><br><span class="line">                var rFirefox = /(firefox)\/([\w.]+)/;  //火狐</span><br><span class="line">                var rOpera = /(opera).+version\/([\w.]+)/;  //旧Opera</span><br><span class="line">                var rNewOpera = /(opr)\/(.+)/;  //新Opera 基于谷歌</span><br><span class="line">                var rChrome = /(chrome)\/([\w.]+)/; //谷歌 </span><br><span class="line">                var rUC = /(chrome)\/([\w.]+)/;//UC</span><br><span class="line">                var rMaxthon = /(chrome)\/([\w.]+)/;//遨游</span><br><span class="line">                var r2345 = /(chrome)\/([\w.]+)/;//2345</span><br><span class="line">                var rQQ = /(chrome)\/([\w.]+)/;//QQ</span><br><span class="line">                //var rMetasr =  /(metasr)\/([\w.]+)/;//搜狗</span><br><span class="line">                var rSafari = /version\/([\w.]+).*(safari)/;</span><br><span class="line">                var ua = navigator.userAgent.toLowerCase();</span><br><span class="line">                var matchBS, matchBS2;</span><br><span class="line"></span><br><span class="line">                //IE 低版</span><br><span class="line">                matchBS = rMsie.exec(ua);</span><br><span class="line">                if (matchBS != null) &#123;</span><br><span class="line">                    matchBS2 = rTrident.exec(ua);</span><br><span class="line">                    if (matchBS2 != null) &#123;</span><br><span class="line">                        switch (matchBS2[2]) &#123;</span><br><span class="line">                            case &quot;4.0&quot;:</span><br><span class="line">                                return &#123;</span><br><span class="line">                                    browser:</span><br><span class="line">                                        &quot;Microsoft IE&quot;,</span><br><span class="line">                                    version: &quot;IE: 8&quot;  //内核版本号</span><br><span class="line">                                &#125;;</span><br><span class="line">                                break;</span><br><span class="line">                            case &quot;5.0&quot;:</span><br><span class="line">                                return &#123;</span><br><span class="line">                                    browser:</span><br><span class="line">                                        &quot;Microsoft IE&quot;,</span><br><span class="line">                                    version: &quot;IE: 9&quot;</span><br><span class="line">                                &#125;;</span><br><span class="line">                                break;</span><br><span class="line">                            case &quot;6.0&quot;:</span><br><span class="line">                                return &#123;</span><br><span class="line">                                    browser:</span><br><span class="line">                                        &quot;Microsoft IE&quot;,</span><br><span class="line">                                    version: &quot;IE: 10&quot;</span><br><span class="line">                                &#125;;</span><br><span class="line">                                break;</span><br><span class="line">                            case &quot;7.0&quot;:</span><br><span class="line">                                return &#123;</span><br><span class="line">                                    browser:</span><br><span class="line">                                        &quot;Microsoft IE&quot;,</span><br><span class="line">                                    version: &quot;IE: 11&quot;</span><br><span class="line">                                &#125;;</span><br><span class="line">                                break;</span><br><span class="line">                            default:</span><br><span class="line">                                return &#123;</span><br><span class="line">                                    browser:</span><br><span class="line">                                        &quot;Microsoft IE&quot;,</span><br><span class="line">                                    version: &quot;Undefined&quot;</span><br><span class="line">                                &#125;;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser: &quot;Microsoft IE&quot;,</span><br><span class="line">                            version: &quot;IE:&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                //IE最新版</span><br><span class="line">                matchBS = rEdge.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;Microsoft Edge&quot;,</span><br><span class="line">                        version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //UC浏览器					  </span><br><span class="line">                matchBS = rUC.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;UC&quot;,</span><br><span class="line">                        version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //火狐浏览器</span><br><span class="line">                matchBS = rFirefox.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;火狐&quot;,</span><br><span class="line">                        version: &quot;Firefox/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //Oper浏览器					 </span><br><span class="line">                matchBS = rOpera.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;Opera&quot;,</span><br><span class="line">                        version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //遨游</span><br><span class="line">                matchBS = rMaxthon.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;遨游&quot;,</span><br><span class="line">                        version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //2345浏览器					  </span><br><span class="line">                matchBS = r2345.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;2345&quot;,</span><br><span class="line">                        version: &quot;Chrome/ &quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //QQ浏览器					  </span><br><span class="line">                matchBS = rQQ.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;QQ&quot;,</span><br><span class="line">                        version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //Safari（苹果）浏览器</span><br><span class="line">                matchBS = rSafari.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent)) &amp;&amp; (!(window.chrome)) &amp;&amp; (!(window.opera))) &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        browser: &quot;Safari&quot;,</span><br><span class="line">                        version: &quot;Safari/&quot; + matchBS[1] || &quot;0&quot;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                //谷歌浏览器</span><br><span class="line">                matchBS = rChrome.exec(ua);</span><br><span class="line">                if ((matchBS != null) &amp;&amp; (!(window.attachEvent))) &#123;</span><br><span class="line">                    matchBS2 = rNewOpera.exec(ua);</span><br><span class="line">                    if (matchBS2 == null) &#123;</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser: &quot;谷歌&quot;,</span><br><span class="line">                            version: &quot;Chrome/&quot; + matchBS[2] || &quot;0&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        return &#123;</span><br><span class="line">                            browser: &quot;Opera&quot;,</span><br><span class="line">                            version: &quot;opr/&quot; + matchBS2[2] || &quot;0&quot;</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        BrowserMatch.init();</span><br><span class="line">        console.log(&quot;当前用户IP地址：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cip&quot;]);</span><br><span class="line">        console.log(&quot;当前用户所在城市ID：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cid&quot;]);</span><br><span class="line">        console.log(&quot;当前用户所在城市：&quot;);</span><br><span class="line">        console.log(returnCitySN[&quot;cname&quot;]);</span><br><span class="line">        console.log(&quot;浏览器：&quot;+BrowserMatch.browser + &quot;，内核版本：&quot; + BrowserMatch.version + &quot;，操作系统：&quot; + BrowserMatch.OS);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="5-运行结果"><a href="#5-运行结果" class="headerlink" title="5.运行结果"></a>5.运行结果</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-7be5f5fc8f42b582.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>或：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-23644aab907e1257.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-文章评论功能</title>
    <url>/2020/03/27/%E5%89%8D%E7%AB%AF/2020/032701/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在大部分博客网站中，评论功能是与博主沟通交流必不可少的功能，目前我的博客中的文章只提供了阅读功能，但是没有评论功能，因此我在闲暇时间，查阅资料并研究了一下评论功能，来完善一下我的小程序；</p>
<h2 id="一-简书前端界面分析"><a href="#一-简书前端界面分析" class="headerlink" title="一.简书前端界面分析"></a>一.简书前端界面分析</h2><p>首先我们先研究下简书的前端界面长什么样，知道了前端需要什么数据，我们在根据自己小程序的需求来设计数据库。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-b450816797ac90d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>以简书为例，一个项目下面可能会有多条评论。但评论下面可能会有很多条的回复；我们先将简书下方的直接对文章的评论的称为父评论，每条父评论下方的回复称之为子评论；</p>
<p>即简书的文章下可能有多个父评论，每个父评论下可能有多个子评论。他们之间都是一对多的关系；因此我们将评论表的字段设计为：</p>
<p>主键ID（评论ID），blog_id(对应博客文章ID)，blog_type（因为我的博客技术文章和生活随笔文章放了两张不同的表，所以用来区别文章类型），wimini_user_id（评论用户ID，用来链接用户表获取对应的头像以及名称），reply_wxmini_id（回复者用户ID），pid（父级ID，根据pid找到对应的评论，pid为0代表父评论，其他则为对应pid的回复），praise（点赞数，暂时还没弄，先留着），content（评论内容），create_time（创建时间）；</p>
<h2 id="二-创建数据库表"><a href="#二-创建数据库表" class="headerlink" title="二.创建数据库表"></a>二.创建数据库表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `mb_comment` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;评论ID&apos;,</span><br><span class="line">  `blog_id` int(11) DEFAULT NULL COMMENT &apos;博客ID&apos;,</span><br><span class="line">  `blog_type` varchar(11) DEFAULT NULL COMMENT &apos;博客类型（0：技术文章，1：随笔文章）&apos;,</span><br><span class="line">  `wxmini_id` int(11) DEFAULT NULL COMMENT &apos;评论者微信用户ID&apos;,</span><br><span class="line">  `reply_wxmini_id` int(11) DEFAULT NULL COMMENT &apos;回复者微信用户ID&apos;,</span><br><span class="line">  `pid` int(11) DEFAULT NULL COMMENT &apos;父评论ID&apos;,</span><br><span class="line">  `content` varchar(256) DEFAULT NULL COMMENT &apos;评论内容&apos;,</span><br><span class="line">  `praise` int(64) DEFAULT &apos;0&apos; COMMENT &apos;点赞数&apos;,</span><br><span class="line">  `create_time` datetime NOT NULL COMMENT &apos;创建时间&apos;,</span><br><span class="line">  `createdAt` varchar(64) DEFAULT NULL COMMENT &apos;创建时间戳&apos;,</span><br><span class="line">  `updatedAt` varchar(64) DEFAULT NULL COMMENT &apos;更新时间戳&apos;,</span><br><span class="line">  `version` varchar(64) DEFAULT NULL COMMENT &apos;版本&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/12858218-cc29db43bf4a5586.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="三-后台接口返回数据"><a href="#三-后台接口返回数据" class="headerlink" title="三.后台接口返回数据"></a>三.后台接口返回数据</h2><p>1.数据库用的mySql，通过查询文章id来查找对应的评论，在通过用户id查询评论人信息，以及被回复人信息，先获取到当前所有评论包括回复信息：</p>
<p>SELECT a.id,a.pid,a.blog_id blogId,a.wxmini_id wxminiId,b.user_name userName,b.img_url imgUrl,c.user_name reUserName,c.img_url reImgUrl,a.content,DATE_FORMAT(a.create_time,’%Y-%m-%d %T’) createTime FROM mb_comment a LEFT JOIN wxmini_user_info b ON  a.wxmini_id=b.id LEFT JOIN wxmini_user_info c ON  a.reply_wxmini_id=c.id WHERE a.blog_id = “ + 博客文章id + “ AND a.blog_type = “ + 文章类型</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-a3e556e7f19e86c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p>2.将返回的json数据中根据id=pid把回复对应到相应的评论中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var map = &#123;&#125;;</span><br><span class="line">result.forEach(function (item) &#123;</span><br><span class="line">    map[item.id] = item;</span><br><span class="line">&#125;);</span><br><span class="line">var resultList = [];</span><br><span class="line">result.forEach(function (item) &#123;</span><br><span class="line">    var parent = map[item.pid];</span><br><span class="line">    if (parent) &#123;</span><br><span class="line">        (parent.children || (parent.children = [])).push(item);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        resultList.push(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>3.编写接口：</p>
<p>我的后台使用的是nodejs的koa2，因此结合上面获取内容获取文章评论接口如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 文章评论列表</span><br><span class="line">&quot;GET /api/wxmini/commentList&quot;: async (ctx, next) =&gt; &#123;</span><br><span class="line">    let parameter = &#123;&#125;;</span><br><span class="line">    ctx.request.querystring.replace(/([^=&amp;]+)=([^&amp;]*)/g, function(m,key,value) &#123;</span><br><span class="line">        parameter[decodeURIComponent(key)] = decodeURIComponent(value);</span><br><span class="line">    &#125;);</span><br><span class="line">    console.log(parameter);</span><br><span class="line">    // 本博客下所有评论回复</span><br><span class="line">    let result = await db.sequelize.query(&quot;SELECT a.id,a.pid,a.blog_id blogId,a.wxmini_id wxminiId,b.user_name userName,b.img_url imgUrl,c.user_name reUserName,c.img_url reImgUrl,a.content,DATE_FORMAT(a.create_time,&apos;%Y-%m-%d %T&apos;) createTime FROM mb_comment a LEFT JOIN wxmini_user_info b ON  a.wxmini_id=b.id LEFT JOIN wxmini_user_info c ON  a.reply_wxmini_id=c.id WHERE a.blog_id = &quot; + parameter.blogId + &quot; AND a.blog_type = &quot; + parameter.blogType, &#123;</span><br><span class="line">        type: db.sequelize.QueryTypes.SELECT</span><br><span class="line">        &#125;</span><br><span class="line">    ).then(function(results) &#123;</span><br><span class="line">        return results;</span><br><span class="line">    &#125;);</span><br><span class="line">    // 将回复对应到相应的评论中</span><br><span class="line">    var map = &#123;&#125;;</span><br><span class="line">    result.forEach(function (item) &#123;</span><br><span class="line">        map[item.id] = item;</span><br><span class="line">    &#125;);</span><br><span class="line">    var resultList = [];</span><br><span class="line">    result.forEach(function (item) &#123;</span><br><span class="line">        var parent = map[item.pid];</span><br><span class="line">        if (parent) &#123;</span><br><span class="line">            (parent.children || (parent.children = [])).push(item);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            resultList.push(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        code: 0,</span><br><span class="line">        data: resultList</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>返回接口如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-03c1909b9f699620.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<h2 id="四-前端页面展示"><a href="#四-前端页面展示" class="headerlink" title="四.前端页面展示"></a>四.前端页面展示</h2><p>1.wxml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 新增评论 --&gt;</span><br><span class="line">&lt;view class=&quot;space&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;commentBox&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;commentHead flex ac jcs&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;f32 fwb&quot; wx:if=&quot;&#123;&#123;commentList.length &gt; 0&#125;&#125;&quot;&gt;评论(&#123;&#123;commentList.length&#125;&#125;)&lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;f32 fwb&quot; wx:else&gt;暂无评论&lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;f28 cMain flex ac&quot; bindtap=&quot;showCommentBox&quot; data-type=&quot;comment&quot;  data-wxminiid=&quot;0&quot; data-pid=&quot;0&quot; data-fidx=&quot;-1&quot;&gt;</span><br><span class="line">            &lt;image src=&quot;/img/iconEdit.png&quot;&gt;&lt;/image&gt;写评论</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;!-- 评论列表 --&gt;</span><br><span class="line">    &lt;view class=&quot;commentBody&quot; wx:if=&quot;&#123;&#123;commentList.length &gt; 0&#125;&#125;&quot; wx:for=&quot;&#123;&#123;commentList&#125;&#125;&quot;  wx:for-index=&quot;fidx&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;commentList flex&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;commentLeft&quot;&gt;</span><br><span class="line">                &lt;image src=&quot;&#123;&#123;item.imgUrl&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;commentRight&quot;&gt;</span><br><span class="line">                &lt;view class=&quot;rightDetail&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;f30 fwb&quot;&gt;&#123;&#123;item.userName&#125;&#125;&lt;/view&gt;</span><br><span class="line">                    &lt;view class=&quot;f30 c888 commentContent&quot;&gt;&#123;&#123;item.content&#125;&#125;&lt;/view&gt;</span><br><span class="line">                    &lt;view class=&quot;f28 c888 flex ac jcs&quot;&gt;</span><br><span class="line">                        &lt;view&gt;&#123;&#123;item.createTime&#125;&#125;&lt;/view&gt;</span><br><span class="line">                        &lt;view class=&quot;commentIcon&quot; bindtap=&quot;showCommentBox&quot; data-type=&quot;reply&quot; data-wxminiid=&quot;&#123;&#123;item.wxminiId&#125;&#125;&quot; data-pid=&quot;&#123;&#123;item.id&#125;&#125;&quot; data-username=&quot;&#123;&#123;item.userName&#125;&#125;&quot; data-fidx=&quot;&#123;&#123;fidx&#125;&#125;&quot;&gt;</span><br><span class="line">                            &lt;image src=&quot;/img/iconReply.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">                            &lt;!-- &lt;image src=&quot;/img/iconReply.png&quot; class=&quot;iconReply&quot;&gt;&lt;/image&gt; --&gt;</span><br><span class="line">                            &lt;!-- &lt;image src=&quot;/img/iconPraise.png&quot;&gt;&lt;/image&gt; --&gt;</span><br><span class="line">                        &lt;/view&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">                &lt;!-- 回复列表 --&gt;</span><br><span class="line">                &lt;view class=&quot;replyList flex&quot; wx:if=&quot;&#123;&#123;idx &lt; (uhide==fidx?item.children.length:moreReplyMax)&#125;&#125;&quot; wx:for=&quot;&#123;&#123;item.children&#125;&#125;&quot; wx:for-index=&quot;idx&quot; wx:for-item=&quot;children&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;replyLeft&quot;&gt;</span><br><span class="line">                        &lt;image src=&quot;&#123;&#123;children.imgUrl&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                    &lt;view class=&quot;replyRight&quot;&gt;</span><br><span class="line">                        &lt;view class=&quot;f30 fwb&quot;&gt;&#123;&#123;children.userName&#125;&#125;&lt;/view&gt;</span><br><span class="line">                        &lt;view class=&quot;f30 c888 replyContent&quot;&gt;</span><br><span class="line">                            &lt;text class=&quot;cBlue&quot;&gt;@&#123;&#123;children.reUserName&#125;&#125;&lt;/text&gt;&#123;&#123;children.content&#125;&#125;</span><br><span class="line">                        &lt;/view&gt;</span><br><span class="line">                        &lt;view class=&quot;f28 c888 flex ac&quot;&gt;</span><br><span class="line">                            &lt;view class=&quot;time&quot;&gt;&#123;&#123;children.createTime&#125;&#125;&lt;/view&gt;</span><br><span class="line">                            &lt;view bindtap=&quot;showCommentBox&quot; data-type=&quot;reply&quot; data-wxminiid=&quot;&#123;&#123;children.wxminiId&#125;&#125;&quot; data-pid=&quot;&#123;&#123;children.pid&#125;&#125;&quot; data-username=&quot;&#123;&#123;children.userName&#125;&#125;&quot; data-fidx=&quot;&#123;&#123;fidx&#125;&#125;&quot;&gt;回复&lt;/view&gt;</span><br><span class="line">                        &lt;/view&gt;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">                &lt;!-- 点击查看更多回复 --&gt;</span><br><span class="line">                &lt;view class=&quot;moreReply flex ac&quot; wx:if=&quot;&#123;&#123;item.children.length&gt;(uhide==fidx?item.children.length:moreReplyMax)&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;view&gt;&lt;image src=&quot;/img/read.png&quot;&gt;&lt;/image&gt;&lt;/view&gt;</span><br><span class="line">                    &lt;view class=&quot;f28 c888&quot;&gt;还有&#123;&#123;item.children.length - moreReplyMax&#125;&#125;条评论，&lt;/view&gt;</span><br><span class="line">                    &lt;view class=&quot;f28 cBlue&quot; bindtap=&quot;toggleMoreReply&quot; data-fidx=&quot;&#123;&#123;fidx&#125;&#125;&quot;&gt;点击查看更多&lt;/view&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">    &lt;!-- 没有更多评论了 --&gt;</span><br><span class="line">    &lt;view class=&quot;commentNoMore tc&quot; wx:if=&quot;&#123;&#123;commentList.length &gt; 0&#125;&#125;&quot;&gt;没有更多评论了~&lt;/view&gt;</span><br><span class="line">    &lt;!-- 暂无评论 --&gt;</span><br><span class="line">    &lt;view wx:if=&quot;&#123;&#123;commentList.length == 0&#125;&#125;&quot; class=&quot;noComment tc&quot;&gt;</span><br><span class="line">        &lt;image src=&quot;/img/iconCommentNo.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">        &lt;view&gt;来都来了，不想&lt;text class=&quot;cBlue&quot; bindtap=&quot;showCommentBox&quot; data-type=&quot;comment&quot;  data-wxminiid=&quot;0&quot; data-pid=&quot;0&quot; data-fidx=&quot;-1&quot;&gt;说一些什么&lt;/text&gt;咩~&lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;space&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;!-- 写评论 --&gt;</span><br><span class="line">&lt;view class=&quot;addCBox&quot; wx:if=&quot;&#123;&#123;editComment&#125;&#125;&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;addCBg&quot;&gt;&lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;addCBody bgFFF&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;addContent&quot;&gt;</span><br><span class="line">            &lt;textarea placeholder=&quot;&#123;&#123;contentTip&#125;&#125;&quot; maxlength=&quot;-1&quot; bindinput=&quot;getCommentContent&quot; value=&quot;&#123;&#123;content&#125;&#125;&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">        &lt;view class=&quot;operation flex ac &quot;&gt;</span><br><span class="line">            &lt;view class=&quot;cancel bgF0 c888&quot; bindtap=&quot;hideCommentBox&quot;&gt;取消&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;bgMain cfff&quot; bindtap=&quot;addNewComment&quot;&gt;确认&lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure>

<p>2.wxss:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/* 新增评论 */</span><br><span class="line">.commentBox&#123;width: 92%;margin: 0 auto;margin-top: 40rpx;&#125;</span><br><span class="line">.commentBox .commentHead image&#123;width: 30rpx; height: 30rpx; margin-right: 10rpx;&#125;</span><br><span class="line">.commentBox .commentBody&#123;width: 100%;overflow: hidden; margin: 30rpx 0;border-top: 1px solid #e6e6e6;padding-top: 30rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentLeft&#123;width: 15%;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentLeft image&#123;width: 64rpx; height: 64rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight&#123;width: 85%;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .commentContent&#123;margin: 20rpx 0;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .commentIcon image&#123;width: 40rpx; height: 40rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .commentIcon .iconReply&#123;margin-right: 40rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList&#123;width: 100%; overflow: hidden; margin-top: 30rpx; padding: 30rpx 0; border-top: 1px solid #e6e6e6;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyLeft&#123;width: 15%;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyLeft image&#123;width: 50rpx; height: 50rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyRight&#123;width: 85%;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyRight .replyContent&#123;margin: 20rpx 0;line-height: 50rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyRight .replyContent text&#123;margin-right: 20rpx;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .replyList .replyRight .time&#123;margin-right: 20rpx;&#125;</span><br><span class="line">/* 更多回复 */</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .moreReply&#123;width: 100%;overflow: hidden;padding-top: 30rpx;border-top: 1px solid #e6e6e6;&#125;</span><br><span class="line">.commentBox .commentBody .commentList .commentRight .moreReply image&#123;width: 32rpx;height: 32rpx;margin-right: 10rpx;&#125;</span><br><span class="line">/* 没有更多评论了 */</span><br><span class="line">.commentBox .commentNoMore&#123;width: 100%;overflow: hidden;padding: 30rpx 0;border-top: 1px solid #e6e6e6;&#125;</span><br><span class="line">/* 暂无评论 */</span><br><span class="line">.commentBox .noComment&#123;width: 100%;overflow: hidden;padding: 100rpx 0;&#125;</span><br><span class="line">.commentBox .noComment image&#123;width: 350rpx;height: 150rpx;margin-bottom: 50rpx;&#125;</span><br><span class="line">/* 写评论 */</span><br><span class="line">.addCBox&#123;position: fixed; top: 0; left: 0; background: rgba(0, 0, 0, 0.7); width: 100%; z-index: 1001; height: 100vh;&#125;</span><br><span class="line">.addCBox .addCBg&#123;position: absolute; top: 0; left: 0; width: 100%; z-index: 1; height: 100vh;&#125;</span><br><span class="line">.addCBox .addCBody&#123;width: 100%;position: relative;z-index: 10;&#125;</span><br><span class="line">.addCBox .addCBody .addContent&#123;width: 100%;padding: 20rpx;box-sizing: border-box;&#125;</span><br><span class="line">.addCBox .addCBody .addContent textarea&#123;width: 100%;&#125;</span><br><span class="line">.addCBox .addCBody .operation&#123;width: 100%;padding: 30rpx 20rpx;justify-content: flex-end;&#125;</span><br><span class="line">.addCBox .addCBody .operation&gt;view&#123;padding: 10rpx 30rpx;border-radius: 10rpx;&#125;</span><br><span class="line">.addCBox .addCBody .operation .cancel&#123;margin-right: 20rpx;&#125;</span><br></pre></td></tr></table></figure>

<p>3.js:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var util = require(&apos;../../utils/util.js&apos;);</span><br><span class="line">var api = require(&apos;../../config/api.js&apos;);</span><br><span class="line">var app = getApp();</span><br><span class="line">Page(&#123;</span><br><span class="line">    /**</span><br><span class="line">    * commentList:评论列表</span><br><span class="line">    * content:评论内容</span><br><span class="line">    * contentTip:评论内容提示</span><br><span class="line">    * commentType:评论类型：comment-评论，reply-回复</span><br><span class="line">    * rWxminiId:被回复人用户id</span><br><span class="line">    * pid:评论id</span><br><span class="line">    * uhide:当前展开更多回复id</span><br><span class="line">    * moreReply:是否显示更多回复</span><br><span class="line">    * moreReplyMax：默认显示回复数</span><br><span class="line">    */</span><br><span class="line">    data: &#123;</span><br><span class="line">        commentList: [],</span><br><span class="line">        content: &quot;&quot;,</span><br><span class="line">        contentTip: &quot;请输入您的评论内容&quot;,</span><br><span class="line">        commentType: &quot;comment&quot;,</span><br><span class="line">        rWxminiId: 0,</span><br><span class="line">        pid: 0,</span><br><span class="line">        uhide: null,</span><br><span class="line">        moreReply: false,</span><br><span class="line">        moreReplyMax: 2</span><br><span class="line">    &#125;,</span><br><span class="line">    //点击切换隐藏和显示更多回复</span><br><span class="line">    toggleMoreReply: function (e) &#123;</span><br><span class="line">        var that = this;</span><br><span class="line">        var fidx = e.currentTarget.dataset.fidx;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">            uhide: fidx</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示写评论窗口</span><br><span class="line">    showCommentBox: function (e) &#123;</span><br><span class="line">        let that = this</span><br><span class="line">            , contentTip = &quot;请输入您的评论内容&quot;</span><br><span class="line">            , fidx = e.currentTarget.dataset.fidx</span><br><span class="line">            , commentType = e.currentTarget.dataset.type</span><br><span class="line">            , rWxminiId = e.currentTarget.dataset.wxminiid</span><br><span class="line">            , pid = e.currentTarget.dataset.pid;</span><br><span class="line">        if (commentType == &quot;reply&quot;) &#123;</span><br><span class="line">            contentTip = &quot;@&quot; + e.currentTarget.dataset.username;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            contentTip = &quot;请输入您的评论内容&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">            editComment: true,</span><br><span class="line">            uhide: fidx,</span><br><span class="line">            commentType: commentType,</span><br><span class="line">            rWxminiId: rWxminiId,</span><br><span class="line">            pid: pid,</span><br><span class="line">            contentTip: contentTip</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 隐藏评论窗口</span><br><span class="line">    hideCommentBox: function (e) &#123;</span><br><span class="line">        let that = this;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">            editComment: false</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取输入的评论内容</span><br><span class="line">    getCommentContent: function (e) &#123;</span><br><span class="line">        let content = e.detail.value;</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">            content: content</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取评论列表GetCommentList</span><br><span class="line">    getCommentList: function () &#123;</span><br><span class="line">        let that = this</span><br><span class="line">            , blogId = this.data.diaryId;</span><br><span class="line">        util.request(api.GetCommentList, &#123; blogId: blogId, blogType: 1 &#125;).then(res =&gt; &#123;</span><br><span class="line">            if (res.code == 0) &#123;</span><br><span class="line">                that.setData(&#123;</span><br><span class="line">                    commentList: res.data</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                console.log(&quot;获取评论失败&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取评论数据</span><br><span class="line">    addNewComment: function () &#123;</span><br><span class="line">        let data = &#123;</span><br><span class="line">            blogId: this.data.diaryId,</span><br><span class="line">            blogType: 1,</span><br><span class="line">            wxminiId: parseInt(wx.getStorageSync(&quot;wxminiId&quot;)),</span><br><span class="line">            rWxminiId: this.data.rWxminiId,</span><br><span class="line">            pid: this.data.pid,</span><br><span class="line">            content: this.data.content,</span><br><span class="line">        &#125;;</span><br><span class="line">        this.saveComment(data);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 评论回复请求</span><br><span class="line">    saveComment: function (data) &#123;</span><br><span class="line">        let that = this</span><br><span class="line">            , isLogin = this.data.isLogin;</span><br><span class="line">        if (data.content == &quot;&quot;) &#123;</span><br><span class="line">            util.showErrorModal(&quot;请输入评论内容哦！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (isLogin &amp;&amp; wx.getStorageSync(&quot;wxminiId&quot;)) &#123;</span><br><span class="line">            wx.showLoading(&#123; title: &apos;加载中...&apos;, mask: true &#125;);</span><br><span class="line">            util.request(api.SaveComment, data, &apos;POST&apos;).then(res =&gt; &#123;</span><br><span class="line">                wx.hideLoading();</span><br><span class="line">                if (res.code == 0) &#123;</span><br><span class="line">                    wx.showToast(&#123; title: &apos;评论成功&apos; &#125;)</span><br><span class="line">                    that.setData(&#123;</span><br><span class="line">                        editComment: false,</span><br><span class="line">                        content: &quot;&quot;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    that.getCommentList();</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    util.showErrorModal(res.msg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">                title: &apos;温馨提示！&apos;,</span><br><span class="line">                content: &apos;骚瑞哦，授权后才能评论哦~&apos;,</span><br><span class="line">                confirmText: &quot;去授权&quot;,</span><br><span class="line">                success(res) &#123;</span><br><span class="line">                    if (res.confirm) &#123;</span><br><span class="line">                        wx.navigateTo(&#123;</span><br><span class="line">                            url: &apos;/pages/authorization/authorization&apos;,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; else if (res.cancel) &#123;</span><br><span class="line">                        console.log(&apos;用户点击取消&apos;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onLoad: function (options) &#123;</span><br><span class="line">        var scene = decodeURIComponent(options.scene);</span><br><span class="line">        if (scene != undefined &amp;&amp; scene != &quot;undefined&quot; &amp;&amp; scene != &quot;&quot;) &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                diaryId: scene</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                diaryId: options.diaryId</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        this.getCommentList();</span><br><span class="line">    &#125;,</span><br><span class="line">    onShow: function () &#123;</span><br><span class="line">        // 查看是否登录，用于授权</span><br><span class="line">        let isLogin = wx.getStorageSync(&quot;isLogin&quot;);</span><br><span class="line">        if (isLogin) &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                isLogin: isLogin</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                isLogin: false</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onPullDownRefresh: function () &#123;</span><br><span class="line">        wx.showNavigationBarLoading() //在标题栏中显示加载</span><br><span class="line">        this.getCommentList();</span><br><span class="line">        wx.hideNavigationBarLoading() //完成停止加载</span><br><span class="line">        wx.stopPullDownRefresh() //停止下拉刷新</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2><p><img src="https://upload-images.jianshu.io/upload_images/12858218-dbf4d934069eff5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-7a4babb70bf8e43f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/12858218-6bce93e9834326fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客图片"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
</search>
